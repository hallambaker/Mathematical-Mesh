<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Cryptography.Core</name>
    </assembly>
    <members>
        <member name="T:Goedel.Cryptography.Core.Initialization">
            <summary>Static class whose only function is to contain the initialization 
            routine.</summary>
        </member>
        <member name="P:Goedel.Cryptography.Core.Initialization.Initialized">
            <summary>Initialization witness flag. This may be used to force initialization
            of the module prior to other modules being initialized.</summary> 
        </member>
        <member name="M:Goedel.Cryptography.Core.Initialization.Initialize">
            <summary>
            Initialization routine for cryptographic functions on the dotNet Core platform.
            </summary>
        </member>
        <member name="T:Goedel.Cryptography.Core.KeyCollectionCore">
            <summary>
            KeyCollection implementation using platform agnostic .NET 5.0 
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Core.KeyCollectionCore.DirectoryKeys">
            <summary>Directory in which to store keys</summary> 
        </member>
        <member name="F:Goedel.Cryptography.Core.KeyCollectionCore.MeshConfigurationDirectory">
            <summary>Directory containing the Mesh configuration.</summary> 
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.GetServiceDirectory(System.String)">
            <summary>
            Return the service directory for storing Mesh data on the current platform.
            </summary>
            <param name="service">The service for which the directory is required.</param>
            <returns>The full directory path of the directory.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.#ctor(System.String)">
            <summary>
            Constructor returning an instance. If not-null, <paramref name="directory"/>
            overrides the location of the key stores. This may be used in testing or to enable 
            a key store belonging to a different user to be mounted.
            </summary>
            <param name="directory">If not, null, specifies directory in which the </param>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.SetPlatformDirect(System.String)">
            <summary>
            Set the platform directory to <paramref name="directory"/>. This is intended for 
            use in testing of for cases where an end user might override the directory.
            </summary>
            <param name="directory">The directory value to set.</param>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.Persist(System.String,Goedel.Cryptography.PKIX.IPKIXPrivateKey,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.Persist(System.String,Goedel.Cryptography.IJson,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.ErasePrivateKey(System.String)">
            <summary>
            Erase the private key <paramref name="udf"/> from storage.
            </summary>
            <param name="udf">The key to erase.</param>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.LocatePrivateKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.LocatePrivateKeyPair(System.String,Goedel.Cryptography.CryptoKey@)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.ValidateTrustPath(Goedel.Cryptography.Dare.DareSignature,System.String)">
            <summary>
            Validate the trust path specified in <paramref name="dareSignature"/> relative to the
            trust anchor <paramref name="anchor"/> and return the result.
            </summary>
            <param name="dareSignature">The signature to evaluate.</param>
            <param name="anchor">The trust anchor to evaluate relative to.</param>
            <returns>The trust result.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Core.KeyCollectionCore.RemoteAgreement(System.String,Goedel.Cryptography.KeyPairAdvanced,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Goedel.Cryptography.Core.NamespaceDoc">
            <summary>
            Provides platform specific support functions for Goedel.Cryptography
            classes on the .NET Core platform.
            </summary>
        </member>
    </members>
</doc>
