<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Cryptography.Jose</name>
    </assembly>
    <members>
        <member name="T:Goedel.Cryptography.Jose.AlgorithmID">
            <summary>
            Constants and related methods for identifying cryptographic algorithms and suites.
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.AlgorithmID.UpperToID">
            <summary>
            Lookup  identifier by Jose name or commonly used alias
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.AlgorithmID.StringToID">
            <summary>
            Lookup identifier by Jose name.
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.AlgorithmID.IdToString">
            <summary>
            Lookup Jose Name by identifier.
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.AlgorithmID.FromJoseID(System.String)">
            <summary>
            Convert a case sensitive JOSE name to an identifier.
            </summary>
            <param name="JoseID">Jose Name</param>
            <returns>Identifier</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.AlgorithmID.FromJoseIDEncryption(System.String,System.Boolean)">
            <summary>
            Convert a case sensitive JOSE name to an identifier.
            </summary>
            <param name="joseID">Jose Name</param>
            <param name="force">Force use of encryption if not specified.</param>
            <returns>Identifier</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.AlgorithmID.FromJoseIDDigest(System.String,System.Boolean)">
            <summary>
            Convert a case sensitive JOSE name to an identifier.
            </summary>
            <param name="joseID">Jose Name</param>
            <param name="force">Force use of digest if not specified.</param>
            <returns>Identifier</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.AlgorithmID.ToCryptoAlgorithmID(System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Convert a case insensitive algorithm name to an identifier.
            </summary>
            <param name="uncasedID">Jose Name</param>
            <param name="defaultID">Optional deafult algorithm to be returned if 
            <paramref name="uncasedID"/> is null.</param>
            <returns>Identifier</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.AlgorithmID.ToJoseID(Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Convert an identifier to a Jose name
            </summary>
            <param name="ID">Identifier</param>
            <returns>Jose Name</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.AlgorithmID.GetUses(System.String)">
            <summary>
            Convert a JOSE Key uses string to a KeyUses enumeration.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.PublicKeyDH">
            <summary>
            Represents a Diffie Hellman Public Key.
            </summary>
             <summary>
            
             A Diffie Helllman Public key
             </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.#ctor(Goedel.Cryptography.KeyPairBaseDH)">
            <summary>
            Construct from the specified DH Key
            </summary>
            <param name="KeyPair">An RSA key Pair.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.#ctor(Goedel.Cryptography.PKIX.PKIXPublicKeyDH)">
            <summary>
            Construct from a PKIX RSAPublicKey structure.
            </summary>
            <param name="DHPublicKey">RSA Public Key.</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyDH.PKIXParameters">
            <summary>
            Return the parameters as a PKIX RSAPublicKey structure;
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.GetKeyPair(Goedel.Cryptography.KeySecurity,Goedel.Cryptography.KeyCollection)">
            <summary>
            Extract a KeyPair object from the JOSE data structure.
            </summary>
            <param name="keySecurity">The key security model</param>
            <param name="keyCollection">The key collection to add the key to.</param>
            <returns>The extracted key pair</returns>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyDH.Domain">
             <summary>
            The fingerprint of the domain
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyDH.Public">
             <summary>
            The public key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyDH._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.PublicKeyDH.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyDH.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.PrivateKeyDH">
            <summary>
            Represents a DHG Private Key.
            </summary>
             <summary>
            
             Diffie Helllman private key parameters
             </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.#ctor(Goedel.Cryptography.KeyPairBaseDH)">
            <summary>
            Construct from the specified RSA Key
            </summary>
            <param name="KeyPair">An RSA key Pair.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.#ctor(Goedel.Cryptography.PKIX.PKIXPrivateKeyDH)">
            <summary>
            Construct from a PKIX PKIXPrivateKeyDH structure.
            </summary>
            <param name="pkixKey">DH Public Key.</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyDH.DHPrivateKey">
            <summary>
            Return the parameters as PKIX RSAPrivateKey structure;
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.GetKeyPair(Goedel.Cryptography.KeySecurity,Goedel.Cryptography.KeyCollection)">
            <summary>
            Extract a KeyPair object from the JOSE data structure.
            </summary>
            <param name="keySecurity">The key security rextrictions.</param>
            <param name="keyCollection">The key collection to add the key to.</param>
            <returns>The extracted key pair</returns>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyDH.Private">
             <summary>
            The private key.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyDH._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.PrivateKeyDH.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyDH.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.PublicKeyECDH">
             <summary>
            
             An Elliptic Curve Diffie Hellman public key
             </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.#ctor(Goedel.Cryptography.KeyPairBaseECDH)">
            <summary>
            Construct a key
            </summary>
            <param name="KeyPair"></param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.#ctor(Goedel.Cryptography.PKIX.PKIXPublicKeyECDH)">
            <summary>
            Construct from a PKIX RSAPublicKey structure.
            </summary>
            <param name="pkixKey">RSA Public Key.</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyECDH.PKIXParametersPublic">
            <summary>
            Return the parameters as a PKIX RSAPublicKey structure;
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.GetKeyPair(Goedel.Cryptography.KeySecurity,Goedel.Cryptography.KeyCollection)">
            <summary>
            Extract a KeyPair object from the JOSE data structure.
            </summary>
            <param name="keySecurity">The key security requirements. If KeySecurity.NULL is specified,
            the key security setting is ignored.</param>
            <param name="keyCollection">The key collection to add the key to.</param>
            <returns>The extracted key pair</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.CombinePublic(Goedel.Cryptography.Jose.PublicKeyECDH)">
            <summary>
            Combine the public key parameters of this key with another key to
            produce public key values for the combined key.
            </summary>
            <param name="Public">The public key value to combine</param>
            <returns>The composite public key.</returns>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyECDH.Curve">
             <summary>
            The curve specifier (X25519, Ed25519, X448, Ed448), etc.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyECDH.Public">
             <summary>
            The public key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyECDH._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.PublicKeyECDH.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyECDH.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.PrivateKeyECDH">
             <summary>
            
             Diffie Helllman private key parameters
             </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.#ctor(Goedel.Cryptography.KeyPairBaseECDH)">
            <summary>
            Construct from the specified RSA Key
            </summary>
            <param name="KeyPair">An RSA key Pair.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.#ctor(Goedel.Cryptography.IKeyPrivateECDH)">
            <summary>
            Construct from a PKIX PKIXPrivateKeyDH structure.
            </summary>
            <param name="pkixKey">DH Public Key.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.CombinePrivate(Goedel.Cryptography.Jose.PrivateKeyECDH)">
            <summary>
            
            </summary>
            <param name="Private"></param>
            <returns></returns>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyECDH.PKIXParametersPrivate">
            <summary>
            Return the parameters as PKIX RSAPrivateKey structure;
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.GetKeyPair(Goedel.Cryptography.KeySecurity,Goedel.Cryptography.KeyCollection)">
            <summary>
            Extract a KeyPair object from the JOSE data structure.
            </summary>
            <param name="keySecurity">The key security rextrictions.</param>
            <param name="keyCollection">The key collection to add the key to.</param>
            <returns>The extracted key pair</returns>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyECDH.Private">
             <summary>
            The private key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyECDH._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.PrivateKeyECDH.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyECDH.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.InternalError">
            <summary>
            An internal error occurred. This error cannot be recovered from.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.InternalError.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.InternalError.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.InternalError.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.InternalError._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Cryptography.Jose.InternalError.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Extensions">
            <summary>Static class containing convenience functions</summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Extensions.GetDigestOfFile(System.String,System.String)">
            <summary>
            Calculate the digest value of the contents of <paramref name="fileName"/> using the algorithm
            specified by <paramref name="algID"/>.
            </summary>
            <param name="fileName">The file containing the data to digest.</param>
            <param name="algID">The JOSE digest algorithm identifier.</param>
            <returns>The digest value.</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Header">
             <summary>
            
             A JOSE Header.
             </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Header.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Header.#ctor(Goedel.Cryptography.CryptoProviderEncryption)">
            <summary>
            Initialize the alg parameter to match the specified provider.
            </summary>
            <param name="Provider">The encryption provider</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header.Jku">
             <summary>
            JWK Set URL
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header.Jwk">
             <summary>
            The key parameters
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header.Epk">
             <summary>
            The key parameters of the ephemeral key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header.Typ">
             <summary>
            Another IANA content type parameter
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header.Cty">
             <summary>
            Content type parameter
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header.Crit">
             <summary>
            List of header parameters that a recipient MUST understand to interpret
            the authentication portion of the JOSE object.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header.Val">
             <summary>
            The digest value
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Header._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.Header.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Header._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Header.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Header.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Header.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.Header.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Jose">
             <summary>
            
             Support classes for JSON Object Signing and Encryption
             </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Jose.ToJson(System.Boolean)">
            <summary>
            Encode object as a JSON byte array.
            </summary>
            <param name="tag">If true, serialization is tagged with 
            the object type.</param>
            <returns>The encoded data.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Jose.ToJsonB(System.Boolean)">
            <summary>
            Encode object as a JSON-B byte array
            </summary>
            <param name="tag">If true, serialization is tagged with 
            the object type.</param>
            <returns>The encoded data.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Jose.ToJsonC(System.Collections.Generic.Dictionary{System.String,System.Int32},System.Boolean)">
            <summary>
            Encode object as a JSON-C byte array
            </summary>
            <param name="tag">If true, serialization is tagged with 
            the object type.</param>
            <param name="Dictionary">Dictionary for encoding tags.</param>
            <returns>The encoded data.</returns>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Jose._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.Jose.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Jose._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Jose.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.JoseWebSignature">
             <summary>
            
             A signed JOSE data object. The data contents are all binary encoded to 
             enable direct authentication of the contents.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebSignature.Unprotected">
             <summary>
            Data not protected by the signature
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebSignature.Payload">
             <summary>
            The signed data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebSignature.Signatures">
             <summary>
            The signature value
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebSignature._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.JoseWebSignature.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebSignature.Data">
            <summary>
            The signed data.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebSignature.JSONReader">
            <summary>The JSONReader.</summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.JoseWebSignature.cryptoDataDigest">
            <summary>Caches the CryptoData instance</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebSignature.CryptoDataDigest">
            <summary>
            Call GetCryptoData and return the result, unless GetCryptoData has been
            called previously on this instance in which case return the last result. 
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.#ctor(Goedel.Protocol.JsonObject,Goedel.Protocol.DataEncoding,Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Sign JSON object.
            </summary>
            <param name="JSONObject">The object to sign</param>
            <param name="encoding">The data encoding to use</param>
            <param name="signingKey">The signature key</param>
            <param name="contentType">Optional IANA content type identifier. 
            Omitted if null</param>
            <param name="algorithm">The signature and encryption algorithm</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.#ctor(System.Byte[],Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Sign binary data.
            </summary>
            <param name="data">The data to sign</param>
            <param name="signingKey">The signature key</param>
            <param name="contentType">Optional IANA content type identifier. 
            Omitted if null</param>
            <param name="algorithm">The signature and encryption algorithm</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.#ctor(System.String,Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Sign text as UTF8 encoding.
            </summary>
            <param name="text">The text to sign</param>
            <param name="signingKey">The signature key</param>
            <param name="contentType">Optional IANA content type identifier. 
            Omitted if null</param>
            <param name="algorithm">The signature and encryption algorithm</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.AddSignature(Goedel.Cryptography.KeyPair,Goedel.Cryptography.CryptoAlgorithmId,System.String)">
            <summary>
            Add a signature to an existing data item.
            </summary>
            <param name="signerKey">The signing key</param>
            <param name="contentType">The content type</param>
            <param name="providerAlgorithm">The provider algorithm</param>
            <returns>The signature instance.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.GetCryptoData">
            <summary>
            Recalculate the CryptoData object parameters. This causes 
            </summary>
            <returns>The result of the cryptographic operation.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.Verify(System.String,Goedel.Cryptography.KeyPair)">
            <summary>
            Verify the specified signature.
            </summary>
            <param name="udf">The UDF of the purported signature verification key.</param>
            <param name="publicKey">The public signature verification key.</param>
            <returns>True if verification succeeds, otherwise false.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.Verify(Goedel.Cryptography.KeyPair)">
            <summary>
            Verify the specified signature.
            </summary>
            <param name="publicKey">The public signature verification key.</param>
            <returns>True if verification succeeds, otherwise false.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.MatchSigner(Goedel.Cryptography.KeyPair)">
            <summary>
            Match a recipient header by key.
            </summary>
            <param name="signingKey">Key</param>
            <returns>The Recipient data for the specified key, if found.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebSignature.MatchSigner(System.String)">
            <summary>
            Match a recipient header by key identifier.
            </summary>
            <param name="udf">Key fingerprint</param>
            <returns>The Recipient data for the specified key, if found.</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.JoseWebEncryption">
             <summary>
            
             A signed JOSE data object. The encrypted data contents are all binary encoded.
             </summary>
            <summary>
            Represents a JWE data structure.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.Protected">
             <summary>
            Data protected by the signature
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.IV">
             <summary>
            The initialization vector for the bulk cipher.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.Recipients">
             <summary>
            Per recipient decryption data.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.EncryptedKey">
             <summary>
            The decryption data for use by this recipient.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.AdditionalAuthenticatedData">
             <summary>
            Additional data that is included in the authentication scope but not the encryption
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.CipherText">
             <summary>
            The encrypted data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.JTag">
             <summary>
            Authentication tag
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.JoseWebEncryption.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.Data">
            <summary>The signed data.</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.Plaintext">
            <summary>
            The decrypted plaintext value
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.UTF8">
            <summary>
            The decrypted plaintext as a string.
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.JoseWebEncryption.CacheCryptoDataEncrypt">
            <summary>Caches the CryptoData instance</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.JoseWebEncryption.CryptoDataEncrypt">
            <summary>
            Call GetCryptoData and return the result, unless GetCryptoData has been
            called previously on this instance in which case return the last result. 
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.#ctor(Goedel.Protocol.JsonObject,Goedel.Protocol.DataEncoding,Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Construct a JWE instance from JSON Object
            </summary>
            <param name="JSONObject">The object to sign</param>
            <param name="Encoding">The data encoding to use</param>
            <param name="ContentType">The type of content being encrypted.</param>
            <param name="EncryptionKey">Optional Encryption key.</param>
            <param name="SigningKey">Optional signing key.</param>
            <param name="EncryptID">Composite ID for encryption and key exchange</param>
            <param name="SignID">Composite ID for signature and digest</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.#ctor(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,System.String)">
            <summary>
            Construct a JWE instance from binary data. 
            </summary>
            <param name="Data">Key information to construct the bulk and optionally
            key exchange headers</param>
            <param name="ContentType">The type of content being encrypted.</param>
            <param name="EncryptionKey">Optional Encryption key.</param>
            <param name="SigningKey">Optional signing key.</param>
            <param name="EncryptID">Composite ID for encryption and key exchange</param>
            <param name="SignID">Composite ID for signature and digest</param>
            <param name="KID">Key ID</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.#ctor(System.Byte[],System.Byte[],System.String,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Construct a JWE instance from binary data. 
            </summary>
            <param name="Data">Key information to construct the bulk and optionally
            key exchange headers</param>
            <param name="ContentType">The type of content being encrypted.</param>
            <param name="Secret">The symmetric master key</param>
            <param name="Prefix">Key derivation prefix</param>
            <param name="EncryptID">Bulk ID for encryption</param>
            <param name="AuthenticateID">Bulk ID for authentication</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.#ctor(System.String,System.Byte[],System.String,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Construct a JWE instance from text data. 
            </summary>
            <param name="Text">Key information to construct the bulk and optionally
            key exchange headers</param>
            <param name="ContentType">The type of content being encrypted.</param>
            <param name="Secret">The symmetric master key</param>
            <param name="Prefix">Key derivation prefix</param>
            <param name="Algorithm">Specify the Meta and Bulk algorithms</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.#ctor(System.String,Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Construct a JWE instance from text data. 
            </summary>
            <param name="Text">Key information to construct the bulk and optionally
            key exchange headers</param>
            <param name="ContentType">The type of content being encrypted.</param>
            <param name="EncryptionKey">Optional Encryption key.</param>
            <param name="SigningKey">Optional signing key.</param>
            <param name="Algorithm">Specify the Meta and Bulk algorithms</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.AddRecipient(Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Add a recipient to an existing JWE header.
            </summary>
            <remarks>If custom crypto suites are used, the caller is responsible for 
            ensuring that the exchange algorithm is compatible with the bulk algorithm 
            already selected. </remarks>
            <param name="EncryptionKey">The recipient key to add.</param>
            <param name="ProviderAlgorithm">Algorithm parameters (if supported)</param>
            <param name="KID">Key ID</param>
            <returns>The recipient instance</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.AddRecipient(System.Byte[],System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Add a recipient to an existing JWE header.
            </summary>
            <remarks>If custom crypto suites are used, the caller is responsible for 
            ensuring that the exchange algorithm is compatible with the bulk algorithm 
            already selected. </remarks>
            <param name="Info">Recipient specific information</param>
            <param name="Secret">The secret.</param>
            <param name="ProviderAlgorithm">Algorithm parameters (if supported)</param>
            <returns>The recipient instance</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.Complete">
            <summary>
            Finish processing of the data and write out the integrity data
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.ProtectedHeader(Goedel.Cryptography.CryptoData,System.String,Goedel.Cryptography.CryptoProviderDigest)">
            <summary>
            Construct a protected header with content type <paramref name="ContentType"/>,
            cryptographic parameters <paramref name="Data"/> and digest <paramref name="Digest"/>
            </summary>
            <param name="Data">The cryptographic context</param>
            <param name="ContentType">The type of the content.</param>
            <param name="Digest">The digest provider.</param>
            <returns>A protected header.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.MatchDecryptionKey(System.Collections.Generic.List{Goedel.Cryptography.Jose.Recipient},Goedel.Cryptography.Jose.Recipient@,Goedel.Cryptography.KeyCollection)">
            <summary>
            Find a keypair on the local machine that can decrypt a recipient entry in the supplied list.
            </summary>
            <param name="Recipients">The list of recipients</param>
            <param name="RecipientOut">The recipient entry that matched</param>
            <returns>The matching keypair</returns>
            <param name="keyCollection">The key collection that keys are to be persisted to </param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.Decrypt(Goedel.Cryptography.CryptoKey,Goedel.Cryptography.Jose.Recipient)">
            <summary>
            Decrypt the content using the specified private key.
            </summary>
            <param name="DecryptionKey">The decryption key.</param>
            <param name="Recipient">The recipient</param>
            <returns>The decrypted data</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.Decrypt(Goedel.Cryptography.Jose.Recipient,Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyAgreementResult)">
            <summary>
            Decrypt the content using the specified private key.
            </summary>
            <param name="KeyAgreementResult">The Key agreement result</param>
            <param name="DecryptionKey">The decryption key.</param>
            <param name="Recipient">The recipient.</param>
            <returns>The decrypted data</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.Decrypt(System.Byte[],System.String)">
            <summary>
            Decrypt the content using the specified private key.
            </summary>
            <param name="Secret">The decryption key.</param>
            <param name="Info">Recipient information</param>
            <returns>The decrypted data</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.MatchRecipient(Goedel.Cryptography.CryptoKey)">
            <summary>
            Match a recipient header by key.
            </summary>
            <param name="DecryptionKey">Key</param>
            <returns>The Recipient data for the specified key, if found.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.MatchRecipient(System.String)">
            <summary>
            Match a recipient header by key identifier.
            </summary>
            <param name="UDF">Key fingerprint</param>
            <returns>The Recipient data for the specified key, if found.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.JoseWebEncryption.GetRecrypted(System.String@,System.String@)">
            <summary>
            Return the first address that has a recryption group specified.
            </summary>
            <param name="Address">The address that matched.</param>
            <param name="UDF">The fingerprint of the matching key.</param>
            <returns>The recipient record that was matched.</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Signed">
             <summary>
            
             Compact representation for signed data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signed.Protected">
             <summary>
            Data protected by the signature
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signed.Payload">
             <summary>
            The authenticated data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signed.Signature">
             <summary>
            The signature data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signed._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.Signed.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signed._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signed.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signed.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signed.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signed.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Encrypted">
             <summary>
            
             Compact representation for encrypted data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Encrypted.Header">
             <summary>
            Header
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Encrypted.IV">
             <summary>
            The initialization vector for the cipher
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Encrypted.CipherText">
             <summary>
            The encrypted data 
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Encrypted.Signature">
             <summary>
            The signature data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Encrypted._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.Encrypted.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Encrypted._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Encrypted.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Encrypted.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Encrypted.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.Encrypted.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.KeyData">
             <summary>
            
             Describe a cryptographic key
             </summary>
            <summary>
            Represents a JOSE KeyData structure
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.Enc">
             <summary>
            Bulk encryption algorithm for content
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.Dig">
             <summary>
            Digest algorithm hint
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.Alg">
             <summary>
            Key exchange algorithm
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.Kid">
             <summary>
            Key identifier. If a UDF fingerprint is used to identify the 
            key it is placed in this field.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.X5u">
             <summary>
            URL identifying an X.509 public key certificate
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.X5c">
             <summary>
            An X.509 public key certificate
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.X5t">
             <summary>
            SHA-1 fingerprint of X.509 certificate
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData.X5tS256">
             <summary>
            SHA-2-256 fingerprint of X.509 certificate
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyData._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.KeyData.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyData._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyData.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyData.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyData.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyData.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyData.#ctor(Goedel.Cryptography.CryptoKey)">
            <summary>
            Builds a KeyData object from a key.
            </summary>
            <param name="CryptoKey">The input data</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Signature">
             <summary>
            
             The signature value
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signature.Header">
             <summary>
            The signature header
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signature.Protected">
             <summary>
            Data protected by the signature
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signature.SignatureValue">
             <summary>
            The signature value
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Signature._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.Signature.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signature._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signature.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signature.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signature.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.Signature.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.KeyContainer">
             <summary>
            
             A wrapper object for storing key data.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyContainer.Exportable">
             <summary>
            If false a handler library MUST NOT permit the private key to be exported.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyContainer.KeyData">
             <summary>
            The key data.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyContainer._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.KeyContainer.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer.#ctor(Goedel.Cryptography.Jose.Key,Goedel.Cryptography.KeySecurity)">
            <summary>
            Construct a Key Container with the specified Key security level.
            </summary>
            <param name="key">The key to constrruct the container for.</param>
            <param name="keySecurity">The key security level.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyContainer.#ctor(System.Byte[],Goedel.Cryptography.KeySecurity)">
            <summary>
            Construct a Key Container with the specified Key security level.
            </summary>
            <param name="keyData">The key to constrruct the container for.</param>
            <param name="keySecurity">The key security level.</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Key">
             <summary>
            
             A JOSE key. All fields map onto the equivalent fields defined in
             RFC 7517
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Key.Exportable">
             <summary>
            If true, a stored key may be exported from the machine on 
            which it is stored.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Key.Kty">
             <summary>
            Key type
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Key.Use">
             <summary>
            Public Key use
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Key.Key_ops">
             <summary>
            Key operations
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Key.K">
             <summary>
            Symmetric key value.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Key._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.Key.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Key.KeyPair">
            <summary>Convert to Goedel.Cryptography.KeyPair</summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.GetKeyPair(Goedel.Cryptography.KeySecurity,Goedel.Cryptography.KeyCollection)">
            <summary>
            Extract a KeyPair object from the JOSE data structure.
            </summary>
            <param name="keySecurity">The key security requirements. If KeySecurity.NULL is specified,
            the key security setting is ignored.</param>
            <param name="keyCollection">The key collection to add the key to.</param>
            <returns>The extracted key pair</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.GetPublic(Goedel.Cryptography.CryptoKey)">
            <summary>
            Return the public portion of the key pair.
            </summary>
            <param name="keyPair">The key pair.</param>
            <returns>Public portion.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.GetPrivate(Goedel.Cryptography.CryptoKey)">
            <summary>
            Return the private portion of the keypair.
            </summary>
            <param name="keyPair">The key pair.</param>
            <returns>The private data.</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.Factory(Goedel.Cryptography.PKIX.IPkixPublicKey)">
            <summary>
            Convert PKIX parameters to JSON structure.
            </summary>
            <param name="pkixKey">The PKIX key parameters</param>
            <returns>The JOSE key</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.Factory(Goedel.Cryptography.PKIX.IPKIXPrivateKey)">
            <summary>
            Convert PKIX parameters to JSON structure.
            </summary>
            <param name="pkixKey">The PKIX key parameters</param>
            <returns>The JOSE key</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.FactoryPrivate(Goedel.Cryptography.KeyPair)">
            <summary>Create private key from Goedel.Cryptography.KeyPair.</summary>
            <param name="keyPair">Key pair to convert</param>
            <returns>JOSE private Key value</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Key.FactoryPublic(Goedel.Cryptography.KeyPair)">
            <summary>Create public key from Goedel.Cryptography.KeyPair.</summary>
            <param name="keyPair">Key pair to convert</param>
            <returns>JOSE public Key value</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.Recipient">
             <summary>
            
             Recipient information
             </summary>
            <summary>
            Represents a JWE recipient
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Recipient.Header">
             <summary>
            Specify the recipient and per recipient data
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Recipient.EncryptedKey">
             <summary>
            The decryption data for use by this recipient.
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Recipient._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.Recipient.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.Recipient.DecryptionKey">
            <summary>
            The corresponding decryption key (if located).
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient.#ctor(System.Byte[],Goedel.Cryptography.KeyPair,Goedel.Cryptography.KeyPair,System.String)">
            <summary>
            Encrypt to the specified key of the specified profile.
            </summary>
            <param name="RecipientKey">KeyPair for the recipient.</param>
            <param name="ExchangeData">The key to be exchanged.</param>
            <param name="Ephemeral">The ephemeral key (if required by the algorithm)</param>
            <param name="KID">Recipient Key ID.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.Recipient.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Wrap the specified content encryption key and form the corresponding 
            Reccipient object containing the corresponding identifier, etc.
            </summary>
            <param name="Algorithm">The algorithm identifier</param>
            <param name="Identifier">The key identifier</param>
            <param name="WrappedKey">The wrapped key</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.PublicKeyRSA">
             <summary>
            
             An RSA Public key
             </summary>
            <summary>
            Represents an RSA Public Key.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyRSA.N">
             <summary>
            The public modulus
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyRSA.E">
             <summary>
            The public exponent
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyRSA._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.PublicKeyRSA.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.#ctor(Goedel.Cryptography.KeyPairBaseRSA)">
            <summary>
            Construct from the specified RSA Key
            </summary>
            <param name="KeyPair">An RSA key Pair.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.#ctor(Goedel.Cryptography.PKIX.PkixPublicKeyRsa)">
            <summary>
            Construct from a PKIX RSAPublicKey structure.
            </summary>
            <param name="RSAPublicKey">RSA Public Key.</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PublicKeyRSA.PKIXPublicKeyRSA">
            <summary>
            Return the parameters as a PKIX RSAPublicKey structure;
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PublicKeyRSA.GetKeyPair(Goedel.Cryptography.KeySecurity,Goedel.Cryptography.KeyCollection)">
            <summary>
            Extract a KeyPair object from the JOSE data structure.
            </summary>
            <param name="keySecurity">The key security model</param>
            <param name="keyCollection">The key collection that keys are to be persisted to (dependent on 
            the value of <paramref name="keySecurity"/></param>
            <returns>The extracted key pair</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.PrivateKeyRSA">
             <summary>
            
             RSA private key parameters
             </summary>
            <summary>
            Represents an RSA Private Key.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA.D">
             <summary>
            The parameter d
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA.P">
             <summary>
            The parameter p
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA.Q">
             <summary>
            The parameter q
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA.DP">
             <summary>
            The parameter dp
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA.DQ">
             <summary>
            The parameter dq
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA.QI">
             <summary>
            The parameter QInverse
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.PrivateKeyRSA.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.#ctor(Goedel.Cryptography.KeyPairBaseRSA)">
            <summary>
            Construct from the specified RSA Key
            </summary>
            <param name="KeyPair">An RSA key Pair.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.#ctor(Goedel.Cryptography.PKIX.PkixPrivateKeyRsa)">
            <summary>
            Construct from a PKIX RSAPublicKey structure.
            </summary>
            <param name="RSAPrivateKey">RSA Public Key.</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyRSA.PKIXPrivateKeyRSA">
            <summary>
            Return the parameters as PKIX RSAPrivateKey structure;
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyRSA.GetKeyPair(Goedel.Cryptography.KeySecurity,Goedel.Cryptography.KeyCollection)">
            <summary>
            Extract a KeyPair object from the JOSE data structure.
            </summary>
            <param name="keySecurity">The key security model</param>
            <param name="keyCollection">The key collection that keys are to be persisted to (dependent on 
            the value of <paramref name="keySecurity"/></param>
            <returns>The extracted key pair</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.PrivateKeyUDF">
             <summary>
            
             A UDF Key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.PrivateValue">
             <summary>
            The private value
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.KeyType">
             <summary>
            The UDF key identifier
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.AlgorithmEncrypt">
             <summary>
            The algorithm used to derrive the encryption key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.AlgorithmSign">
             <summary>
            The algorithm used to derrive the encryption key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.AlgorithmAuthenticate">
             <summary>
            The algorithm used to derrive the encryption key
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.PrivateKeyUDF.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.AlgorithmEncryptID">
            <summary>The encryption algorithm identifier</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.AlgorithmSignID">
            <summary>The signature algorithm identifier</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.PrivateKeyUDF.AlgorithmAuthenticateID">
            <summary>The authentication algorithm identifier</summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF.#ctor">
            <summary>
            Basic constructor for deserialization
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF.#ctor(System.String,Goedel.Cryptography.UdfAlgorithmIdentifier,System.Byte[],Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,System.Int32)">
            <summary>
            Constructor generating a new instance with a private key derrived from the
            seed  <paramref name="secret"/> if not null or a random value otherwise.
            </summary>
            <param name="udf">The secret seed specified as a UDF.</param>
            <param name="udfAlgorithmIdentifier">The type of master secret.</param>
            <param name="secret">The master secret as a byte array.</param>
            <param name="algorithmEncrypt">The encryption algorithm.</param>
            <param name="algorithmSign">The signature algorithm</param>
            <param name="algorithmAuthenticate">The signature algorithm</param>
            <param name="bits">The size of key to generate in bits/</param>
            
        </member>
        <member name="M:Goedel.Cryptography.Jose.PrivateKeyUDF.ActivatePrivate(System.String,Goedel.Cryptography.IKeyLocate,Goedel.Cryptography.KeyUses,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Generate a composite private key by generating private keys by means
            of the activation seed <paramref name="activationSeed"/> and the
            class instance generator.
            </summary>
            <param name="activationSeed">The activation seed value.</param>
            <param name="keyCollection">The key collection to register the private key to</param>
            <param name="keyUses">The permitted key uses.</param>
            <param name="saltSuffix">The salt suffix for use in key derrivation.</param>
            <param name="cryptoAlgorithmID">The cryptographic algorithm.</param>
            <returns>The generated ephemeral key.</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.KeyAgreement">
             <summary>
            
             Result of applying a key agreement.
             </summary>
            <summary>Base class for JOSE key agreement result.</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreement._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.KeyAgreement.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreement._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreement.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreement.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreement.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreement.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreement.KeyAgreementResult">
            <summary>
            Return the Goedel.Cryptography result.
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreement.Factory(Goedel.Cryptography.KeyAgreementResult)">
            <summary>
            Obtain a Key agreement provider for the specified key agreement result.
            </summary>
            <param name="keyAgreementResult">The result to return a provider for.</param>
            <returns>The provider (if found).</returns>
        </member>
        <member name="T:Goedel.Cryptography.Jose.KeyAgreementDH">
             <summary>
            
             Result of applying a key agreement.
             </summary>
            <summary>
            Base class for JOSE Diffie-Hellman key agreement result.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreementDH.Result">
             <summary>
            The result
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreementDH._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.KeyAgreementDH.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementDH._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementDH.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementDH.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementDH.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementDH.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreementDH.KeyAgreementResult">
            <summary>
            Return the Goedel.Cryptography result.
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementDH.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementDH.#ctor(Goedel.Cryptography.Algorithms.ResultDiffieHellman)">
            <summary>
            Constructor from the specified Goedel.Cryptography result.
            </summary>
            <param name="DiffieHellmanResult">The Goedel.Cryptography result.</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.KeyAgreementECDH">
             <summary>
            
             Result of applying a key agreement.
             </summary>
            <summary>
            Base class for JOSE Diffie-Hellman key agreement result.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreementECDH.Curve">
             <summary>
            The curve name
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreementECDH.Result">
             <summary>
            The result
             </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreementECDH._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Cryptography.Jose.KeyAgreementECDH.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementECDH._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementECDH.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementECDH.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementECDH.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementECDH.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="P:Goedel.Cryptography.Jose.KeyAgreementECDH.KeyAgreementResult">
            <summary>
            Return the Goedel.Cryptography result.
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementECDH.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.KeyAgreementECDH.#ctor(Goedel.Cryptography.ResultECDH)">
            <summary>
            Constructor from the specified Goedel.Cryptography result.
            </summary>
            <param name="result">The Goedel.Cryptography result.</param>
        </member>
        <member name="T:Goedel.Cryptography.Jose.NamespaceDoc">
            <summary>
            Support classes for JSON Object Signing and Encryption support classes.
            </summary>
        </member>
        <member name="T:Goedel.Cryptography.Jose.IActivate">
            <summary>
            Interface providing key activation functions. This interface is supported
            by PrivateKeyUDF allowing keys to be derived from a pair of seeds. Devices
            whose keys are bound to an HSM should provide a class exposing the IActivate
            interface that exposes the necessary functionality for key location,
            activation and use.
            </summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.IActivate.AlgorithmEncryptID">
            <summary>The encryption algorithm identifier</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.IActivate.AlgorithmSignID">
            <summary>The signature algorithm identifier</summary>
        </member>
        <member name="P:Goedel.Cryptography.Jose.IActivate.AlgorithmAuthenticateID">
            <summary>The authentication algorithm identifier</summary>
        </member>
        <member name="M:Goedel.Cryptography.Jose.IActivate.ActivatePrivate(System.String,Goedel.Cryptography.IKeyLocate,Goedel.Cryptography.KeyUses,System.String,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Generate a composite private key by generating private keys by means
            of the activation seed <paramref name="activationSeed"/> and the
            class instance generator.
            </summary>
            <param name="activationSeed">The activation seed value.</param>
            <param name="keyCollection">The key collection to register the private key to</param>
            <param name="keyUses">The permitted key uses.</param>
            <param name="saltSuffix">The salt suffix for use in key derrivation.</param>
            <param name="cryptoAlgorithmID">The cryptographic algorithm.</param>
            <returns>The generated ephemeral key.</returns>
        </member>
    </members>
</doc>
