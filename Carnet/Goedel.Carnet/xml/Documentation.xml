<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Carnet</name>
    </assembly>
    <members>
        <member name="T:Goedel.Carnet.CarnetProtocol">
             <summary>
            
             Carnet Ledger Protocol maintaining a record of carnet accounts.
             </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetProtocol._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Carnet.CarnetProtocol.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetProtocol._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Carnet.CarnetProtocol.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Carnet.CarnetService">
            <summary>
            The new base class for the client and service side APIs.
            </summary>		
        </member>
        <member name="F:Goedel.Carnet.CarnetService.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetService.GetWellKnown">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Carnet.CarnetService.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetService.GetDiscovery">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Carnet.CarnetService.GetTagDictionary">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Carnet.CarnetService.Dispatch(System.String,Goedel.Protocol.JsonObject,Goedel.Protocol.IJpcSession)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Carnet.CarnetService.GetDirect(Goedel.Protocol.IJpcSession)">
            <summary>
            Return a client tapping the service API directly without serialization bound to
            the session <paramref name="jpcSession"/>. This is intended for use in testing etc.
            </summary>
            <param name="jpcSession">Session to which requests are to be bound.</param>
            <returns>The direct client instance.</returns>
        </member>
        <member name="T:Goedel.Carnet.CarnetServiceClient">
            <summary>
            Client class for CarnetService.
            </summary>		
        </member>
        <member name="F:Goedel.Carnet.CarnetServiceClient.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetServiceClient.GetWellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="F:Goedel.Carnet.CarnetServiceClient.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetServiceClient.GetDiscovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="T:Goedel.Carnet.CarnetServiceDirect">
            <summary>
            Direct API class for CarnetService.
            </summary>		
        </member>
        <member name="P:Goedel.Carnet.CarnetServiceDirect.Service">
            <summary>
            Interface object to dispatch requests to.
            </summary>	
        </member>
        <member name="T:Goedel.Carnet.ProfileCarnet">
             <summary>
            
             Describes a carnet issuer.
             </summary>
        </member>
        <member name="P:Goedel.Carnet.ProfileCarnet._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Carnet.ProfileCarnet._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Carnet.ProfileCarnet._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Carnet.ProfileCarnet._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Carnet.ProfileCarnet._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.ProfileCarnet._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.ProfileCarnet._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.ProfileCarnet._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Carnet.ProfileCarnet.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.GetEnvelopedProfileAccount">
            <summary>Typed enveloped data</summary> 
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.#ctor">
            <summary>
            Default constructor, returns an empty instance.
            </summary>
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.#ctor(System.String,Goedel.Mesh.ActivationCommon)">
            <summary>
            Construct a Profile Account instance  from <paramref name="accountAddress"/>.
            </summary>
            <param name="accountAddress">The account address</param>
            <param name="activationAccount">The activation used to create the account data.</param>
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.#ctor(System.String,Goedel.Cryptography.Jose.PrivateKeyUDF,Goedel.Cryptography.Dare.IKeyCollection,System.Boolean)">
            <summary>
            Construct a Profile Host instance  from a <see cref="T:Goedel.Cryptography.Jose.PrivateKeyUDF"/>
            </summary>
            <param name="accountAddress">The account address.</param>
            <param name="secretSeed">The secret seed value.</param>
            <param name="keyCollection">The base key collection</param>
            <param name="persist">If true, persist the service record to the local machine
            store.</param>
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.Generate">
            <summary>
            Generate profile specific keys.
            </summary>
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.Generate(System.String,Goedel.Cryptography.Dare.IKeyCollection,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,System.Int32,Goedel.Cryptography.Jose.PrivateKeyUDF,System.Boolean)">
            <summary>
            Construct a new ProfileDevice instance from a <see cref="T:Goedel.Cryptography.Jose.PrivateKeyUDF"/>
            seed.
            </summary>
            <param name="serviceAddress">The service address</param>
            <param name="secretSeed">The secret seed value.</param>
            <param name="algorithmEncrypt">The encryption algorithm.</param>
            <param name="algorithmSign">The signature algorithm</param>
            <param name="algorithmAuthenticate">The signature algorithm</param>
            <param name="bits">The size of key to generate in bits/</param>
            <param name="keyCollection">The keyCollection to manage and persist the generated keys.</param>
            <param name="persist">If <see langword="true"/> persist the secret seed value to
            <paramref name="keyCollection"/>.</param>
            <returns>The created profile.</returns>
        </member>
        <member name="M:Goedel.Carnet.ProfileCarnet.Validate">
            <summary>
            Verify the profile to check that it is correctly signed and consistent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Goedel.Carnet.CatalogedCarnet">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet.Key">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet.EnvelopedConnectionAddress">
             <summary>
            The connection allowing control of the registry.
             </summary>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet.EnvelopedProfileCarnet">
             <summary>
            The Mesh profile
             </summary>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet.EnvelopedActivationCommon">
             <summary>
            The activation data for the registry.
             </summary>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Carnet.CatalogedCarnet._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Carnet.CatalogedCarnet._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Carnet.CatalogedCarnet._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Carnet.CatalogedCarnet.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Carnet.CatalogedCarnet._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Carnet.CatalogedCarnet.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet._PrimaryKey">
            <summary>The primary key is protocol:site </summary>
        </member>
        <member name="P:Goedel.Carnet.CatalogedCarnet.ProfileCarnet">
            <summary>
            the unwrapped carnet profile.
            </summary>
        </member>
        <member name="M:Goedel.Carnet.CatalogedCarnet.#ctor">
            <summary>
            Create and return an empty instance.
            </summary>
        </member>
        <member name="M:Goedel.Carnet.CatalogedCarnet.Describe(System.Text.StringBuilder,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Carnet.CatalogedCarnet.ItemToBuilder(System.Text.StringBuilder,System.Int32,Goedel.Cryptography.Dare.IKeyCollection)">
            <inheritdoc/>
        </member>
        <member name="T:Goedel.Carnet.CarnetRequest">
             <summary>
            
             Base class for all requests made to a registrar
             </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetRequest._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Carnet.CarnetRequest._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Carnet.CarnetRequest._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Carnet.CarnetRequest._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Carnet.CarnetRequest._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CarnetRequest._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CarnetRequest._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CarnetRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Carnet.CarnetRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Carnet.CarnetRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Carnet.CarnetRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Carnet.CarnetResponse">
             <summary>
            
             Base class for all response messages. Contains only the
             status code and status description fields.
             </summary>
        </member>
        <member name="P:Goedel.Carnet.CarnetResponse._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Carnet.CarnetResponse._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Carnet.CarnetResponse._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Carnet.CarnetResponse._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Carnet.CarnetResponse._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CarnetResponse._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CarnetResponse._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.CarnetResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Carnet.CarnetResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Carnet.CarnetResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Carnet.CarnetResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Carnet.CatalogCarnet">
            <summary>
            Bookmark catalog. Describes the bookmarks in the user's Mesh account.
            </summary>
        </member>
        <member name="F:Goedel.Carnet.CatalogCarnet.Label">
            <summary>The canonical label for the catalog</summary>
        </member>
        <member name="P:Goedel.Carnet.CatalogCarnet.StoreType">
            <inheritdocs/>
        </member>
        <member name="P:Goedel.Carnet.CatalogCarnet.SequenceDefault">
            <summary>The catalog label</summary>
        </member>
        <member name="M:Goedel.Carnet.CatalogCarnet.Factory(System.String,System.String,Goedel.Mesh.IMeshClient,Goedel.Cryptography.Dare.DarePolicy,Goedel.Cryptography.Dare.CryptoParameters,Goedel.Cryptography.Dare.IKeyCollection,System.Boolean,System.Boolean,System.Byte[])">
            <summary>
            Factory delegate
            </summary>
            <param name="directory">Directory of store file on local machine.</param>
            <param name="storeId">Store identifier.</param>
            <param name="cryptoParameters">Cryptographic parameters for the store.</param>
            <param name="policy">The cryptographic policy to be applied to the catalog.</param>
            <param name="keyCollection">Key collection to be used to resolve keys</param>
            <param name="decrypt">If true, attempt decryption of payload contents./</param>
            <param name="create">If true, create a new file if none exists.</param>
            <param name="meshClient">Parent account context used to obtain a mesh client.</param>
            <param name="bitmask">The bitmask to identify the store for filtering purposes.</param>
            <returns>The instance created.</returns>
        </member>
        <member name="M:Goedel.Carnet.CatalogCarnet.#ctor(System.String,System.String,Goedel.Cryptography.Dare.DarePolicy,Goedel.Cryptography.Dare.CryptoParameters,Goedel.Cryptography.Dare.IKeyCollection,Goedel.Mesh.IMeshClient,System.Boolean,System.Boolean,System.Byte[])">
            <summary>
            Constructor for a catalog named <paramref name="storeName"/> in directory
            <paramref name="directory"/> using the cryptographic parameters <paramref name="cryptoParameters"/>
            and key collection <paramref name="keyCollection"/>.
            </summary>
            <param name="create">Create a new persistence store on disk if it does not already exist.</param>
            <param name="decrypt">Attempt to decrypt the contents of the catalog if encrypted.</param>
            <param name="directory">The directory in which the catalog persistence container is stored.</param>
            <param name="storeName">The catalog persistence container file name.</param>
            <param name="cryptoParameters">The default cryptographic enhancements to be applied to container entries.</param>
            <param name="policy">The cryptographic policy to be applied to the container.</param>
            <param name="keyCollection">The key collection to be used to resolve keys when reading entries.</param>
            <param name="meshClient">Parent account context used to obtain a mesh client.</param>
             <param name="bitmask">The bitmask to identify the store for filtering purposes.</param>
        </member>
        <member name="T:Goedel.Carnet.ContextCarnet">
            <summary>
            Context for managing the callsign Carnet account.
            </summary>
        </member>
        <member name="F:Goedel.Carnet.ContextCarnet.ContextUser">
            <summary>The enclosing user context.</summary>
        </member>
        <member name="P:Goedel.Carnet.ContextCarnet.Profile">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.ContextCarnet.Connection">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Carnet.ContextCarnet.CatalogedCarnet">
            <summary>The catalogued group description.</summary>
        </member>
        <member name="P:Goedel.Carnet.ContextCarnet.DictionaryCatalogDelegates">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.ContextCarnet.ServiceAddress">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.ContextCarnet.ServiceDns">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Carnet.ContextCarnet.CatalogCarnet">
            <summary>Returns the inbound spool for the account</summary>
        </member>
        <member name="M:Goedel.Carnet.ContextCarnet.#ctor(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.Client.CatalogedService)">
            <summary>
            Constructor returning an instance of a resolver account context running on host
            <paramref name="meshHost"/> using the description given in <paramref name="catalogedService"/>.
            </summary>
            <param name="meshHost">The mesh host.</param>
            <param name="catalogedService">The resolver configuration description.</param>
        </member>
        <member name="M:Goedel.Carnet.ContextCarnet.Create(Goedel.Mesh.Client.MeshHost,System.String,Goedel.Cryptography.Jose.PrivateKeyUDF,System.Collections.Generic.List{System.String})">
            <summary>
            Create a new client resolver context.
            </summary>
            <param name="meshHost">The mesh host.</param>
            <param name="resolverAddress">The address of the resolver account.</param>
            <param name="accountSeed">Optional account seed.</param>
            <param name="roles">The authorized roles.</param>
            <returns></returns>
        </member>
        <member name="M:Goedel.Carnet.ContextCarnet.Issue(System.String,System.Int32)">
            <summary>
            Issue a carnet to <paramref name="recipient"/> with value <paramref name="tokens"/>.
            </summary>
            <param name="recipient">The recipient name.</param>
            <param name="tokens">The number of tokens.</param>
        </member>
        <member name="T:Goedel.Carnet.Internal">
            <summary>
            An internal assertion check failed.
            </summary>
        </member>
        <member name="P:Goedel.Carnet.Internal.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Carnet.Internal.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Carnet.Internal.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Carnet.Internal._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Carnet.Internal.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Carnet.EventExtensions">
            <summary>
            Extensions class defining logging events and convenience methods.
            </summary>
        </member>
        <member name="M:Goedel.Carnet.EventExtensions.#cctor">
            <summary>
            Static initializer, is called once when the module loads.
            </summary>
        </member>
        <member name="T:Goedel.Carnet.Extensions">
            <summary>
            Extensions class. Provides static convenience extensions.
            </summary>
        </member>
        <member name="M:Goedel.Carnet.Extensions.Spend(Goedel.Mesh.Client.ContextUser,System.Int32)">
            <summary>
            Spend <paramref name="amount"/> tokens from the wallet of <paramref name="contextUser"/>.
            </summary>
            <param name="contextUser">The user context.</param>
            <param name="amount">The number of tokens to spend.</param>
            <returns>The number of tokens spent??</returns>
        </member>
        <member name="T:Goedel.Carnet.NamespaceDoc">
            <summary>
            Desctiption of the 
            </summary>
        </member>
    </members>
</doc>
