using  System.Text;
using  Goedel.Mesh;
using  Goedel.Protocol;
using System;
using System.IO;
using System.Collections.Generic;
using Goedel.Registry;
namespace ExampleGenerator {
	public partial class ExampleGenerator : global::Goedel.Registry.Script {

		

		//
		// UserGuideDisaster
		//
		public static void UserGuideDisaster (CreateExamples Examples) { /* File  */
			using (var _Output = new StreamWriter ("UserGuide/Mesh/disaster.md")) {
				var _Indent = ""; 
				_Output.Write ("<title>Disaster\n{0}", _Indent);
				_Output.Write ("<titlebanner><h1>Recovering from disaster\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h4>Because the worst can happen\n{0}", _Indent);
				_Output.Write ("</titlebanner>\n{0}", _Indent);
				_Output.Write ("<leftmain>\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("Cryptography can be a double edged sword. The factr that other people are unable to\n{0}", _Indent);
				_Output.Write ("read your confidential data isn't much good if you can't read it either.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("Accidents happen, equipment fails, disaster strikes. Use of strong encryption to\n{0}", _Indent);
				_Output.Write ("protect valuable date requires careful consideration of every eventuality. There\n{0}", _Indent);
				_Output.Write ("are circumstances in which losing data is preferable to the possibility of \n{0}", _Indent);
				_Output.Write ("disclosure but such circumstances are the exception, not the rule.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("According to the UN High Commission for Refugees, \n{0}", _Indent);
				_Output.Write ("<a=\"http://www.unhcr.org/en-us/figures-at-a-glance.html\">over 65 million people are\n{0}", _Indent);
				_Output.Write ("currently forcibly displaced.</a> Many of these people have lost their homes, their\n{0}", _Indent);
				_Output.Write ("possessions and their livelihoods. For these people, their digital assets may \n{0}", _Indent);
				_Output.Write ("represent the only possessions they have left.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("Of wider concern is the need to support data survivability. Everyone dies eventually\n{0}", _Indent);
				_Output.Write ("and the ability to access their digital access may die with them without careful\n{0}", _Indent);
				_Output.Write ("planning and preparation. While most people have at least some assets that they \n{0}", _Indent);
				_Output.Write ("do not wish to be accessible to others after they die (e.g. \n{0}", _Indent);
				_Output.Write ("<a=\"https://www.theguardian.com/books/2017/aug/30/terry-pratchett-unfinished-novels-destroyed-streamroller\">Terry Pratchett's\n{0}", _Indent);
				_Output.Write ("unfinished work</a>), most people have at least some assets that they do wish \n{0}", _Indent);
				_Output.Write ("their heirs to inherit. This situation is often sumarized as wanting the family to\n{0}", _Indent);
				_Output.Write ("know where you buried Aunt Agatha's jewelry but not where you buried Aunt\n{0}", _Indent);
				_Output.Write ("Agatha.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("If we are serious about use of strong cryptography to protect stored data, the risk\n{0}", _Indent);
				_Output.Write ("of losing access to the data must be considered to be at least as important as the\n{0}", _Indent);
				_Output.Write ("risk of disclosure. For this reason, the Mathematical Mesh provides support for\n{0}", _Indent);
				_Output.Write ("voluntary personal key escrow.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The Mathematical Mesh does not provide support for mandatory key escrow or any form\n{0}", _Indent);
				_Output.Write ("of 'backdoor' access. In particular, while Mesh users can escrow their keys and verify\n{0}", _Indent);
				_Output.Write ("their ability to recover the data to themselves, the Mesh protocols do not support \n{0}", _Indent);
				_Output.Write ("any means of demonstrating the recovery capability to any other party short of \n{0}", _Indent);
				_Output.Write ("direct disclosure of the key. \n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h2>Key recovery modes.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The Mathematical Mesh supports two distinct levels of key recovery.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<b>Disaster Recovery</b> is used to recover keys in the event of a total loss such\n{0}", _Indent);
				_Output.Write ("as a house burning down or becoming a refugee. Disaster recovery restores the master\n{0}", _Indent);
				_Output.Write ("signature and master escrow keys created when a Mesh profile is created.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<b>Application Recovery</b> is used to recover keys in the case of more routine \n{0}", _Indent);
				_Output.Write ("mishaps such as the loss or failure of a device containing encrypted data. Application \n{0}", _Indent);
				_Output.Write ("recovery uses the master escrow key to recover an application escrow key used to\n{0}", _Indent);
				_Output.Write ("escrow encryption keys for a particular application.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The two mechanisms are linked in that restoring application data after a \n{0}", _Indent);
				_Output.Write ("disaster requires application recovery to be performed after the disaster recovery\n{0}", _Indent);
				_Output.Write ("has been completed.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("This approach permits a user to escrow an application key under a different master\n{0}", _Indent);
				_Output.Write ("escrow key to the one specified in their personal profile or to suppress escrow\n{0}", _Indent);
				_Output.Write ("of the application key entirely. This feature is not currently supported by the \n{0}", _Indent);
				_Output.Write ("meshman tool but is supported by the Mesh Reference library.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h2>Key escrow risks.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The ability to recover a cryptographic key inevitably entails additional risks of\n{0}", _Indent);
				_Output.Write ("disclosure or unavailability.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<li>A key may be disclosed by accidental disclosure of the key recovery material.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<li>A key may be disclosed by coercion of one or more key recovery material holders.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<li>A key may be disclosed due to the use of a weak encryption algorithm.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<li>Key recovery may fail due to loss of key recovery material\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<li>Key recovery may fail due to failure of key recovery hardware.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("To mitigate these risks, the Mesh key escrow and recovery mechanism uses a key\n{0}", _Indent);
				_Output.Write ("splitting scheme based on Shamir's secret sharing algorithm and AES-256. The \n{0}", _Indent);
				_Output.Write ("user may create up to 15 key shares and set the recovery quorum to be any number\n{0}", _Indent);
				_Output.Write ("greater than 1 up to the total number of shares. The use\n{0}", _Indent);
				_Output.Write ("of symmetric key cryptography minimizes vulnerability to attack using Quantum\n{0}", _Indent);
				_Output.Write ("Cryptanalysis. The risk of hardware failure is eliminated by use of written key\n{0}", _Indent);
				_Output.Write ("share values.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h2>Disaster Escrow Mechanism\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The Key Escrow mechanism is based on two symmetric keys, the master key from which\n{0}", _Indent);
				_Output.Write ("the key recovery shares are derrived and an encryption key that is derrived from the\n{0}", _Indent);
				_Output.Write ("master key that is used to encrypt the data to be escrowed.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The chief advantage of this division is that it permits the symmetric key and the \n{0}", _Indent);
				_Output.Write ("encryption key to be of different lengths. This allows the size of the encryption\n{0}", _Indent);
				_Output.Write ("key to be independent of the master secret size.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("Key shares are derrived from the Master secret using \n{0}", _Indent);
				_Output.Write ("<a=\"https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing\">Shamir's Secret Sharing</a>.\n{0}", _Indent);
				_Output.Write ("This divides the secret into <i>n</i> shares, <i>m</i> of which are required to \n{0}", _Indent);
				_Output.Write ("recover the secret.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The HKDF Key derrivation function is used to derive the encryption key from the \n{0}", _Indent);
				_Output.Write ("master secret. This key is used to encrypt the Key Recovery Data using AES-256.\n{0}", _Indent);
				_Output.Write ("The Key escrow record containing the encrypted key recovery data is indexed under the\n{0}", _Indent);
				_Output.Write ("UDF fingerprint of the encryption key. This ensures that a party that has the\n{0}", _Indent);
				_Output.Write ("necessary key shares can find the corresponding key recovery record.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<img=\"/Graphics/Disaster.svg\">\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h1>Preparing for Recovery\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The meshman tool supports creation of a key recovery record using the Personal Escrow\n{0}", _Indent);
				_Output.Write ("command. The user specifies the personal profile to create a recovery record for, \n{0}", _Indent);
				_Output.Write ("the number of shares to create and the quorum.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("{1}\n{0}", _Indent, Examples.Example("CreateEscrow"));
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The tool reports the successful creation and publication of the key recovery record\n{0}", _Indent);
				_Output.Write ("and returns a list of the key recovery shares. These should be written down or printed\n{0}", _Indent);
				_Output.Write ("out in case of future need.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h2>Protecting your key shares\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The security of the user's personal data depends on the secrecy of the recovery shares.\n{0}", _Indent);
				_Output.Write ("It is therefore essential that the user take appropriate steps to secure them. These \n{0}", _Indent);
				_Output.Write ("may include:\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<li>Storing a share in a safety deposit box held by a bank\n{0}", _Indent);
				_Output.Write ("<li>Giving a share to a friend for safe keeping\n{0}", _Indent);
				_Output.Write ("<li>Storing a share in a safe\n{0}", _Indent);
				_Output.Write ("<li>Hiding a share in an unexpected place\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("In each case, it is for the user to decide the necessary balance of convenience,\n{0}", _Indent);
				_Output.Write ("risk or disclosure and risk of unavailability.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h2>Purging a device\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("Deleting master keys from a device eliminates the risk of disclosure should the device\n{0}", _Indent);
				_Output.Write ("be lost or stolen. The meshman purge command verifies the existence of a key recovery \n{0}", _Indent);
				_Output.Write ("record for the keys and deletes the local copies from the machine if successful.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("{1}\n{0}", _Indent, Examples.Example("PurgeMaster"));
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("A user can also delete keys from a device without verifying the key recovery record.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("{1}\n{0}", _Indent, Examples.Example("PurgeForce"));
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h1>Disaster Recovery\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("Using the meshman tool for disaster recovery is the reverse of the escrow process. The user\n{0}", _Indent);
				_Output.Write ("specifies the portal account to which the profile is to be bound and the key shares \n{0}", _Indent);
				_Output.Write ("to be used for recovery \n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("{1}\n{0}", _Indent, Examples.Example("RecoverEscrow"));
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("The tool reports the success or failure of the operation and summarises the recovered \n{0}", _Indent);
				_Output.Write ("personal profile.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("<h2>Application Recovery\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				_Output.Write ("Recovery of application keys is performed transparently when a device is connected\n{0}", _Indent);
				_Output.Write ("to a profile. The only requirement being that the necessary master escrow key must \n{0}", _Indent);
				_Output.Write ("be available on the administration device used to accept the connection.\n{0}", _Indent);
				_Output.Write ("\n{0}", _Indent);
				}
			}
		}
	}
