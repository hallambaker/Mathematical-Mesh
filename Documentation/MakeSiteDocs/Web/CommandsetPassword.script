#using System.Text
#using Goedel.Mesh
#using Goedel.Mesh.Shell
#using Goedel.Protocol
#xclass MakeSiteDocs MakeSiteDocs



#xfile MakeSiteDocs WebPassword "Guide/password.md" CreateWeb Examples

## Using the  Command Set

The  command set contains commands that 

#### Adding passwords

Having created her application service account, Alice can add a credential. In this
case it is the username and password for an ftp service:

#%  ConsoleExample (Examples.PasswordAdd);

#### Finding passwords

Having added the password to her profile, Alice can retrieve it when needed.

#%  ConsoleExample (Examples.PasswordGet);

She can also list all the passwords in her catalog:

#%  ConsoleExample (Examples.PasswordList);

Using the password catalog in this fashion provides a reminder. But what Alice really
wants to be able to do is to automate the process of using the ftp client to upload 
files without having to enter her password each time or (worse) include the password
in the script:

#!{ToDo ("ConfirmScipt","Write the confirm script")}

#### Updating passwords

Having automated access to the ftp site, Alice doesn't need her password to be either
memorable or conveniently short. She decides to replace her bad password with a strong
password that is randomly generated:

#%  ConsoleExample (Examples.PasswordUpdate);


#### Deleting passwords

Password entries may be deleted using the 

#%  ConsoleExample (Examples.PasswordDelete);


#### Adding a Device.

When a device is added, all the passwords are copied

#%  ConsoleExample (Examples.AppConnectPassword);





#end xfile

#xfile MakeSiteDocs PasswordReference "Reference/password.md" CreateWeb Examples
#% var CommandSet = CommandLineInterpreter.DescribeCommandSet_Password;


#% Describe(CommandSet);


#% Describe(CommandSet, _PasswordAdd._DescribeCommand);
#% Describe(CommandSet, _PasswordGet._DescribeCommand);
#% Describe(CommandSet, _PasswordDelete._DescribeCommand);
#% Describe(CommandSet, _PasswordDump._DescribeCommand);

#end xfile

#end xclass

