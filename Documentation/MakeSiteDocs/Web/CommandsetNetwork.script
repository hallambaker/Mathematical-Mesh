#using System.Text
#using Goedel.Mesh
#using Goedel.Mesh.Shell
#using Goedel.Protocol
#% #pragma warning disable IDE0022
#% #pragma warning disable IDE0060
#% #pragma warning disable IDE1006
#xclass ExampleGenerator CreateExamples



#zfile CreateExamples WebNetwork "Guide/network.md" Examples
#% MakeTitle ("network");

The `network` command set is used to manage a network configuration catalog which contains
a entries describing how to access particular networks.

#### Adding networks

The #{ToCommand("network add")} command adds a simple network entry to a catalog. This is typically
a WIfi network SSID and password:

#%  ConsoleExample (ShellNetwork.NetworkAdd);

More complicated network configurations are added using the #{ToCommand("network import")} command:

#%  ConsoleExample (ShellNetwork.NetworkImport);


#### Finding networks

The #{ToCommand("network get")}  command retreives a network entry by label:

#%  ConsoleExample (ShellNetwork.NetworkGet);

#### Deleting networks

Network entries may be deleted using the  #{ToCommand("network delete")} command:

#%  ConsoleExample (ShellNetwork.NetworkDelete);

#### Listing networks

A complete list of networks is obtained using the  #{ToCommand("network list")} command:

#%  ConsoleExample (ShellNetwork.NetworkList);

#### Adding devices

#%  ConsoleExample (ShellNetwork.NetworkList1);

Devices are given authorization to access the networks catalog using the 
 #{ToCommand("device auth")} command:

#%  ConsoleExample (Connect.ConnectJoinAuth );

#%  ConsoleExample (ShellNetwork.NetworkList2);

#end zfile

#zfile CreateExamples NetworkReference "Reference/network.md" Examples
#% var CommandSet = CommandLineInterpreter.DescribeCommandSet_Network;


#% Describe(CommandSet);


#% Describe(CommandSet, _NetworkAdd._DescribeCommand);

The 'network add' command is used to add a network entry to the catalog.

Note that the options supported are limited. The  #{ToCommand("network import")}
command should be used to add complex network entries.

#% ConsoleReference (ShellNetwork.NetworkAdd);

#% Describe(CommandSet, _NetworkDelete._DescribeCommand);

The 'network delete' command deletes a network entry entry by means of 
its unique catalog identifier.

#% ConsoleReference (ShellNetwork.NetworkDelete);

#% Describe(CommandSet, _NetworkGet._DescribeCommand);

The 'network get' command retrieves a network entry by means of its 
unique catalog identifier.


#% ConsoleReference (ShellNetwork.NetworkGet);

#% Describe(CommandSet, _NetworkImport._DescribeCommand);

The 'network import' command is used to add a network entry to the catalog
from a file

#% ConsoleReference (ShellNetwork.NetworkImport);

#% Describe(CommandSet, _NetworkList._DescribeCommand);

The 'network list' command lists all data in the network catalog.

#% ConsoleReference (ShellNetwork.NetworkList);

#end zfile

#end xclass

