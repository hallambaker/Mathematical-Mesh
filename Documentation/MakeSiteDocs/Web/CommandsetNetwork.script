#using System.Text
#using Goedel.Mesh
#using Goedel.Mesh.Shell
#using Goedel.Protocol
#% #pragma warning disable IDE0022
#% #pragma warning disable IDE0060
#% #pragma warning disable IDE1006
#xclass ExampleGenerator CreateExamples



#zfile CreateExamples WebNetwork "Guide/network.md" Examples
#% MakeTitle ("network");

The `network` command set is used to manage a network configuration catalog which contains
a entries describing how to access particular networks.

#### Adding networks

The #{ToCommand("network add")} command adds a network entry to a catalog:

#%  ConsoleExample (ShellNetwork.NetworkAdd);


#### Finding networks

The #{ToCommand("network get")}  command retreives a network entry by label:

#%  ConsoleExample (ShellNetwork.NetworkGet);

#### Deleting networks

Network entries may be deleted using the  #{ToCommand("network delete")} command:

#%  ConsoleExample (ShellNetwork.NetworkDelete);

#### Listing networks

A complete list of networks is obtained using the  #{ToCommand("network list")} command:

#%  ConsoleExample (ShellNetwork.NetworkList);

#### Adding devices

Devices are given authorization to access the networks catalog using the 
 #{ToCommand("device auth")} command:

 #%  ConsoleExample (ShellNetwork.NetworkAuth);


#end zfile

#zfile CreateExamples NetworkReference "Reference/network.md" Examples
#% var CommandSet = CommandLineInterpreter.DescribeCommandSet_Network;


#% Describe(CommandSet);


#% Describe(CommandSet, _NetworkAdd._DescribeCommand);
#% ConsoleReference (ShellNetwork.NetworkAdd);

#% Describe(CommandSet, _NetworkDelete._DescribeCommand);
#% ConsoleReference (ShellNetwork.NetworkDelete);

#% Describe(CommandSet, _NetworkGet._DescribeCommand);
#% ConsoleReference (ShellNetwork.NetworkGet);

#% Describe(CommandSet, _NetworkDump._DescribeCommand);
#% ConsoleReference (ShellNetwork.NetworkList);

#end zfile

#end xclass

