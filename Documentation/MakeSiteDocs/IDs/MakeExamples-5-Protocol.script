#using System.Text
#using Goedel.Mesh
#using Goedel.Protocol
#using Goedel.Utilities
#using Goedel.Cryptography
#using Goedel.Cryptography.Dare
#% #pragma warning disable IDE0022
#% #pragma warning disable IDE0060
#% #pragma warning disable IDE1006
#xclass ExampleGenerator CreateExamples

#method MakeProtocolExamples CreateExamples Example
#% ProtocolHelloRequest(Example);
#% ProtocolHelloResponse(Example);
#% ProtocolHello(Example);
#% ProtocolAccountCreate(Example);
#% ProtocolCreateGroup(Example);
#% ProtocolAccountDelete(Example);
#% ProtocolStatus(Example);
#% ProtocolDownload(Example);
#% ProtocolUpload(Example);
#% ProtocolPostClientService(Example);
#% ProtocolPostServiceService(Example);
#% ProtocolClaim(Example);
#% ProtocolPollClaim(Example);
#% ProtocolCryptoKeyShare(Example);
#% ProtocolCryptoKeyAgree(Example);
#% ProtocolMessagePIN(Example);
#% ProtocolContactRemote(Example);
#% ProtocolContactQR(Example);
#% ProtocolContactStatic(Example);
#% ProtocolGroupInvite(Example);
#% ProtocolConfirmation(Example);
#% ProtocolConnect(Example);
#% ProtocolConnectPIN(Example);
#% ProtocolConnectEARL(Example);
#end method

#zfile CreateExamples ProtocolHelloRequest "Examples\\ProtocolHelloRequest.md" Example


#%  DescribeRequestBinding (Service.Hello?[0].Traces[0]);

#end zfile

#zfile CreateExamples ProtocolHelloResponse "Examples\\ProtocolHelloResponse.md" Example


#%  DescribeResponseBinding (Service.Hello?[0].Traces[0]);

#end zfile





#zfile CreateExamples ProtocolHello "Examples\\ProtocolHello.md" Example

The request payload:

#%  DescribeRequest(Service?.Hello?[0].Traces[0]);

The response payload:

#%  DescribeResponse(Service?.Hello?[0].Traces[0]);


#end zfile

#zfile CreateExamples ProtocolAccountCreate "Examples\\ProtocolAccountCreate.md" Example

The request payload:

#%  DescribeRequest (Account?.CreateAlice?[0].Traces?[0]);

The response payload:

#%  DescribeResponse (Account?.CreateAlice?[0].Traces?[0]);

#end zfile

#zfile CreateExamples ProtocolCreateGroup "Examples\\ProtocolCreateGroup.md" Example

The request payload:

#%  DescribeRequest (Group?.GroupCreate?[0].Traces?[0]);

The response payload:

#%  DescribeResponse (Group?.GroupCreate?[0].Traces?[0]);

#end zfile



#zfile CreateExamples ProtocolAccountDelete "Examples\\ProtocolAccountDelete.md" Example



The request payload:

#%  DescribeRequest (Account?.DeleteAlice?[0].Traces?[0]);

The response payload:

#%  DescribeResponse (Account?.DeleteAlice?[0].Traces?[0]);

#end zfile



#zfile CreateExamples ProtocolStatus "Examples\\ProtocolStatus.md" Example


The request payload:

#%  DescribeRequest (Account?.SyncAlice?[0].Traces?[0]);

The response payload:

#%  DescribeResponse (Account?.SyncAlice?[0].Traces?[0]);

#end zfile


#zfile CreateExamples ProtocolDownload "Examples\\ProtocolDownload.md" Example
#% ReportObsoleteExample();



#end zfile


#zfile CreateExamples ProtocolUpload "Examples\\ProtocolUpload.md" Example
#% ReportObsoleteExample();


#end zfile

#zfile CreateExamples ProtocolPostClientService "Examples\\ProtocolPostClientService.md" Example



The request payload:

#%  DescribeRequest (Connect?.ConnectRequest?[0].Traces?[0]);

The response payload:

#%  DescribeResponse (Connect?.ConnectRequest?[0].Traces?[0]);

#end zfile



#zfile CreateExamples ProtocolPostServiceService "Examples\\ProtocolPostServiceService.md" Example
#% ReportMissingExample();


#end zfile




#zfile CreateExamples ProtocolClaim "Examples\\ProtocolClaim.md" Example

The request payload:

#%  DescribeRequest (Connect?.ConnectStaticPollFail?[0].Traces?[1]);

The response payload:

#%  DescribeResponse (Connect?.ConnectStaticPollFail?[0].Traces?[1]);

#end zfile

#zfile CreateExamples ProtocolPollClaim "Examples\\ProtocolPollClaim.md" Example

The request payload:

#%  DescribeRequest (Connect?.ConnectStaticClaim?[0].Traces?[1]);

The response payload:

#%  DescribeResponse (Connect?.ConnectStaticClaim?[0].Traces?[1]);


#end zfile



#zfile CreateExamples ProtocolCryptoKeyShare "Examples\\ProtocolCryptoKeyShare.md" Example
The request payload:

#%  DescribeRequest (Group?.GroupAddBob?[0].Traces?[1]);

The response payload:

#%  DescribeResponse (Group?.GroupAddBob?[0].Traces?[1]);
#end zfile


#zfile CreateExamples ProtocolCryptoKeyAgree "Examples\\ProtocolCryptoKeyAgree.md" Example
The request payload:

#%  DescribeRequest (Group?.GroupDecryptBobSuccess?[0].Traces?[1]);

The response payload:

#%  DescribeResponse (Group?.GroupDecryptBobSuccess?[0].Traces?[1]);
#end zfile




#zfile CreateExamples ProtocolMessagePIN "Examples\\ProtocolMessagePIN.md" Example

Bob's client creates a PIN value and records it in his Local spool:

#%  DescribeMessage (Contact.MessagePin);

The response from Alice's client is authenticated under the PIN:

#%  DescribeMessage (Contact.AliceResponse);

Bob's client can now check:

~~~~
Some math here
~~~~

#end zfile




#zfile CreateExamples ProtocolContactRemote "Examples\\ProtocolContactRemote.md" Example

#%  DescribeMessage (Contact.BobRequest);

#end zfile

#zfile CreateExamples ProtocolContactQR "Examples\\ProtocolContactQR.md" Example

When they meet in person, Alice creates a pin code and presents it to Bob on her mobile.

QR code is #{Contact.AliceDynamicQRCode} yadda yaddda

The resulting contact exchange does not change the contact data itself but does change
the valudation method. It is more difficult and riskier to falsify an in-person exchange
than a remote one.


#end zfile

#zfile CreateExamples ProtocolContactStatic "Examples\\ProtocolContactStatic.md" Example

Alice creates a contact and publishes it through her service.

QR code is #{Contact.AliceStaticQRCode} yadda yaddda

#end zfile



#zfile CreateExamples ProtocolGroupInvite "Examples\\ProtocolGroupInvite.md" Example
#% Format(Group.GroupInvitation);
#end zfile



#zfile CreateExamples ProtocolConfirmation "Examples\\ProtocolConfirmation.md" Example

The service sends out the following challenge:

#% DescribeMessage(Confirm.RequestConfirmation);

Alice accepts the challeng and returns the following response:

#% DescribeMessage(Confirm.ResponseConfirmation);




#end zfile







#zfile CreateExamples ProtocolConnect "Examples\\ProtocolConnect.md" Example

#%  DescribeRequest (Connect.ConnectRequest?[0].Traces[0]);

The request payload:

// This is missing here because the messages are not being fished out of the 

#% DescribeMessage(Connect.ConnectRequestWitness);


The response payload:

#%  DescribeResponse (Connect.ConnectRequest?[0].Traces[0]);

// Again missing here...

#% DescribeMessage(Connect.AcknowledgeConnectionWitness);



Alice reads her pending messages, notes that there is a pending connection request with
a witness value matches the one displayed earlier and approves the connection request.

// here need description of the handling of the spool

#% DescribeMessage(Connect.RespondConnectionWitness);

// Now the device collects the result from the local delivery spool

[Request]

[Mention Can get a 'not yet ready' response]


[Response]

// has all the information needed to complete the transaction.


#end zfile


#zfile CreateExamples ProtocolConnectPIN "Examples\\ProtocolConnectPIN.md" Example


[This is identical to the previous version except that Alice generates a PIN 
code as described in section $$$ earlier. This is used to create an authenticated
message as described in Mesh 4 Schema $$$]

#% DescribeMessage(Connect.ConnectPINMessagePin);

[is this example even necessary???]



#end zfile


#zfile CreateExamples ProtocolConnectEARL "Examples\\ProtocolConnectEARL.md" Example

// Create a device profile during manufacture

[The device profile]

// Publish profile as EARL

The QR code.

// Device description provides the device profile and hailing methods [WiFi, poll]

// Admin device posts claim

// device polls, discovers claim, requests connection



#end zfile








#end xclass