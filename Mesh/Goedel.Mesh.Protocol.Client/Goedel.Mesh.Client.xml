<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Mesh.Client</name>
    </assembly>
    <members>
        <member name="T:Goedel.Mesh.Client.HostCatalogItem">
             <summary>
            
             An entry in the Mesh linked logchain.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.HostCatalogItem.Initialize">
            <summary>Dummy property used to force initialization.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.HostCatalogItem._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.HostCatalogItem.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.HostCatalogItem._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.HostCatalogItem.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Mesh.Client.CatalogedMachine">
             <summary>
            
             Describes a current or pending connection to a Mesh
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine._PrimaryKey">
            <summary>The unique identifier.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine.ProfileDevice">
            <summary>The device profile</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine.Id">
             <summary>
            Unique object instance identifier.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine.Local">
             <summary>
            Local short name for the profile
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine.Default">
             <summary>
            If true, this is the default for the profile type (master, account)
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine.EnvelopedProfileUser">
             <summary>
            The master profile that provides the root of trust for this Mesh
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine.CatalogedDevice">
             <summary>
            The cataloged device profile
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedMachine._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.CatalogedMachine.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedMachine._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedMachine.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedMachine.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedMachine.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedMachine.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Mesh.Client.CatalogedStandard">
             <summary>
            
             Describes an ordinary device connected to a Mesh
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedStandard.ProfileDevice">
            <summary>The device profile (from <see cref="T:Goedel.Mesh.CatalogedDevice"/>)</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedStandard._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.CatalogedStandard.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedStandard._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedStandard.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedStandard.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedStandard.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedStandard.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Mesh.Client.CatalogedAdmin">
             <summary>
            
             Information enabling administration of a Master profile. It adds an overlay key
             for the administration key.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedAdmin.ProfileDevice">
            <summary>The device profile (from <see cref="T:Goedel.Mesh.CatalogedDevice"/>)</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedAdmin.#ctor">
            <summary>
            Default constructor used for deserialization.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedAdmin.SignatureKey">
             <summary>
            Overlay for the signature key.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedAdmin.DeviceUDF">
             <summary>
            UDF of the connected device
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedAdmin._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.CatalogedAdmin.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedAdmin._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedAdmin.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedAdmin.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedAdmin.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedAdmin.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Mesh.Client.CatalogedPending">
             <summary>
            
             Describes a pending connection to a Mesh account believed to have been 
             created and posted to a service.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending.ProfileDevice">
            <summary>The decoded device profile (from <see cref="P:Goedel.Mesh.Client.CatalogedPending.EnvelopedProfileDevice"/>)</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending.MessageConnectionResponse">
            <summary>
            Cached convenience accessor returning the decoded <see cref="P:Goedel.Mesh.Client.CatalogedPending.MessageConnectionResponse"/>.
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPending.GetResponseID">
            <summary>Return the corresponding response identifier.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending.DeviceUDF">
             <summary>
            UDF of the connected device
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending.EnvelopedProfileDevice">
             <summary>
            The device profile presented to the service.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending.EnvelopedMessageConnectionResponse">
             <summary>
            The response returned by the service when the registration was requested.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending.EnvelopedAccountAssertion">
             <summary>
            The current account assertion
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending.AccountAddress">
             <summary>
            The account at which the request is pending.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPending._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.CatalogedPending.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPending._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPending.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPending.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPending.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPending.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Mesh.Client.CatalogedPreconfigured">
             <summary>
            
             Describes a preconfigured Device Profile bound to a remote 
             manufacturer profile.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPreconfigured.ProfileDevice">
            <summary>The decoded device profile (from <see cref="P:Goedel.Mesh.Client.CatalogedPreconfigured.EnvelopedProfileDevice"/>)</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPreconfigured.EnvelopedProfileDevice">
             <summary>
            The device profile presented to the service.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPreconfigured.AccountAddress">
             <summary>
            The account to which claims will be posted
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPreconfigured.PublicationId">
             <summary>
            The publication identifier
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPreconfigured.ServiceAuthenticator">
             <summary>
            Authenticator key used to authenticate claim to the service.
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPreconfigured.DeviceAuthenticator">
             <summary>
            Authenticator key used to authenticate claim to the device.	
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.CatalogedPreconfigured._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.CatalogedPreconfigured.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPreconfigured._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPreconfigured.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPreconfigured.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPreconfigured.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Mesh.Client.CatalogedPreconfigured.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Mesh.Client.SyncStatus">
            <summary>Track the synchronization status of an upload or download operation.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.SyncStatus.Store">
            <summary>The local store</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.SyncStatus.Index">
            <summary>The last index at the remote store</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.SyncStatus.Digest">
            <summary>The apex digest value at the remote store</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.SyncStatus.#ctor(Goedel.Mesh.Store)">
            <summary>
            Report the synchronization status of a Mesh store.
            </summary>
            <param name="store">The store reported on.</param>
        </member>
        <member name="T:Goedel.Mesh.Client.ContextAccount">
            <summary>
            Base class from which Contexts for Accounts and Groups are derrived. These are
            separate contexts but share functions and thus code.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.MeshHost">
            <summary>The Mesh host</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextAccount.CatalogedMachine">
            <summary>The Device Entry in the CatalogHost</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.Profile">
            <summary>The account profile</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.ProfileDevice">
            <summary>The device profile</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.MeshMachine">
            <summary>The Machine context.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.KeyCollection">
            <summary>The key collection for use with the context.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.Connection">
            <summary>The connection binding the calling context to the account.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.KeySignature">
            <summary>The member's device signature key</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.KeyAccountEncryption">
            <summary>The account encryption key </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.KeyDeviceAuthentication">
            <summary>The authentication key used by this device to authenticate</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.StoresDirectory">
            <summary>The directory containing the catalogs related to the account.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextAccount.DictionaryStores">
            <summary>Dictionary locating the stores connected to the context.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextAccount.ContainerCryptoParameters">
            <summary>The cryptographic parameters for reading/writing to account containers</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.MeshClient">
            <summary>Returns the MeshClient and caches the result for future use.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.AccountAddress">
            <summary>The Account Address</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.GetCatalogCapability">
            <summary>Returns the network catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.GetSpoolLocal">
            <summary>Returns the local spool  for the account</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.DictionaryCatalogDelegates">
            <summary>List of catalogs</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextAccount.DictionarySpoolDelegates">
            <summary>List of spools, these are the same for each type of account.</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.#ctor(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.Client.CatalogedMachine)">
            <summary>
            Constructor, creates a <see cref="T:Goedel.Mesh.Client.ContextUser"/> instance for the catalog entry 
            <paramref name="catalogedMachine"/> on machine <paramref name="meshHost"/>.
            </summary>
            <param name="catalogedMachine">Description of the device profile.</param>
            <param name="meshHost">The Mesh host to add the admin context to.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.GetPIN(System.String,System.Boolean,System.Int32,System.Int64)">
            <summary>
            Create a PIN value of length <paramref name="length"/> bits valid for 
            <paramref name="validity"/> minutes.
            </summary>
            <param name="length">The size of the PIN value to create in bits.</param>
            <param name="validity">The validity interval in minutes from the current 
            date and time.</param>
            <param name="action">The action to which this pin is bound.</param>
            <param name="automatic">If true, presentation of the pin code is sufficient
            to authenticate and authorize the action.</param>
            <returns>A <see cref="T:Goedel.Mesh.MessagePIN"/> instance describing the created parameters.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.RegisterPIN(System.String,System.Boolean,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Register the pin code <paramref name="pin"/> to the account <paramref name="accountAddress"/>
            bound to the action <paramref name="action"/>.
            </summary>
            <param name="pin">The PIN code</param>
            <param name="automatic">If true, proof of knowledge of the pin is sufficient authorization.</param>
            <param name="expires">Expiry time.</param>
            <param name="accountAddress">The account to which the pin is bound.</param>
            <param name="action">The action to which the pin is bound.</param>
            <returns>The message registered on the Admin spool.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.GetMessagePIN(System.String)">
            <summary>
            Fetch the <see cref="T:Goedel.Mesh.MessagePIN"/> with the identifier <paramref name="PinUDF"/>.
            </summary>
            <param name="PinUDF">The identifier of the PIN</param>
            <returns>The message (if found), otherwise null.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.GetMeshClient(System.String)">
            <summary>
            Returns a Mesh service client for <paramref name="accountAddress"/>.
            </summary>
            <param name="accountAddress">The account service identifier.</param>
            <returns>The Mesh service client</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.Status">
            <summary>
            Obtain the status of the remote store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.Sync">
            <summary>
            Synchronize this device to the catalogs at the service. Since the authoritative copy of
            the service is held at the service, this means only downloading updates at present.
            </summary>
            <returns>The number of items synchronized</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.SyncProgressUpload(System.Int32)">
            <summary>
            Synchronize the device to the store in increments of no more than <paramref name="maxEnvelopes"/>
            at a time. This should really be changed to something more Async callback friendly. Hours in
            a day... ??? Its midnight.
            </summary>
            <param name="maxEnvelopes">The maximum number of envelopes to return.</param>
            <returns>If true, the synchronization has completed.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.SendMessage(Goedel.Mesh.Message,System.String,Goedel.Cryptography.CryptoKey)">
            <summary>
            Send <paramref name="meshMessage"/> to <paramref name="recipient"/>.
            </summary>
            <param name="meshMessage">The message to send.</param>
            <param name="recipient">The recipient service ID.</param>
            <param name="encryptionKey">The encryption key to encrypt the message to.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.SendMessage(Goedel.Mesh.Message,System.Collections.Generic.List{System.String},Goedel.Cryptography.CryptoKey)">
            <summary>
            Post the message <paramref name="meshMessage"/> to the service. If <paramref name="recipients"/>
            is not null, the message is to be posted to the outbound spool to be forwarded to the
            appropriate Mesh Service. Otherwise, the message is posted to the local spool for local
            collection.
            </summary>
            <param name="meshMessage">The message to post</param>
            <param name="recipients">The recipients the message is to be sent to. If null, the
            message is for local pickup.</param>
            <param name="encryptionKey">The encryption key to encrypt the message to.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.SendMessageAdmin(Goedel.Mesh.Message)">
            <summary>
            Send a message signed using the mesh administration key.
            </summary>
            <param name="meshMessage"></param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.CreateContact(System.Collections.Generic.List{Goedel.Mesh.CryptographicCapability})">
            <summary>
            Get the default (i.e. minimum contact info). This has a single network 
            address entry for this mesh and mesh account. 
            </summary>
            <returns>The default contact.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.GetStoreStatus(Goedel.Mesh.ContainerStatus)">
            <summary>
            Return a <see cref="T:Goedel.Mesh.ConstraintsSelect"/> instance that requests synchronization to the
            remote store whose status is described by <paramref name="statusRemote"/>.
            </summary>
            <param name="statusRemote">Status of the remote store.</param>
            <returns>The selection constraints.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.UpdateStore(Goedel.Mesh.ContainerUpdate)">
            <summary>
            Update the store according to the values <paramref name="containerUpdate"/>.
            </summary>
            <param name="containerUpdate">The update to apply.</param>
            <returns>The number of envelopes successfully added.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.GetStore(System.String,System.Boolean)">
            <summary>
            Return a <see cref="T:Goedel.Mesh.Store"/> instance for the store named <paramref name="name"/>. If the
            parameter <paramref name="blind"/> is true, only the sequence header values are read.
            </summary>
            <param name="name">The store to open.</param>
            <param name="blind">If true, only the sequence header values are read</param>
            <returns>The <see cref="T:Goedel.Mesh.Store"/> instance.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.MakeStore(System.String)">
            <summary>
            Create a new instance bound to the specified core within this account context.
            </summary>
            <param name="name">The name of the store to bind.</param>
            <returns>The store instance.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.MakeStores">
            <summary>
            Force generation of all stores.
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.TryFindKeyEncryption(System.String)">
            <summary>
            Resolve a public encryption key by identifier. This may be a UDF fingerprint of the key,
            an account identifier or strong account identifier.
            </summary>
            <param name="keyId">The identifier to resolve.</param>
            <returns>The identifier.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.LocatePrivateKeyPair(System.String)">
            <summary>
            Attempt to obtain a private key with identifier <paramref name="keyId"/>.
            </summary>
            <param name="keyId">The key identifier to match.</param>
            <returns>The key pair if found.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.TryFindKeyDecryption(System.String)">
            <summary>
            Attempt to obtain a recipient with identifier <paramref name="keyId"/>.
            </summary>
            <param name="keyId">The key identifier to match.</param>
            <returns>The key pair if found.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.TryFindKeySignature(System.String)">
            <summary>
            Resolve a private key by identifier. This may be a UDF fingerprint of the key,
            an account identifier or strong account identifier.
            </summary>
            <param name="signingKey">The identifier to resolve.</param>
            <returns>The identifier.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.Add(Goedel.Cryptography.KeyPair)">
            <summary>
            Add a keypair to the collection.
            </summary>
            <param name="keyPair">The key pair to add.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.Persist(Goedel.Cryptography.KeyPair)">
            <summary>
            Persist a private key if permitted by the KeySecurity model of the key.
            </summary>
            <param name="keyPair">The key to persist.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.ValidateTrustAnchor(Goedel.Cryptography.CryptoKey)">
            <summary>
            Resolve a public signature key by identifier. This may be a UDF fingerprint of the key,
            an account identifier or strong account identifier.
            </summary>
            <param name="cryptoKey">The key to validate.</param>
            <returns>The identifier.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.DareEncode(System.Byte[],Goedel.Cryptography.Dare.ContentMeta,System.Byte[],System.Collections.Generic.List{System.Byte[]},System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Create a new DARE Envelope from the specified parameters.
            </summary>
            <param name="plaintext">The payload plaintext. If specified, the plaintext will be used to
            create the message body. Otherwise the body is specified by calls to the Process method.</param>
            <param name="contentMeta">The content metadata</param>
            <param name="cloaked">Data to be converted to an EDS and presented as a cloaked header.</param>
            <param name="dataSequences">Data sequences to be converted to an EDS and presented 
            as an EDSS header entry.</param>
            <param name="recipients">If specified, encrypt the envelope with decryption blobs
            for the specified recipients.</param>
            <param name="sign">If true sign the envelope.</param>
            <returns></returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextAccount.DareDecode(Goedel.Cryptography.Dare.DareEnvelope,System.Boolean)">
            <summary>
            Decode a DARE envelope
            </summary>
            <param name="envelope">The envelope to decode.</param>
            <param name="verify">It true, verify the signature first.</param>
            <returns>The plaintext payload data.</returns>
        </member>
        <member name="T:Goedel.Mesh.Client.ContextGroup">
            <summary>
            Context binding for a Group account
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextGroup.ContextAccount">
            <summary>The enclosing mesh context.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextGroup.CatalogedGroup">
            <summary>The catalogued group description.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextGroup.Profile">
            <summary>The account profile</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextGroup.AccountAddress">
            <summary>The account address.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextGroup.ProfileGroup">
            <summary>The group profile.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextGroup.ConnectionGroup">
            <summary>The group connection under which this context is formed.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextGroup.Connection">
            <summary>Convenience accessor for the connection.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextGroup.KeySignature">
            <summary>The member's device signature key</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextGroup.StoresDirectory">
            <summary>The directory containing the catalogs related to the account.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextGroup.DictionaryCatalogDelegates">
            <summary>Dictionarry used to create stores</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.#ctor(Goedel.Mesh.Client.ContextUser,Goedel.Mesh.CatalogedGroup)">
            <summary>
            Default constuctor, creates a group context for <paramref name="catalogedGroup"/>
            </summary>
            <param name="contextAccount">The enclosing account context.</param>
            <param name="catalogedGroup">Description of the group to return the
            context for.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.CreateGroup(Goedel.Mesh.Client.ContextUser,Goedel.Mesh.CatalogedGroup)">
            <summary>
            Create a new group.
            </summary>
            <param name="contextAccount">The enclosing account context.</param>
            <param name="catalogedGroup">Description of the group to create.</param>
            <returns>The group context.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.GetCatalogMember">
            <summary>Returns the network catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.Add(System.String,System.String)">
            <summary>
            Add a member to the group.
            </summary>
            <param name="memberAddress">The member to add.</param>
            <param name="text">Constrained text to be included in the invitation.</param>
            <returns>The member catalog entry.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.AddCapability(Goedel.Mesh.CryptographicCapability,Goedel.Cryptography.CryptoKey)">
            <summary>
            Add a device to the device catalog.
            </summary>
            <param name="capability">The capability to add.</param>
            <param name="encryptionKey">Optional encryption key used to encrypt the capability.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.AddMember(Goedel.Mesh.CatalogedMember)">
            <summary>
            Add a device to the device catalog.
            </summary>
            <param name="CatalogedMember">The device to add.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.CreateContact(System.Collections.Generic.List{Goedel.Mesh.CryptographicCapability})">
            <summary>
            Get the default (i.e. minimum contact info). This has a single network 
            address entry for this mesh and mesh account. 
            </summary>
            <returns>The default contact.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.Locate(System.String)">
            <summary>
            Locate the a member record in the group.
            </summary>
            <param name="id">The member to locate.</param>
            <returns>The member catalog entry.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.Delete(System.String)">
            <summary>
            Delete a member from the group
            </summary>
            <param name="memberAddress">The member to delete.</param>
            <returns>The member catalog entry.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextGroup.Delete(Goedel.Mesh.CatalogedMember)">
            <summary>
            Delete a member from the group
            </summary>
            <param name="member">The member to delete.</param>
            <returns>The member catalog entry.</returns>
        </member>
        <member name="T:Goedel.Mesh.Client.ContextMeshPending">
            <summary>
            Context for a pending Mesh connection request. Is deleted and replaced by a full context
            if accepted.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPending.CatalogedPending">
            <summary>Convenience accessor for the pending context.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPending.AccountAddress">
            <summary>The account address from the cataloged pending record. Note that this
            address MUST be for the same service that the original request was made to.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPending.Profile">
            <summary>The account profile. Always null.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPending.Connection">
            <summary>The connection binding the calling context to the account. This is of course null
            since a device in the state Mesh Pending does not have a connection by definition.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextMeshPending.DeviceKeySeed">
            <summary>The device key generation seed</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPending.#ctor(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.Client.CatalogedMachine)">
            <summary>
            Constructor.
            </summary>
            <param name="meshHost">The Mesh host</param>
            <param name="catalogedMachine">The pending connection description.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPending.ConnectService(Goedel.Mesh.Client.MeshHost,System.String,System.String,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Initiate a connection request.
            </summary>
            <param name="meshHost">The Mesh Host</param>
            <param name="accountAddress">The Service Identifier for the account to connect to.</param>
            <param name="localName">Local friendly name for the account.</param>
            <param name="pin">Pin code value (if supplied).</param>
            <param name="algorithmEncrypt">The encryption algorithm to use.</param>
            <param name="algorithmSign">The signature algorithm to use.</param>
            <param name="algorithmAuthenticate">The authentication algorithm to use.</param>
            <returns>The <see cref="T:Goedel.Mesh.Client.ContextMeshPending"/> record describing the state of the 
            pending connection.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPending.ConnectService(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.ProfileDevice,System.String,System.String,System.String)">
            <summary>
            Initiate a connection request.
            </summary>
            <param name="meshHost">The Mesh Host</param>
            <param name="accountAddress">The account address to connect to.</param>
            <param name="localName">Local friendly name for the account.</param>
            <param name="pin">Pin code value (if supplied).</param>
            <param name="profileDevice">The device profile.</param>
            <returns>The <see cref="T:Goedel.Mesh.Client.ContextMeshPending"/> record describing the state of the 
            pending connection.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPending.Complete">
            <summary>
            Complete the pending connection request.
            </summary>
            <returns>If successfull returns an ContextAccountService instance to allow access
            to the connected account. Otherwise, a null value is returned.</returns>
        </member>
        <member name="T:Goedel.Mesh.Client.ContextMeshPreconfigured">
            <summary>
            Base context for interacting with a preconfigured device
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPreconfigured.CatalogedPreconfigured">
            <summary>Convenience accessor for the pending context.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPreconfigured.Profile">
            <summary>The manufacturer profile used to direct configuration.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPreconfigured.Connection">
            <summary>Preconfigured devices have a connection to the manufacturer profile.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextMeshPreconfigured.AccountAddress">
            <summary>The account address. This binds to the manufacturer account.</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPreconfigured.#ctor(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.Client.CatalogedMachine)">
            <summary>
            Constructor.
            </summary>
            <param name="meshHost">The Mesh host</param>
            <param name="catalogedMachine">The pending connection description.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPreconfigured.Poll">
            <summary>
            Attempt to connect to a personal Mesh by polling various services. 
            </summary>
            <returns>If successfull returns an ContextAccount instance to allow access
            to the connected account. Otherwise, a null value is returned.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPreconfigured.Complete">
            <summary>
            Attempt to connect to a personal Mesh by polling various services. 
            </summary>
            <returns>If successfull returns an ContextAccountService instance to allow access
            to the connected account. Otherwise, a null value is returned.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextMeshPreconfigured.Install(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.DevicePreconfiguration)">
            <summary>
            Write the device configuration <paramref name="devicePreconfiguration"/> to
            the Mesh host <paramref name="meshHost"/>.
            </summary>
            <param name="meshHost">The Mesh host to be written to.</param>
            <param name="devicePreconfiguration">The preconfiguration data.</param>
            <returns>Context for the preconfigured device.</returns>
        </member>
        <member name="T:Goedel.Mesh.Client.ContextUser">
            <summary>
            Context for interacting with a Mesh Account
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.StoresDirectory">
            <summary>The directory containing the catalogs related to the account.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.Profile">
            <summary>The account profile</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.Connection">
            <summary>Convenience accessor for the connection.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.AccountAddress">
            <summary>Cached accessor to the account address.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.CatalogedDevice">
            <summary>The cataloged device</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.ProfileUser">
            <summary>The profile</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.ConnectionUser">
            <summary>The connection device</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.ActivationUser">
            <summary>The device activation</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.ActivationAccount">
            <summary>The device activation</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ContextUser.MeshSecretSeed">
            <summary>The device key generation seed</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.KeySignature">
            <summary>The member's device signature key</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.#ctor(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.Client.CatalogedMachine)">
            <summary>
            Constructor, creates a <see cref="T:Goedel.Mesh.Client.ContextUser"/> instance for the catalog entry 
            <paramref name="catalogedMachine"/> on machine <paramref name="meshHost"/>.
            </summary>
            <param name="catalogedMachine">Description of the device profile.</param>
            <param name="meshHost">The Mesh host to add the admin context to.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.CreateMesh(Goedel.Mesh.Client.MeshHost,Goedel.Cryptography.KeyPair,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,System.Byte[])">
            <summary>
            Create a new personal mesh and return an administration context for it.
            </summary>
            <param name="meshHost">The mesh host context that the mesh is going to be created on.</param>
            <param name="localName">Optional local name to be associated with the account.</param>
            <param name="onlineSignature">The key to be used for initial administration operations.</param>
            <param name="algorithmSign">The signature algorithm.</param>
            <param name="algorithmEncrypt">The encryption algorithm.</param>
            <param name="algorithmAuthenticate">The authentication algorithm.</param>
            <param name="masterSecret">Specifies a seed from which to generate the ProfileMesh</param>
            <returns>An administration context instance for the created profile.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetMeshSecret">
            <summary>
            Get the MeshSecret.
            </summary>
            <returns>The Mesh secret bytes.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.PersistSeed">
            <summary>
            Persist the Mesh Secret to the persistence store of this machine.
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.EraseMeshSecret">
            <summary>
            Erase the Mesh Secret from the persistence store of this machine.
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.Escrow(System.Int32,System.Int32)">
            <summary>
            Create an escrow set for the master key.
            </summary>
            <param name="shares">Number of shares to create</param>
            <param name="threshold">Number of shares required to recreate the quorum</param>
            <returns>The encrypted escrow entry and the key shares.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.Persist(Goedel.Mesh.CatalogedDevice)">
            <summary>
            Persist the update to <paramref name="catalogedDevice"/> to the service and local
            catalogs.
            </summary>
            <param name="catalogedDevice">The update to persist.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GrantAdministrator(Goedel.Mesh.CatalogedDevice,Goedel.Cryptography.KeyPair,System.Boolean)">
            <summary>
            Grant administrative privileges to the device <paramref name="targetDevice"/> using
            the online signing key <paramref name="keyPairOnlineSignature"/>. If 
            <paramref name="superAdmin"/> is true, also grant super-administration
            privilege.
            </summary>
            <param name="targetDevice">Device to grant administrative privilege to.</param>
            <param name="keyPairOnlineSignature">The online signature capability.</param>
            <param name="superAdmin">The offline signature capability.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.SetService(System.String)">
            <summary>
            Set the initial Mesh Service. This MUST be called before devices are added to the 
            personal mesh. This method does not support transfer of the Mesh Service.
            </summary>
            <param name="accountAddress">The account address</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.CreateCataloguedDevice(Goedel.Mesh.ProfileUser,Goedel.Mesh.ProfileDevice,Goedel.Mesh.ActivationUser,Goedel.Mesh.ActivationAccount)">
            <summary>
            Create a CatalogedDevice entry for the device with profile <paramref name="profileDevice"/>
            and activation <paramref name="activationDevice"/>.
            </summary>
            <param name="profileAccount">The mesh profile.</param>
            <param name="profileDevice">Profile of the device to be added.</param>
            <param name="activationDevice">The device key overlay.</param>
            <returns>The CatalogedDevice entry.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.AddDevice(Goedel.Mesh.ProfileDevice,Goedel.Cryptography.KeyPair,System.Boolean)">
            <summary>
            Add the device specified by <paramref name="profileDevice"/> to the account granting administration
            privileges if <paramref name="keyPairOnlineSignature"/> is not null and super administration 
            privilege if <paramref name="superAdmin"/> is true. Note that it is possible for a device to 
            be a super administrator without also being an administrator.
            </summary>
            <param name="profileDevice">Profile of the device to add.</param>
            <param name="keyPairOnlineSignature">If not null, specifies an online signature key that is to be used
            to sign administrator functions.</param>
            <param name="superAdmin">It true specifies that super administrator privileges are to be granted.</param>
            <returns>The catalog entry.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.AddCapability(Goedel.Cryptography.CryptoKey)">
            <summary>
            Generate a capability for the key <paramref name="keyPair"/>.
            add the service portion to the capabilities catalog.
            </summary>
            <param name="keyPair">Keypair from which the capability is to be derrived.</param>
            
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.SetContactSelf(Goedel.Mesh.Contact,System.String)">
            <summary>
            Create a contact entry for self using the parameters specified in <paramref name="contact"/>.
            </summary>
            <param name="contact">The contact parameters.</param>
            <param name="localname">Short name to apply to the signed contact info</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.CreateContact(System.Collections.Generic.List{Goedel.Mesh.CryptographicCapability})">
            <summary>
            Get the default (i.e. minimum contact info). This has a single network 
            address entry for this mesh and mesh account. 
            </summary>
            <returns>The default contact.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetAccountAddress">
            <summary>
            Get the primary account address bound to this profile. This is a bit of a hack right
            now as the code doesn't really support the 'multiple services per account' model yet.
            </summary>
            <returns>The account service address.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCapability(Goedel.Mesh.CatalogedApplication)">
            <summary>
            Return the first cryptographic capability granted to this particular device
            for the application <paramref name="catalogedApplication"/>.
            </summary>
            <param name="catalogedApplication">The application to return the capability from.</param>
            <returns>The first cryptographic capability this device has been granted if found,
            otherwise null.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCapability(Goedel.Cryptography.Dare.DareEnvelope)">
            <summary>
            Attempt to decrypt <paramref name="envelopedCapability"/>. If successful, the content 
            data is decoded and the enclosed capability returned. Otherwise, null is returned.
            </summary>
            <param name="envelopedCapability">The envelope to attempt to decrypt.</param>
            <returns>The first cryptographic capability this device has been granted if found,
            otherwise null.</returns>
        </member>
        <member name="P:Goedel.Mesh.Client.ContextUser.DictionaryCatalogDelegates">
            <summary>Dictionarry used to create stores</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCatalogApplication">
            <summary>Returns the application catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCatalogDevice">
            <summary>Returns the contacts catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCatalogContact">
            <summary>Returns the contacts catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCatalogCredential">
            <summary>Returns the credential catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCatalogBookmark">
            <summary>Returns the bookmark catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCatalogCalendar">
            <summary>Returns the calendar catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetCatalogNetwork">
            <summary>Returns the network catalog for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetSpoolInbound">
            <summary>Returns the inbound spool for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetSpoolOutbound">
            <summary>Returns the outbound spool for the account</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.TryFindKeyEncryption(System.String)">
            <summary>
            Resolve a public key by identifier. This may be a UDF fingerprint of the key,
            an account identifier or strong account identifier.
            </summary>
            <param name="keyId">The identifier to resolve.</param>
            <returns>The identifier.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.TryFindKeySignature(System.String)">
            <summary>
            Resolve a public key by identifier. This may be a UDF fingerprint of the key,
            an account identifier or strong account identifier.
            </summary>
            <param name="keyId">The identifier to resolve.</param>
            <returns>The identifier.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.TryFindKeyDecryption(System.String)">
            <summary>
            Attempt to obtain a recipient with identifier <paramref name="keyId"/>.
            </summary>
            <param name="keyId">The key identifier to match.</param>
            <returns>The key pair if found.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetPendingMessageConnectionRequest">
            <summary>
            Return the latest unprocessed MessageConnectionRequest that was received.
            </summary>
            <returns>The latest unprocessed MessageConnectionRequest</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetPendingMessageContactRequest">
            <summary>
            Return the latest unprocessed MessageContactRequest that was received.
            </summary>
            <returns>The latest unprocessed MessageContactRequest</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetPendingMessageContactReply">
            <summary>
            Return the latest unprocessed MessageContactRequest that was received.
            </summary>
            <returns>The latest unprocessed MessageContactRequest</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetPendingMessageConfirmationRequest">
            <summary>
            Return the latest unprocessed MessageConfirmationRequest that was received.
            </summary>
            <returns>The latest unprocessed MessageConfirmationRequest</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetPendingMessageConfirmationResponse">
            <summary>
            Return the latest unprocessed MessageConfirmationResponse that was received.
            </summary>
            <returns>The latest unprocessed MessageConfirmationResponse</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetPendingMessage(System.String)">
            <summary>
            Search the inbound spool and return the last message of type <paramref name="tag"/>.
            This is obviously a placeholder for something more comprehensive.
            </summary>
            <param name="tag">Message selector.</param>
            <returns>The message found.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetPendingMessageByID(System.String,System.Boolean@)">
            <summary>
            Return the last message with messageID <paramref name="messageID"/>. If the message
            has been read, the value <paramref name="read"/> is true.
            </summary>
            <param name="messageID">The message to locate.</param>
            <param name="read">If true, the message has already been read.</param>
            <returns>The message value (if unread).</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.CreateGroup(System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Create a threshold encryption group.
            </summary>
            <param name="groupName">Name of the group to create.</param>
            <param name="algorithmEncrypt">The encryption algorithm</param>
            <param name="algorithmSign">The signature algorithm.</param>
            <returns></returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetContextGroup(System.String)">
            <summary>
            Get a managment context for the group <paramref name="groupAddress"/>.
            </summary>
            <param name="groupAddress">The group to return the management context for.</param>
            <returns>The created management context.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.CreateDeviceEarl(Goedel.Cryptography.Jose.PrivateKeyUDF@,Goedel.Mesh.ProfileDevice@,System.String@,System.String@,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,System.Byte[],System.Int32)">
            <summary>
            Create an EARL for a device, publish the result to the Mesh service and return 
            the device profile <paramref name="profileDevice"/>, secret seed value 
            <paramref name="secretSeed"/>, connection URI 
            <paramref name="connectURI"/> and PIN <paramref name="pin"/>.
            </summary>
            <param name="secretSeed">The computed secret seed value.</param>
            <param name="profileDevice">The computed device profile</param>
            <param name="pin">The computed PIN code.</param>
            <param name="connectURI">The connection URI to be used for pickup.</param>
            <param name="algorithmEncrypt">The encryption algorithm.</param>
            <param name="algorithmSign">The signature algorithm</param>
            <param name="algorithmAuthenticate">The signature algorithm</param>
            <param name="secret">The master secret.</param>
            <param name="bits">The size of key to generate in bits/</param>
            <returns>Response from the server.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.Connect(System.String)">
            <summary>
            Attempt device connection by means of the static URI <paramref name="uri"/>.
            </summary>
            <param name="uri">The connection URI</param>
            <returns>The </returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ClaimPublication(System.String,System.String@)">
            <summary>
            Claim the document published at the EARL <paramref name="uri"/>.
            </summary>
            <param name="uri">The EARL to resolve</param>
            <param name="responseId">The response from the service.</param>
            <returns>The recovered envelope.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ProcessAutomatics">
            <summary>
            Process automatic actions.
            </summary>
            <returns>The results of the automatic processing attempted.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ProcessAutomatic(Goedel.Mesh.GroupInvitation,System.Boolean,System.Boolean)">
            <summary>
            Perform automatic processing of the message <paramref name="groupInvitation"/>.
            </summary>
            <param name="groupInvitation">Reply to contact request to be processed.</param>
            <param name="accept">Accept the requested action.</param>
            <param name="authorize">If true, the action is explicitly authorized.</param>
            <returns>The result of requesting the connection.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ProcessAutomatic(Goedel.Mesh.ReplyContact,System.Boolean,System.Boolean)">
            <summary>
            Perform automatic processing of the message <paramref name="replyContact"/>.
            </summary>
            <param name="replyContact">Reply to contact request to be processed.</param>
            <param name="accept">Accept the requested action.</param>
            <param name="authorize">If true, the action is explicitly authorized.</param>
            <returns>The result of requesting the connection.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ProcessAutomatic(Goedel.Mesh.AcknowledgeConnection)">
            <summary>
            Perform automatic processing of the message <paramref name="acknowledgeConnection"/>.
            </summary>
            <param name="acknowledgeConnection">Connection request to be processed.</param>
            <returns>The result of requesting the connection.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.Process(Goedel.Mesh.AcknowledgeConnection,System.Boolean)">
            <summary>
            Accept or reject a connection request.
            </summary>
            <param name="request">The request to accept or reject.</param>
            <param name="accept">If true, accept the request. Otherwise, it is rejected.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.Process(System.String,System.Boolean,System.Boolean)">
            <summary>
            Generalized processing loop for messages
            </summary>
            <param name="messageId">Identifier of the message to process.</param>
            <param name="accept">If true, accept the request, otherwise reject it.</param>
            <param name="reciprocate">If true, reciprocate the response: e.g. return user's own
            contact information in response to an initial contact request.</param>
            <returns></returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.Process(Goedel.Mesh.Message,System.Boolean,System.Boolean)">
            <summary>
            Generalized processing loop for messages
            </summary>
            <param name="meshMessage">The message to process.</param>
            <param name="accept">If true, accept the request, otherwise reject it.</param>
            <param name="reciprocate">If true, reciprocate the response: e.g. return user's own
            contact information in response to an initial contact request.</param>
            <returns></returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ContactReply(Goedel.Mesh.RequestContact,System.String)">
            <summary>
            Make a contact reply.
            </summary>
            <param name="requestContact">The contact request.</param>
            <param name="localname">Local name to be used to identify the contact recorded in
            the catalog.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.GetSelf(System.String)">
            <summary>
            Get the user's own contact. There is only ever one contact entry but there MAY
            be multiple envelopes 
            </summary>
            <param name="localName">Local name for the contact</param>
            <returns></returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ContactUri(System.Boolean,System.Nullable{System.DateTime},System.String)">
            <summary>
            Construct a contact fetch URI.
            </summary>
            <param name="localName">Local name for the contact</param>
            <param name="expire">Expiry time for the corresponding PIN</param>
            <param name="automatic">If true, presentation of the pin code is sufficient
            to authenticate and authorize the action.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ContactRequest(System.String,System.String)">
            <summary>
            Construct a contact request.
            </summary>
            <param name="recipientAddress">The contact to request.</param>
            <param name="localName">Local name for the contact</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ContactExchange(System.String,System.Boolean,Goedel.Mesh.Message@,System.String)">
            <summary>
            Fetch contact data referenced by the URI <paramref name="uri"/>. If <paramref name="reciprocate"/>
            is true, send own contact data.
            </summary>
            <param name="uri">The URI to resolve.</param>
            <param name="reciprocate">If true send own contact data.</param>
            <param name="localname">Local name for the contact to send in exchange</param>
            <param name="message">The reciprocation message (if sent), otherwise null.</param>
            <returns>The cataloged contact information.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ConfirmationRequest(System.String,System.String)">
            <summary>
            Construct a confirmation request.
            </summary>
            <param name="accountAddress">The contact to request.</param>
            <param name="messageText">The message text to send.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ContextUser.ConfirmationResponse(Goedel.Mesh.RequestConfirmation,System.Boolean)">
            <summary>
            Make a contact reply.
            </summary>
            <param name="requestConfirmation">The request received.</param>
            <param name="response">If true, accept the confirmation request, otherwise reject.</param>
        </member>
        <member name="T:Goedel.Mesh.Client.Internal">
            <summary>
            An internal assertion check failed.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.Internal.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.Internal.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.Internal.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.Internal._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.Internal.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.AddressNotSupported">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.AddressNotSupported.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.AddressNotSupported.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.AddressNotSupported.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.AddressNotSupported._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.AddressNotSupported.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.AccountNotBound">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.AccountNotBound.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.AccountNotBound.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.AccountNotBound.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.AccountNotBound._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.AccountNotBound.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.InvalidServiceResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.InvalidServiceResponse.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.InvalidServiceResponse.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.InvalidServiceResponse.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.InvalidServiceResponse._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.InvalidServiceResponse.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.AccountNotFound">
            <summary>
            No mesh account could be found.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.AccountNotFound.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.AccountNotFound.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.AccountNotFound.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.AccountNotFound._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.AccountNotFound.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.MeshNotFound">
            <summary>
            No mesh profile could be found.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.MeshNotFound.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.MeshNotFound.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshNotFound.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshNotFound._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.MeshNotFound.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.ConnectionStillPending">
            <summary>
            The action cannot be performed because connection of this device to the account is still pending.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ConnectionStillPending.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionStillPending.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionStillPending.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionStillPending._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionStillPending.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.NotAdministrator">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.NotAdministrator.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.NotAdministrator.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.NotAdministrator.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.NotAdministrator._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.NotAdministrator.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.NotSuperAdministrator">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.NotSuperAdministrator.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.NotSuperAdministrator.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.NotSuperAdministrator.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.NotSuperAdministrator._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.NotSuperAdministrator.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.SyncFailed">
            <summary>
            The attempt to synchronize with the service failed.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.SyncFailed.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.SyncFailed.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.SyncFailed.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.SyncFailed._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.SyncFailed.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.Gateway">
            <summary>
            Error occurred in Gateway
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.Gateway.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.Gateway.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.Gateway.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.Gateway._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.Gateway.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.NoPortalAccount">
            <summary>
            No Portal account specified
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.NoPortalAccount.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.NoPortalAccount.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.NoPortalAccount.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.NoPortalAccount._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.NoPortalAccount.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.PortalConnectFail">
            <summary>
            Could not connect to portal
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.PortalConnectFail.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.PortalConnectFail.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.PortalConnectFail.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.PortalConnectFail._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.PortalConnectFail.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.PublicationRequestRefused">
            <summary>
            Portal refused profile publication request
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.PublicationRequestRefused.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.PublicationRequestRefused.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.PublicationRequestRefused.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.PublicationRequestRefused._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.PublicationRequestRefused.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.ConnectionException">
            <summary>
            The connection request did not complete
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ConnectionException.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionException.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionException._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionException.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.ConnectionRefused">
            <summary>
            The connection request was refused
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ConnectionRefused.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionRefused.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionRefused.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionRefused._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionRefused.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.ConnectionPending">
            <summary>
            The connection request is still pending
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ConnectionPending.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionPending.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionPending.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionPending._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionPending.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.ConnectionExpired">
            <summary>
            The connection request is still pending
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ConnectionExpired.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionExpired.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionExpired.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionExpired._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionExpired.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.ConnectionAccountUnknown">
            <summary>
            The connection request is still pending
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.ConnectionAccountUnknown.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionAccountUnknown.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionAccountUnknown.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.ConnectionAccountUnknown._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.ConnectionAccountUnknown.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.RefusedPINInvalid">
            <summary>
            The request was refused because the pin was invalid
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.RefusedPINInvalid.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.RefusedPINInvalid.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.RefusedPINInvalid.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.RefusedPINInvalid._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.RefusedPINInvalid.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.MessageIdNotFound">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.MessageIdNotFound.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.MessageIdNotFound.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.MessageIdNotFound.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.MessageIdNotFound._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.MessageIdNotFound.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.InvalidRecoverySecret">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.InvalidRecoverySecret.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.InvalidRecoverySecret.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Client.InvalidRecoverySecret.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.InvalidRecoverySecret._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Client.InvalidRecoverySecret.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.IMeshMachineClient">
            <summary>
            Interface exposing the properties and methods required to obtain a Mesh Client.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.IMeshMachineClient.MeshHost">
            <summary>Direct access to the Catalog, should remove this</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.IMeshMachineClient.GetMeshClient(System.String,Goedel.Cryptography.CryptoKey,Goedel.Mesh.Connection,Goedel.Mesh.Profile)">
            <summary>
            Return a MeshService client for the service ID <paramref name="accountAddress"/>
            using the authentication key <paramref name="keyAuthentication"/> and credential
            <paramref name="connection"/>. 
            </summary>
            <param name="accountAddress">The service identifier to connect to.</param>
            <param name="keyAuthentication">The private key to be used for authentication
            (encryption).</param>
            <param name="connection">The credential binding the device
            to the account.</param>
            <param name="profile">The profile. This is required when requesting
            an inbound connection or requesting that a new account be created and optional
            otherwise.</param>
            <returns></returns>
        </member>
        <member name="T:Goedel.Mesh.Client.MeshHost">
            <summary>
            Manages the host catalog, i.e. the catalog of Meshes that the device is 
            connected to.
            
            
            This should be merged with CatalogHost.
            
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Client.MeshHost.MeshMachine">
            <summary>The Mesh machine client.</summary>
        </member>
        <member name="P:Goedel.Mesh.Client.MeshHost.KeyCollection">
            <summary>The Key Collection of the Mesh Machine.</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.Disposing">
            <summary>Disposal routine.</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.#ctor(Goedel.Mesh.Client.PersistHost,Goedel.Mesh.Client.IMeshMachineClient)">
            <summary>
            Get the host catalog from the specified mesh machine.
            </summary>
            <param name="meshMachine">The Mesh Machine.</param>
            <param name="containerHost">The host catalog.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.GetCatalogHost(Goedel.Mesh.IMeshMachine)">
            <summary>
            Get the host catalog from the specified mesh machine.
            </summary>
            <param name="meshMachine"></param>
        </member>
        <member name="F:Goedel.Mesh.Client.MeshHost.DictionaryUDFContextMesh">
            <summary>Dictionary mapping mesh UDF to Context.</summary>
        </member>
        <member name="F:Goedel.Mesh.Client.MeshHost.DictionaryLocalContextMesh">
            <summary>Dictionary mapping mesh local name to Context.</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.LocateMesh(System.String)">
            <summary>
            Locate context by UDF or localname. The context acquired is owned by the MeshHost instance
            and MUST NOT be disposed of by the caller.
            </summary>
            <param name="key">The UDF or name to resolve.</param>
            <returns>The context, if a matching context is found. Otherwise null.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.Register(Goedel.Mesh.Client.HostCatalogItem,Goedel.Mesh.Client.ContextAccount,System.Boolean)">
            <summary>
            Register <paramref name="catalogItem"/> in the host catalog.
            </summary>
            <param name="catalogItem">The item to be created.</param>
            <param name="create">If true, a new item will be created if it does not
            already exist.</param>
            <param name="context">The dynamic context that interfaces to the catalog item.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.Delete(Goedel.Mesh.Client.HostCatalogItem)">
            <summary>
            Delete <paramref name="profile"/> from the host catalog.
            </summary>
            <param name="profile">The profile to delete</param>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.CreateMesh(System.String,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,System.Byte[],Goedel.Mesh.ProfileDevice)">
             <summary>
             Create a new Mesh master profile and bind to a Mesh service at <paramref name="accountAddress"/>.
             </summary>
            <param name="accountAddress">Account address to bind to.</param>
             <param name="localName">Local name for easy reference.</param>
             <param name="algorithmSign">Signature algorithm.</param>
             <param name="algorithmEncrypt">Encryption algorithm</param>
             <param name="algorithmAuthenticate">Authentication algorithm</param>
             <param name="secretSeed">Secret seed used to generate private keys.</param>
             <param name="profileDevice">Specify the device profile.</param>
             <returns>Context for administering the Mesh</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.GetContextMesh(System.String,System.Boolean)">
            <summary>
            Create a new management context for the specified Mesh profile.
            </summary>
            <param name="localName">The friendly name for the profile</param>
            <param name="admin">Enable administration privileges (if available).</param>
            <returns>Context for administering the Mesh</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.Complete(System.String)">
            <summary>
            Attempt to complete the connection to a Mesh profile. If successful. update the local host persistence store
            and return a context for the newly acquired connection. Otherwise return null.
            </summary>
            <param name="localName"></param>
            <returns>Context for the newly bound account.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.Connect(System.String,System.String,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Begin connection to a service.
            </summary>
            <returns>Context for administering the Mesh account via the service</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.Join(System.String,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Begin connection to a service.
            </summary>
            <returns>Context for administering the Mesh account via the service</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.Install(System.String,System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Install a pre-configured device profile. This is typically performed during 
            manufacture.
            </summary>
            <returns>Context for administering the Mesh account via the service</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.RecoverMesh(System.String,System.Collections.Generic.IEnumerable{System.String},Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Create a new Mesh master profile without account or service
            </summary>
            <returns>Context for administering the Mesh</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.MeshHost.CreateMeshWithAccount(System.String,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId)">
            <summary>
            Create a new Mesh master profile and account without binding to a service
            </summary>
            <returns>Context for administering the Mesh account</returns>
        </member>
        <member name="T:Goedel.Mesh.Client.NamespaceDoc">
            <summary>
            Mesh client implementation.
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Client.PersistHost">
            <summary>
            Container persisting entries for the connection catalog. This is the only type of catalog that
            is never synchronized to a service under any circumstance.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Client.PersistHost.DefaultEntry">
            <summary>The default entry</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.#cctor">
            <summary>Static initiaialization to force the static initialization of MeshItem and CatalogItem.</summary>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.#ctor(System.String,System.String,System.String,System.Boolean,Goedel.IO.FileStatus,Goedel.Cryptography.Dare.ContainerType,Goedel.Protocol.DataEncoding,Goedel.Cryptography.Dare.CryptoParameters,Goedel.Cryptography.KeyCollection,System.Boolean)">
            <summary>
            Open or create a persistence store in specified mode with 
            the specified file name, content type and optional comment.
            </summary>
            <param name="cryptoParameters">Specifies the cryptographic enhancements to
            be applied to this message.</param>
            <param name="fileName">Log file.</param>
            <param name="readOnly">If true, persistence store must exist
            and will be opened in read-only mode. If false, persistence store
            is opened in read/write mode and a new store will be created
            if none exists.</param>
            <param name="type">Type of data to store (the schema name).</param>
            <param name="comment">Comment to be written to the log.</param>
            <param name="containerType">The Container type.</param>
            <param name="dataEncoding">The data encoding.</param>
            <param name="fileStatus">The file status in which to open the container.</param>
            <param name="keyCollection">The key collection to use to resolve private keys.</param>
            <param name="readContainer">If true read the container to initialize the persistence store.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.GetByName(System.String)">
            <summary>
            Get Mesh machine with the localname <paramref name="localName"/>
            </summary>
            <param name="localName">Name of the machine to fetch.</param>
            <returns>The machine if found, otherwise null.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.GetMachine(System.String)">
            <summary>
            Get Mesh machine that matches <paramref name="localName"/> if specified, otherwise
            the default machine.
            </summary>
            <param name="localName">The machine to fetch.</param>
            <returns>The machine if found, otherwise null.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.GetForCompletion(System.String)">
            <summary>
            Gets the machine waiting for completion that mactches <paramref name="localName"/> if
            specified, or the default pending machine otherwise or the default preconfigured
            machine if not found.
            </summary>
            <param name="localName">The machine to fetch.</param>
            <returns>The machine if found, otherwise null.</returns>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.MemoryCommitNew(Goedel.Cryptography.Dare.StoreEntry)">
            <summary>
            Commit a New transaction to memory
            </summary>
            <param name="containerStoreEntry">The container store entry representing the transaction</param>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.MemoryCommitUpdate(Goedel.Cryptography.Dare.StoreEntry)">
            <summary>
            Commit update to memory.
            </summary>
            <param name="containerStoreEntry">The store entry to commit.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.PersistHost.MemoryCommitDelete(Goedel.Cryptography.Dare.StoreEntry)">
            <summary>
            Commit a Delete transaction to memory
            </summary>
            <param name="containerStoreEntry">The container store entry representing the transaction</param>
        </member>
        <member name="T:Goedel.Mesh.Client.TransactionServiced">
            <summary>
            Class backing a transaction manager that persists transactions to a Mesh
            Service account and the local store.
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Client.TransactionServiced.#ctor(Goedel.Mesh.MeshService)">
            <summary>
            Constructor for a transaction manager
            </summary>
            <param name="meshClient">The Mesh client to use to service the account.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.TransactionServiced.New(Goedel.Mesh.ICatalog,Goedel.Mesh.CatalogedEntry)">
            <summary>
            Queue request to create <paramref name="catalogEntry"/> as a new persisted object.
            </summary>
            <param name="catalogEntry">The object to create.</param>
            <param name="catalog">The catalog in which to create the object.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.TransactionServiced.Update(Goedel.Mesh.ICatalog,Goedel.Mesh.CatalogedEntry)">
            <summary>
            Queue request to create or update <paramref name="catalogEntry"/>.
            </summary>
            <param name="catalogEntry">The object to update or create.</param>
            <param name="catalog">The catalog in which to create the object.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.TransactionServiced.Delete(Goedel.Mesh.ICatalog,Goedel.Mesh.CatalogedEntry)">
            <summary>
            Queue request to delete <paramref name="catalogEntry"/>.
            </summary>
            <param name="catalogEntry">The object to delete.</param>
            <param name="catalog">The catalog in which to create the object.</param>
        </member>
        <member name="M:Goedel.Mesh.Client.TransactionServiced.Commit">
            <summary>
            Commit a set of queued requests.
            </summary>
        </member>
    </members>
</doc>
