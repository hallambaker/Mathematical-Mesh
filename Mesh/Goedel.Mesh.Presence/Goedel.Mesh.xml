<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Mesh.Presence</name>
    </assembly>
    <members>
        <member name="T:Goedel.Mesh.Presence.PresenceTBS">
            <summary>
            An internal assertion check failed.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Presence.PresenceTBS.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="F:Goedel.Mesh.Presence.PresenceTBS.Templates">
            <summary></summary>
        </member>
        <member name="M:Goedel.Mesh.Presence.PresenceTBS.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Mesh.Presence.PresenceTBS._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="F:Goedel.Mesh.Presence.PresenceTBS.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Mesh.Presence.PresenceProtocol">
             <summary>
            
             The Mesh Presence Protocol
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Presence.PresenceProtocol._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Presence.PresenceProtocol.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Presence.PresenceProtocol._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Presence.PresenceProtocol.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Mesh.Presence.MeshPresence">
            <summary>
            The new base class for the client and service side APIs.
            </summary>		
        </member>
        <member name="F:Goedel.Mesh.Presence.MeshPresence.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Presence.MeshPresence.GetWellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Presence.MeshPresence.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Presence.MeshPresence.GetDiscovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Mesh.Presence.MeshPresence.JpcSession">
            <summary>
            The active JpcSession.
            </summary>		
        </member>
        <member name="P:Goedel.Mesh.Presence.MeshPresence.JPCInterface">
            <summary>Base interface (used to create client wrapper stubs)</summary>
        </member>
        <member name="M:Goedel.Mesh.Presence.MeshPresence.AnnounceDevice(Goedel.Mesh.Presence.AnnounceDeviceRequest,Goedel.Protocol.JpcSession)">
            <summary>
            Base method for implementing the transaction  AnnounceDevice.
            </summary>
            <param name="request">The request object to send to the host.</param>
            <param name="session">The authentication binding.</param>
            <returns>The response object from the service</returns>
        </member>
        <member name="T:Goedel.Mesh.Presence.MeshPresenceClient">
            <summary>
            Client class for MeshPresence.
            </summary>		
        </member>
        <member name="P:Goedel.Mesh.Presence.MeshPresenceClient.JpcSession">
            <summary>
            The active JpcSession.
            </summary>		
        </member>
        <member name="M:Goedel.Mesh.Presence.MeshPresenceClient.#ctor(Goedel.Protocol.JPCRemoteSession)">
            <summary>
            Create a client connection to the specified service.
            </summary>	
            <param name="jpcRemoteSession">The remote session to connect to</param>
        </member>
        <member name="M:Goedel.Mesh.Presence.MeshPresenceClient.AnnounceDevice(Goedel.Mesh.Presence.AnnounceDeviceRequest,Goedel.Protocol.JpcSession)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <param name="session">The authentication binding.</param>
            <returns>The response object</returns>
        </member>
        <member name="T:Goedel.Mesh.Presence.MeshPresenceProvider">
            <summary>
            Service class for MeshPresence.
            </summary>		
        </member>
        <member name="F:Goedel.Mesh.Presence.MeshPresenceProvider.Service">
            <summary>
            Interface object to dispatch requests to.
            </summary>	
        </member>
        <member name="M:Goedel.Mesh.Presence.MeshPresenceProvider.Dispatch(Goedel.Protocol.JpcSession,Goedel.Protocol.JsonReader)">
            <summary>
            Dispatch object request in specified authentication context.
            </summary>			
            <param name="session">The client context.</param>
            <param name="jsonReader">Reader for data object.</param>
            <returns>The response object returned by the corresponding dispatch.</returns>
        </member>
        <member name="T:Goedel.Mesh.Presence.AnnounceDeviceRequest">
             <summary>
            
             Announce the device to the presence service
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Presence.AnnounceDeviceRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Presence.AnnounceDeviceRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceRequest.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceRequest.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceRequest.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Mesh.Presence.AnnounceDeviceResponse">
             <summary>
            
             Reports the result of the presence request
             </summary>
        </member>
        <member name="P:Goedel.Mesh.Presence.AnnounceDeviceResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Mesh.Presence.AnnounceDeviceResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceResponse.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceResponse.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Mesh.Presence.AnnounceDeviceResponse.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
    </members>
</doc>
