<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.ASN</name>
    </assembly>
    <members>
        <member name="T:Goedel.ASN.NamespaceDoc">
            <summary>
            Support library for ASN.1 encoding and decoding using the ASN tool.
            </summary>
        </member>
        <member name="T:Goedel.ASN.Constants">
            <summary>
            Constants used for encoding and decoding ASN.1 data
            </summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Boolean">
            <summary>Boolean</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Integer">
            <summary>Integer</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.BitString">
            <summary>Bit string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.OctetString">
            <summary>Array of bytes</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Null">
            <summary>Null object</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.ObjectIdentifier">
            <summary>Object Identifier OID</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.ObjectDescriptor">
            <summary>Object descriptor</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.External">
            <summary>External type</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Real">
            <summary>Floating point value</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Numerated">
            <summary>Numerated value</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Embedded">
            <summary>Embedded value</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.UTF8String">
            <summary>UTF8 string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.RelativeOid">
            <summary>Part of OID</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Sequence">
            <summary>List of items</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.Set">
            <summary>List of items occurring only once.</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.NumericString">
            <summary>Numeric string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.PrintableString">
            <summary>Printable string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.TeletexString">
            <summary>Teletext string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.VideotexString">
            <summary>Videotext string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.IA5String">
            <summary>IA5String</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.UTCTime">
            <summary>UTC time</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.GeneralizedTime">
            <summary>General time.</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.GraphicString">
            <summary>Graphic string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.VisibleString">
            <summary>Visible string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.GeneralString">
            <summary>Generci string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.UniversalString">
            <summary>Universal string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.CharacterString">
            <summary>Charactr string</summary>
        </member>
        <member name="F:Goedel.ASN.Constants.BMPString">
            <summary>Bitmapped string</summary>
        </member>
        <member name="T:Goedel.ASN.Root">
            <summary>
            Root class for all ASN.1 backing structures
            </summary>
        </member>
        <member name="P:Goedel.ASN.Root.OID">
            <summary>
            Object identifier of this structure.
            </summary>
        </member>
        <member name="M:Goedel.ASN.Root.DER">
            <summary>
            Return the DER encoding of this structure
            </summary>
            <returns>The DER encoded value.</returns>
        </member>
        <member name="M:Goedel.ASN.Root.Encode(Goedel.ASN.Buffer)">
            <summary>
            Write this structure to a buffer.
            </summary>
            <param name="Buffer">Buffer to write to.</param>
        </member>
        <member name="T:Goedel.ASN.ByteArrayVerbatim">
            <summary>
            ANS.1 presentation class consisting of a single byte array with no
            sequence boundaries.
            </summary>
        </member>
        <member name="F:Goedel.ASN.ByteArrayVerbatim.Data">
            <summary>
            ASN.1 member Data 
            </summary>
        </member>
        <member name="M:Goedel.ASN.ByteArrayVerbatim.Encode(Goedel.ASN.Buffer)">
            <summary>
            Write this structure to a buffer.
            </summary>
            <param name="Buffer">Buffer to write to.</param>
        </member>
        <member name="M:Goedel.ASN.ByteArrayVerbatim.Decode(Goedel.ASN.DecodeBuffer)">
             <summary>
             Decode buffer to populate class members
            
             This is done in the forward direction
             </summary>
             <param name="Buffer">The source buffer</param>
        </member>
        <member name="T:Goedel.ASN.ASN">
            <summary>
            Utility class containing static methods.
            </summary>
        </member>
        <member name="M:Goedel.ASN.ASN.OIDToArray(System.String)">
            <summary>Convert an OID value to an array of integers</summary>
            <param name="OID">The string value of the OID.</param>
            <returns>The integer values of the OID segments.</returns>
        </member>
        <member name="M:Goedel.ASN.ASN.ToBigInteger(System.Byte[])">
            <summary>
            Convert byte array to big integer
            </summary>
            <param name="Array">Array to convert</param>
            <returns>Result of conversion</returns>
        </member>
        <member name="T:Goedel.ASN.TagMode">
            <summary>
            ASN.1 data tagging modes. 
            </summary>
        </member>
        <member name="F:Goedel.ASN.TagMode.Universal">
            <summary>Intrinsic type.</summary>
        </member>
        <member name="F:Goedel.ASN.TagMode.Constructed">
            <summary>Type is constructed which is redundant as SETs and LISTs are
            always constructed.</summary>
        </member>
        <member name="F:Goedel.ASN.TagMode.Application">
            <summary></summary>
        </member>
        <member name="F:Goedel.ASN.TagMode.Context">
            <summary></summary>
        </member>
        <member name="F:Goedel.ASN.TagMode.Private">
            <summary></summary>
        </member>
        <member name="T:Goedel.ASN.ASNFlags">
            <summary>
            ASN.1 flags
            </summary>
        </member>
        <member name="F:Goedel.ASN.ASNFlags.Nil">
            <summary>No flags</summary>
        </member>
        <member name="F:Goedel.ASN.ASNFlags.Implicit">
            <summary>Tagging is implicit by position</summary>
        </member>
        <member name="F:Goedel.ASN.ASNFlags.Explicit">
            <summary>Tagging is explicit</summary>
        </member>
        <member name="F:Goedel.ASN.ASNFlags.Optional">
            <summary>The field is optional and must be tagged with the option code if present</summary>
        </member>
        <member name="F:Goedel.ASN.ASNFlags.Context">
            <summary>The field is context dependent.</summary>
        </member>
        <member name="T:Goedel.ASN.Buffer">
            <summary>
            Buffer class for assembling ASN.1 output data in DER encoding.
            </summary>
        </member>
        <member name="F:Goedel.ASN.Buffer.MaxChunk">
            <summary>
            The maximum chunk size for allocating data (defaults to 32,768)
            </summary>
        </member>
        <member name="P:Goedel.ASN.Buffer.Data">
            <summary>
            Return the value of the buffer (in a fresh zero based array)
            </summary>
        </member>
        <member name="P:Goedel.ASN.Buffer.Length">
            <summary>
            Length is calculated as buffer size - used
            </summary>
        </member>
        <member name="M:Goedel.ASN.Buffer.#ctor">
            <summary>Constructor with default initial buffer size of 1024 bytes</summary>
        </member>
        <member name="M:Goedel.ASN.Buffer.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="Size">Initial buffer size in bytes.</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Debug(System.String)">
            <summary>
            Debug output
            </summary>
            <param name="Tag">Tag to mark to output</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Add(System.Byte)">
            <summary>
            Add a byte to the stream
            </summary>
            <param name="Data">Data to write.</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.AddBase128(System.Int32)">
            <summary>
            Add a base128 encoded length tag to the buffer.
            </summary>
            <param name="Data">Integer to encode</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.AddTag(System.Int32,Goedel.ASN.TagMode)">
            <summary>
            Add tag to the stream
            </summary>
            <param name="Data">Tag to add</param>
            <param name="Mode">Tagging mode.</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.AddLength(System.Int32)">
            <summary>
            Add a data length item to the stream
            </summary>
            <param name="Data">The length to add</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.AddOID(System.Int32[])">
            <summary>
            Add OID to the stream
            </summary>
            <param name="Data">The data to add</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Sequence_Start">
            <summary>
            Start encoding a sequence
            </summary>
            <returns>Position in the buffer relative to the buffer end (always negative)</returns>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Sequence_End(System.Int32,System.Int32,System.Int32)">
            <summary>
            Encode end of a sequence. Note that since everything is written out 
            backwards calls to end sequences must preceed the date to begin.
            </summary>
            <param name="Position">Buffer position</param>
            <param name="Flags">Flags</param>
            <param name="Code">Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Sequence_End(System.Int32)">
            <summary>
            Encode end of a sequence. Note that since everything is written out 
            backwards calls to end sequences must preceed the date to begin.
            </summary>
            <param name="Position">Buffer position</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Set_Start">
            <summary>
            Start encoding a set
            </summary>
            <returns>Position in the buffer relative to the buffer end (always negative)</returns>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Set_End(System.Int32,System.Int32,System.Int32)">
            <summary>
            Encode end of a set. Note that since everything is written out 
            backwards calls to end sequences must preceed the date to begin.
            </summary>
            <param name="Position">Buffer position</param>
            <param name="Flags">Flags</param>
            <param name="Code">Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.AddTagLength(System.Int32,System.Int32,Goedel.ASN.TagMode,System.Int32,System.Int32)">
            <summary>
            Add a tag with length data
            </summary>
            <param name="Position">Current buffer position</param>
            <param name="Tag">Tag to add</param>
            <param name="TagMode">Tagging mode</param>
            <param name="Flags">Flags</param>
            <param name="Code">Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Any(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encode the data type
            </summary>
            <param name="Data">Data to be encoded</param>
            <param name="Flags">Flags</param>
            <param name="code">Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Boolean(System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Encode a boolean value with default.
            </summary>
            <param name="Data">Value to encode</param>
            <param name="Flags">Flags</param>
            <param name="code">Code</param>
            <param name="Default">The default value</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Boolean(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Encode a boolean value.
            </summary>
            <param name="Data">Value to encode</param>
            <param name="Flags">Flags</param>
            <param name="Code">Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Encode an integer value with default.
            </summary>
            <param name="Data">Value to encode</param>
            <param name="Flags">Flags</param>
            <param name="code">Code</param>
            <param name="Default">The default value</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Integer(System.Int32,System.Int32,System.Int32)">
            <summary>
            Encode a boolean value.
            </summary>
            <param name="Data">Value to encode</param>
            <param name="Flags">Flags</param>
            <param name="Code">Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__BigInteger(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encode a big integer value.
            </summary>
            <param name="Data">The data to encode in most significant byte order.</param>
            <param name="Flags">Flags</param>
            <param name="Code">ASN.1 Code.</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Null(System.Int32,System.Int32)">
            <summary>
            Encode a null value.
            </summary>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Bits(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encode a bit field.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__VBits(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encode a VBits element. The first byte in a VBits element specifies the number of
            unused bits in the last byte.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Octets(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encode a data element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Object(Goedel.ASN.Root,System.Int32,System.Int32)">
            <summary>
            Encode a data object.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__OIDRef(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Encode an OID element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__Time(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Encode a date-time element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>        
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__UTCTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Encode a UTC time element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__GeneralizedTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Encode a generalized time element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__UTF8String(System.String,System.Int32,System.Int32)">
            <summary>
            Encode a UTF8 string element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__PrintableString(System.String,System.Int32,System.Int32)">
            <summary>
            Encode a printable string element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__IA5String(System.String,System.Int32,System.Int32)">
            <summary>
            Encode a IA5String element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="M:Goedel.ASN.Buffer.Encode__BMPString(System.String,System.Int32,System.Int32)">
            <summary>
            Encode a BMP string data element.
            </summary>
            <param name="Data">Data to encode</param>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
        </member>
        <member name="T:Goedel.ASN.StackEntry">
            <summary>
            A stack entry framing a data region.
            </summary>
        </member>
        <member name="F:Goedel.ASN.StackEntry.StartPosition">
            <summary>
            The start position.
            </summary>
        </member>
        <member name="F:Goedel.ASN.StackEntry.EndPosition">
            <summary>
            The end position.
            </summary>
        </member>
        <member name="T:Goedel.ASN.DecodeBuffer">
            <summary>
            Buffer used to decode ASN1 data
            </summary>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.#ctor(System.Byte[])">
            <summary>
            Create a decode buffer from the specified byte array
            </summary>
            <param name="Input">Byte array containing encoded data</param>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Debug(System.String)">
            <summary>
            Write out debug message during processing
            </summary>
            <param name="Text">Text to write</param>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Read">
            <summary>
            Read a byte from the input stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.ReadLength">
            <summary>
            Read an ASN.1 Length value
            </summary>
            <returns>The length value read</returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__Sequence_Start">
            <summary>
            Decode the start of a sequence
            </summary>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__Sequence_End">
            <summary>
            Decode the end of a sequence
            </summary>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__Integer(System.Int32,System.Int32)">
            <summary>
            Decode an integer
            </summary>
            <param name="Flags">ASN.1 flags</param>
            <param name="Code">ASN.1 code</param>
            <returns>The value read</returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__BigInteger(System.Int32,System.Int32)">
            <summary>
            Decode a big integer.
            </summary>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
            <returns>Big integer decoded to buffer with MSB in index 0 </returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__Octets(System.Int32,System.Int32)">
            <summary>
            Decode a sequence of octets.
            </summary>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
            <returns>Big integer decoded to buffer with MSB in index 0 </returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__Object(System.Int32,System.Int32)">
            <summary>
            Decode a sequence of octets.
            </summary>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
            <returns>Big integer decoded to buffer with MSB in index 0 </returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__OIDRef(System.Int32,System.Int32)">
            <summary>
            Decode a sequence of octets.
            </summary>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
            <returns>Big integer decoded to buffer with MSB in index 0 </returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__Bits(System.Int32,System.Int32)">
            <summary>
            Decode a sequence of octets.
            </summary>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
            <returns>Big integer decoded to buffer with MSB in index 0 </returns>
        </member>
        <member name="M:Goedel.ASN.DecodeBuffer.Decode__Time(System.Int32,System.Int32)">
            <summary>
            Decode a sequence of octets.
            </summary>
            <param name="Flags">ASN.1 Flags</param>
            <param name="Code">ASN.1 Code</param>
            <returns>Big integer decoded to buffer with MSB in index 0 </returns>
        </member>
        <member name="T:Goedel.ASN.ASNDecodingException">
            <summary>
            An error occurred in the decoding of presumed ASN.1 binary data.
            </summary>
        </member>
        <member name="M:Goedel.ASN.ASNDecodingException.#ctor">
            <summary>
            Construct instance for exception "An ASN.1 Decoding exception occurred"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.ASNDecodingException.#ctor(System.String)">
            <summary>
            Construct instance for exception "An ASN.1 Decoding exception occurred"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.ASNDecodingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.ASNDecodingException.UserData">
            <summary>
            User data associated with the exception.
            </summary>	
        </member>
        <member name="F:Goedel.ASN.ASNDecodingException.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.Implementation">
            <summary>
            The data could not be decoded due to an implementation restriction
            in the decoder. This should not happen when attempting to decode
            legitimate inputs for the intended field of use.
            </summary>
        </member>
        <member name="M:Goedel.ASN.Implementation.#ctor">
            <summary>
            Construct instance for exception "Implementation restriction"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.Implementation.#ctor(System.String)">
            <summary>
            Construct instance for exception "Implementation restriction"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.Implementation.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.Implementation.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.InvalidLength">
            <summary>
            A length specification was invalid.
            </summary>
        </member>
        <member name="M:Goedel.ASN.InvalidLength.#ctor">
            <summary>
            Construct instance for exception "Length invalid"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.InvalidLength.#ctor(System.String)">
            <summary>
            Construct instance for exception "Length invalid"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.InvalidLength.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.InvalidLength.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.IndefiniteLengthInvalid">
            <summary>
            An indefinite length was specified in a context where it is not
            permitted. For example, a DER encoded item.
            </summary>
        </member>
        <member name="M:Goedel.ASN.IndefiniteLengthInvalid.#ctor">
            <summary>
            Construct instance for exception "Indefinite length not valid"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.IndefiniteLengthInvalid.#ctor(System.String)">
            <summary>
            Construct instance for exception "Indefinite length not valid"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.IndefiniteLengthInvalid.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.IndefiniteLengthInvalid.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.LengthExceedsInput">
            <summary>
            The declared length of an item exceeds the available data.
            This typically happens if the data item has been truncated
            or a malicious payload is attempting a buffer overflow attack.
            </summary>
        </member>
        <member name="M:Goedel.ASN.LengthExceedsInput.#ctor">
            <summary>
            Construct instance for exception "Length exceeds data input"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.LengthExceedsInput.#ctor(System.String)">
            <summary>
            Construct instance for exception "Length exceeds data input"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.LengthExceedsInput.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.LengthExceedsInput.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.LengthExceedsStructure">
            <summary>
            The length of an inner length encoded item exceeds that of the
            enclosing item. This means that either the data is not ASN.1,
            the data has been corrupted or is a malicious payload intended to
            perform a buffer overflow attack.
            </summary>
        </member>
        <member name="M:Goedel.ASN.LengthExceedsStructure.#ctor">
            <summary>
            Construct instance for exception "Length exceeds current structure"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.LengthExceedsStructure.#ctor(System.String)">
            <summary>
            Construct instance for exception "Length exceeds current structure"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.LengthExceedsStructure.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.LengthExceedsStructure.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.ExpectedSequence">
            <summary>
            A sequence of items was expected.
            </summary>
        </member>
        <member name="M:Goedel.ASN.ExpectedSequence.#ctor">
            <summary>
            Construct instance for exception "Expected Sequence"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.ExpectedSequence.#ctor(System.String)">
            <summary>
            Construct instance for exception "Expected Sequence"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.ExpectedSequence.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.ExpectedSequence.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.UnExpectedData">
            <summary>
            Data was encountered in an unexpected location.
            </summary>
        </member>
        <member name="M:Goedel.ASN.UnExpectedData.#ctor">
            <summary>
            Construct instance for exception "Unexpected Data"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.UnExpectedData.#ctor(System.String)">
            <summary>
            Construct instance for exception "Unexpected Data"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.UnExpectedData.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.UnExpectedData.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.ExpectedInteger">
            <summary>
            An integer was expected.
            </summary>
        </member>
        <member name="M:Goedel.ASN.ExpectedInteger.#ctor">
            <summary>
            Construct instance for exception "Expected Integer"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.ExpectedInteger.#ctor(System.String)">
            <summary>
            Construct instance for exception "Expected Integer"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.ExpectedInteger.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.ExpectedInteger.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.ASN.IntegerOverflow">
            <summary>
            The size of an integer exceeds the implementation limit. This
            is unlikely to occur in normal use.
            </summary>
        </member>
        <member name="M:Goedel.ASN.IntegerOverflow.#ctor">
            <summary>
            Construct instance for exception "Integer too large"
            </summary>		
        </member>
        <member name="M:Goedel.ASN.IntegerOverflow.#ctor(System.String)">
            <summary>
            Construct instance for exception "Integer too large"
            </summary>		
            <param name="Description">Description of the error</param>	
        </member>
        <member name="M:Goedel.ASN.IntegerOverflow.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance for exception 		/// containing an inner exception.
            </summary>		
            <param name="Description">Description of the error</param>	
            <param name="Inner">Inner Exception</param>	
        </member>
        <member name="F:Goedel.ASN.IntegerOverflow.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
    </members>
</doc>
