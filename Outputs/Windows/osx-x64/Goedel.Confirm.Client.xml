<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Confirm.Client</name>
    </assembly>
    <members>
        <member name="T:Goedel.Confirm.Client.ConfirmClient">
            <summary>
            The RecryptClient class is a convenience interface to a RecryptService instance.
            This provides a single point at which dispatch methods for the various transactions 
            may perform sanity checking on input and output variables, enforce timeouts,
            attempt retry etc.
            </summary>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.ToRequestText(System.String,System.String)">
            <summary>
            Convert message parameters to SRML data.
            </summary>
            <param name="Heading">The heading text (required).</param>
            <param name="Running">Additional descriptive text (optional).</param>
            <returns>The SRML data message.</returns>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.#ctor(System.String)">
            <summary>
            Construct a confirmation client for the specified service address.
            </summary>
            <param name="Address">The service address.</param>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.#ctor(Goedel.Confirm.ConfirmProfile)">
            <summary>
            Construct a confirmation client for the specified recryption profile.
            </summary>
            <param name="RecryptProfile">The recryption profile.</param>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.Hello">
            <summary>
            Post a Hello transaction.
            </summary>
            <returns>The hello response.</returns>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.Enquire(Goedel.Confirm.RequestEntry)">
            <summary>
            Post a request transaction
            </summary>
            <param name="RequestEntry">The request entry.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.Status(System.String,System.Boolean)">
            <summary>
            Post a status transaction
            </summary>
            <param name="BrokerID">The transaction identifier returned by the broker.</param>
            <param name="Cancel">If true, cancel the response if the status is pending.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.Pending(System.String)">
            <summary>
            Post a pending transaction
            </summary>
            <param name="ResponderID">The identifier of the responder for whom the pending transactions
            are being requested.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Goedel.Confirm.Client.ConfirmClient.Respond(Goedel.Confirm.ResponseEntry)">
            <summary>
            Post a response transaction
            </summary>
            <param name="ResponseEntry">The response information</param>
            <returns>The service response.</returns>
        </member>
        <member name="T:Goedel.Confirm.Client.NamespaceDoc">
            <summary>
            Confirmation service Client API
            </summary>
        </member>
        <member name="T:Goedel.Confirm.Client.SessionConfirm">
            <summary>
            Manage a set of application sessions that are recryption sessions bound to
            a single personal session. This allows for methods such as 'get set of candidate keys'
            </summary>
        </member>
        <member name="M:Goedel.Confirm.Client.SessionConfirm.#ctor(Goedel.Mesh.Portal.Client.SessionPersonal,Goedel.Confirm.ConfirmProfile,System.Boolean)">
            <summary>
            Construct a SessionRecryption from a personal session.
            </summary>
            <param name="SessionPersonal">The personal session to construct from.</param>
        </member>
    </members>
</doc>
