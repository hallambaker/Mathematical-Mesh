<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Repository</name>
    </assembly>
    <members>
        <member name="T:Goedel.Repository.ActivationApplicationRepository">
            <summary>
            </summary>
        </member>
        <member name="M:Goedel.Repository.ActivationApplicationRepository.GetEnvelopedActivationApplicationGroup">
            <summary>The enveloped object</summary> 
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository.AccountEncryption">
             <summary>
            Key used to decrypt registry messages.
             </summary>
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository.AdministratorSignature">
             <summary>
            Key or capability used to sign the registry log
             </summary>
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository.EnvelopedConnectionService">
             <summary>
            Signed connection service delegation allowing the device to
            access the account.
             </summary>
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.ActivationApplicationRepository._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.ActivationApplicationRepository._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.ActivationApplicationRepository._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ActivationApplicationRepository._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.ActivationApplicationRepository.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.ActivationApplicationRepository._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.ActivationApplicationRepository.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Repository.ApplicationEntryRepository">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Repository.ApplicationEntryRepository.Activation">
            <summary>The decrypted activation.</summary> 
        </member>
        <member name="M:Goedel.Repository.ApplicationEntryRepository.Decode(Goedel.Cryptography.Dare.IKeyCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Repository.ApplicationEntryRepository.GetActivationAccount">
            <summary>
            Construct an activation record for the group.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Goedel.Repository.ApplicationEntryRepository.EnvelopedActivation">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Repository.ApplicationEntryRepository._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.ApplicationEntryRepository._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.ApplicationEntryRepository._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.ApplicationEntryRepository._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.ApplicationEntryRepository._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ApplicationEntryRepository._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ApplicationEntryRepository._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ApplicationEntryRepository._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.ApplicationEntryRepository.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.ApplicationEntryRepository._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.ApplicationEntryRepository.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Repository.CatalogedRepository">
            <summary>
            </summary>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.GetGroupID(System.String)">
            <summary>Return the catalog identifier for the group <paramref name="groupAddress"/>.</summary>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository._PrimaryKey">
            <summary>
            The primary key used to catalog the entry.
            </summary>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository.ProfileGroup">
            <summary>Cached convenience accessor that unpacks the value of <see cref="P:Goedel.Repository.CatalogedRepository.EnvelopedProfileRepository"/>
            to return the <see cref="T:Goedel.Mesh.ProfileUser"/> value.</summary>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.GetEscrow">
            <summary>
            Return the escrowed keys.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.#ctor">
            <summary>
            Default constructor for serialization.
            </summary>     
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.#ctor(Goedel.Repository.ProfileRepository,Goedel.Mesh.ActivationCommon,Goedel.Cryptography.CryptoKey)">
            <summary>
            Create and return a new catalog entry for <paramref name="profileGroup"/> with
            the activation data <paramref name="activationAccount"/>.
            </summary>
            <param name="profileGroup">The group profile.</param>
            <param name="activationAccount">The activation data.</param>
            <param name="encryptionKey">Key under which the activation is to be encrypted.</param>
            <returns>The created group.</returns>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.Activate(System.Collections.Generic.List{Goedel.Mesh.ApplicationEntry},Goedel.Mesh.ProfileDevice,Goedel.Cryptography.Dare.IKeyCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.GetActivation(Goedel.Mesh.CatalogedDevice)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.ToBuilder(System.Text.StringBuilder)">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository.EnvelopedConnectionAddress">
             <summary>
            The connection allowing control of the registry.
             </summary>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository.EnvelopedProfileRepository">
             <summary>
            The Mesh profile
             </summary>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository.EnvelopedActivationCommon">
             <summary>
            The activation data for the registry.
             </summary>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.CatalogedRepository._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.CatalogedRepository._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.CatalogedRepository._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.CatalogedRepository._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.CatalogedRepository.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.CatalogedRepository.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Repository.ContextRepository">
            <summary>
            Context for managing the callsign Repository account.
            </summary>
        </member>
        <member name="F:Goedel.Repository.ContextRepository.ContextUser">
            <summary>The enclosing user context.</summary>
        </member>
        <member name="P:Goedel.Repository.ContextRepository.Profile">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ContextRepository.Connection">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Repository.ContextRepository.CatalogedCallsign">
            <summary>The catalogued group description.</summary>
        </member>
        <member name="P:Goedel.Repository.ContextRepository.ServiceAddress">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ContextRepository.ServiceDns">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ContextRepository.DictionaryCatalogDelegates">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Repository.ContextRepository.#ctor(Goedel.Mesh.Client.ContextUser,Goedel.Repository.CatalogedRepository,Goedel.Mesh.ActivationCommon)">
            <summary>
            Default constuctor, creates a group context for <paramref name="catalogedCallsign"/>
            </summary>
            <param name="contextAccount">The enclosing account context.</param>
            <param name="catalogedCallsign">Description of the group to return the
            context for.</param>
            <param name="activationAccount">The account activation.</param>
        </member>
        <member name="M:Goedel.Repository.ContextRepository.CreateGroup(Goedel.Mesh.Client.ContextUser,Goedel.Repository.CatalogedRepository,Goedel.Mesh.ActivationCommon,Goedel.Mesh.MeshServiceClient)">
            <summary>
            Create a new group.
            </summary>
            <param name="contextAccount">The enclosing account context.</param>
            <param name="catalogedRepository">Description of the group to create.</param>
            <param name="activationAccount">The account activation.</param>
            <param name="client">The client to connect to the service with.</param>
            <returns>The group context.</returns>
        </member>
        <member name="M:Goedel.Repository.ContextRepository.Publish(System.Byte[])">
            <summary>
            Publish the content <paramref name="data"/>.
            </summary>
            <param name="data">The content to publish.</param>
            <returns>The publication message.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Goedel.Repository.Internal">
            <summary>
            An internal assertion check failed.
            </summary>
        </member>
        <member name="P:Goedel.Repository.Internal.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Repository.Internal.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Repository.Internal.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Repository.Internal._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Repository.Internal.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Repository.EventExtensions">
            <summary>
            Extensions class defining logging events and convenience methods.
            </summary>
        </member>
        <member name="M:Goedel.Repository.EventExtensions.#cctor">
            <summary>
            Static initializer, is called once when the module loads.
            </summary>
        </member>
        <member name="T:Goedel.Repository.Extensions">
            <summary>
            Extensions class. Provides static convenience extensions.
            </summary>
        </member>
        <member name="M:Goedel.Repository.Extensions.Register(Goedel.Mesh.Client.ContextUser,Goedel.Repository.RepositoryService)">
            <summary>
            Register the repository service <paramref name="repositoryServer"/> under the
            user contect <paramref name="contextUser"/>.
            </summary>
            <param name="contextUser">The user context.</param>
            <param name="repositoryServer">The repository service</param>
            <returns>The corresponding repository context.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Goedel.Repository.Extensions.Publish(Goedel.Repository.ContextRepository,System.Byte[])">
            <summary>
            Publish <paramref name="data"/> to the context <paramref name="contextUser"/>
            </summary>
            <param name="contextUser">The repository context.</param>
            <param name="data">The data to publish.</param>
            <returns>The publication message.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Goedel.Repository.PersistanceProtocol">
             <summary>
            
             Callsign Registrar protocol supporting query function.
             Protocol interactions supported by the Mesh Service.
             </summary>
        </member>
        <member name="P:Goedel.Repository.PersistanceProtocol._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.PersistanceProtocol.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="P:Goedel.Repository.PersistanceProtocol._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Repository.PersistanceProtocol.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Repository.RepositoryService">
            <summary>
            The new base class for the client and service side APIs.
            </summary>		
        </member>
        <member name="F:Goedel.Repository.RepositoryService.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Repository.RepositoryService.GetWellKnown">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Repository.RepositoryService.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Repository.RepositoryService.GetDiscovery">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Repository.RepositoryService.GetTagDictionary">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Repository.RepositoryService.Dispatch(System.String,Goedel.Protocol.JsonObject,Goedel.Protocol.IJpcSession)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Repository.RepositoryService.GetDirect(Goedel.Protocol.IJpcSession)">
            <summary>
            Return a client tapping the service API directly without serialization bound to
            the session <paramref name="jpcSession"/>. This is intended for use in testing etc.
            </summary>
            <param name="jpcSession">Session to which requests are to be bound.</param>
            <returns>The direct client instance.</returns>
        </member>
        <member name="M:Goedel.Repository.RepositoryService.Query(Goedel.Repository.QueryRequest,Goedel.Protocol.IJpcSession)">
            <summary>
            Base method for implementing the transaction Query.
            </summary>
            <param name="request">The request object to send to the host.</param>
            <param name="session">The request context.</param>
            <returns>The response object from the service</returns>
        </member>
        <member name="T:Goedel.Repository.RepositoryServiceClient">
            <summary>
            Client class for RepositoryService.
            </summary>		
        </member>
        <member name="F:Goedel.Repository.RepositoryServiceClient.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Repository.RepositoryServiceClient.GetWellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="F:Goedel.Repository.RepositoryServiceClient.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Repository.RepositoryServiceClient.GetDiscovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="M:Goedel.Repository.RepositoryServiceClient.Query(Goedel.Repository.QueryRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="T:Goedel.Repository.RepositoryServiceDirect">
            <summary>
            Direct API class for RepositoryService.
            </summary>		
        </member>
        <member name="P:Goedel.Repository.RepositoryServiceDirect.Service">
            <summary>
            Interface object to dispatch requests to.
            </summary>	
        </member>
        <member name="M:Goedel.Repository.RepositoryServiceDirect.Query(Goedel.Repository.QueryRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="T:Goedel.Repository.ProfileRepository">
             <summary>
            
             Describes a Repository issuer.
             </summary>
        </member>
        <member name="P:Goedel.Repository.ProfileRepository._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.ProfileRepository._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.ProfileRepository._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.ProfileRepository._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.ProfileRepository._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ProfileRepository._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ProfileRepository._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.ProfileRepository._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.ProfileRepository.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.ProfileRepository._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.ProfileRepository.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Repository.ProfileRepository.#ctor">
            <summary>
            Create and return an empty instance.
            </summary>
        </member>
        <member name="M:Goedel.Repository.ProfileRepository.#ctor(System.String,Goedel.Mesh.ActivationCommon)">
            <summary>
            Construct a Profile Account instance  from <paramref name="accountAddress"/>.
            </summary>
            <param name="accountAddress">The account address</param>
            <param name="activationAccount">The activation used to create the account data.</param>
        </member>
        <member name="M:Goedel.Repository.ProfileRepository.Validate">
            <summary>
            Verify the profile to check that it is correctly signed and consistent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Goedel.Repository.PersistanceRequest">
             <summary>
            
             Base class for all requests made to a registrar
             </summary>
        </member>
        <member name="P:Goedel.Repository.PersistanceRequest._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.PersistanceRequest._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.PersistanceRequest._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.PersistanceRequest._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.PersistanceRequest._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.PersistanceRequest._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.PersistanceRequest._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.PersistanceRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.PersistanceRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.PersistanceRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.PersistanceRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Repository.PersistanceResponse">
             <summary>
            
             Base class for all response messages. Contains only the
             status code and status description fields.
             </summary>
        </member>
        <member name="P:Goedel.Repository.PersistanceResponse._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.PersistanceResponse._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.PersistanceResponse._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.PersistanceResponse._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.PersistanceResponse._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.PersistanceResponse._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.PersistanceResponse._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.PersistanceResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.PersistanceResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.PersistanceResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.PersistanceResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Repository.QueryRequest">
             <summary>
            
             Register connection request. 
             </summary>
        </member>
        <member name="P:Goedel.Repository.QueryRequest._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.QueryRequest._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.QueryRequest._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.QueryRequest._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.QueryRequest._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.QueryRequest._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.QueryRequest._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.QueryRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.QueryRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.QueryRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.QueryRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Repository.QueryResponse">
             <summary>
            
             Return the result of a connection request
             </summary>
        </member>
        <member name="P:Goedel.Repository.QueryResponse._Binding">
            <summary>Implement IBinding</summary> 
        </member>
        <member name="F:Goedel.Repository.QueryResponse._binding">
            <summary>Binding</summary> 
        </member>
        <member name="F:Goedel.Repository.QueryResponse._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Repository.QueryResponse._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Repository.QueryResponse._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.QueryResponse._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.QueryResponse._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Repository.QueryResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Repository.QueryResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Repository.QueryResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Repository.QueryResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Presence.NamespaceDoc">
            <summary>
            Desctiption of the 
            </summary>
        </member>
    </members>
</doc>
