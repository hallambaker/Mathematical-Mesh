<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Callsign</name>
    </assembly>
    <members>
        <member name="T:Goedel.Callsign.ContextCallsign">
            <summary>
            Context for managing the callsign registry account.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ContextCallsign.Profile">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ContextCallsign.Connection">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ContextCallsign.AccountAddress">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ContextCallsign.#ctor(Goedel.Mesh.Client.MeshHost,Goedel.Mesh.Client.CatalogedMachine)">
            <summary>
            Constructor, creates a <see cref="T:Goedel.Mesh.Client.ContextUser"/> instance for the catalog entry 
            <paramref name="catalogedMachine"/> on machine <paramref name="meshHost"/>.
            </summary>
            <param name="catalogedMachine">Description of the device profile.</param>
            <param name="meshHost">The Mesh host to add the admin context to.</param>
        </member>
        <member name="T:Goedel.Callsign.Callsign">
             <summary>
            
             A callsign entry
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Pages">
            <summary>List of callsign code pages.</summary> 
        </member>
        <member name="P:Goedel.Callsign.Callsign.VariantList">
            <summary>List of variant characters specified in the code page.</summary> 
        </member>
        <member name="M:Goedel.Callsign.Callsign.#ctor(System.String)">
            <summary>
            Constructor returning a callsign instance. If the parameter <paramref name="presentation"/>
            is not null, the presentation value of the callsign is set to the specified value.
            </summary>
            <param name="presentation">The presentation value to be set.</param>
        </member>
        <member name="M:Goedel.Callsign.Callsign.SetPresentation(System.String)">
            <summary>
            Set the presentation value of the callsign. 
            </summary>
            <param name="presentation">The presentation value to be set.</param>
            <exception cref="T:Goedel.Callsign.InvalidPresentation">The presentation is invalid</exception>
        </member>
        <member name="M:Goedel.Callsign.Callsign.AddPage(Goedel.Callsign.Page)">
            <summary>
            Add the code page <paramref name="page"/>
            </summary>
            <param name="page">The code page to add.</param>
        </member>
        <member name="M:Goedel.Callsign.Callsign.MakeIndex">
            <summary>
            Create an index over the code page.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Callsign.Canonicalize(System.String)">
            <summary>
            Return the canonical form of the page <paramref name="presentation"/> according
            to the code page settings.
            </summary>
            <param name="presentation">The presentation to canonicalize</param>
            <returns>The canonical form of <paramref name="presentation"/>.</returns>
            <exception cref="T:Goedel.Callsign.InvalidCharacter">A character is invalid</exception>
        </member>
        <member name="M:Goedel.Callsign.Callsign.IsAllowed(System.Char,Goedel.Callsign.CharacterSpan@)">
            <summary>
            Returns true if the character <paramref name="c"/> is permitted
            in the character span <paramref name="characterSpan"/>. Otherwise,
            an exception is thrown.
            </summary>
            <param name="c"></param>
            <param name="characterSpan"></param>
            <returns></returns>
            <exception cref="T:Goedel.Utilities.NYI"></exception>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Id">
             <summary>
            The callsign identifier in canonical form used for query.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Presentation">
             <summary>
            The callsign identifier in the prefered presentation form.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Holder">
             <summary>
            The UDF of the holder's root of trust
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Alias">
             <summary>
            This callsign is an alias for another registered callsign.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Service">
             <summary>
            The callsign or DNS address of the service provider
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Dns">
             <summary>
            Address(es) of a DNS service that resolves the authoritative domain 
            'id.mesh'.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign.Account">
             <summary>
            The Mesh Account profile to which the callsign belongs.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Callsign._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Callsign._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Callsign._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Callsign.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Callsign._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Callsign.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Callsign.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Callsign.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Callsign.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.RegistrationReason">
            <summary>Registration reasons</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Unknown">
            <summary>Undefined type</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Initial">
            <summary>Initial registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Update">
            <summary>Update of prior registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Voluntary">
            <summary>Voluntary transfer of registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Administrative">
            <summary>Administrative transfer of registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Revoke">
            <summary>Registration revocation</summary>
        </member>
        <member name="T:Goedel.Callsign.CallsignConstants">
            <summary>
            Constants specified in hallambaker-callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignDomain">
            <summary>
            The toplevel pseudo-domain for mesh assigned names.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CharacterPageDigitsId">
            <summary>
            Character page specifying digits and spaces
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CharacterPageLatinId">
            <summary>
            Character page specifying Latin-1 character set
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignProvider0">
            <summary>
            Provisional provider
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignProvider1">
            <summary>
            Mesh service provider
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignAlice">
            <summary>
            Alice original callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignAlice1">
            <summary>
            Alice updated callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignBob">
            <summary>
            Bob original callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignQuartermaster">
            <summary>
            The quartermaster's callsign.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonInitialTag">
            <summary>Jose enumeration tag for RegistrationReason.Initial</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonUpdateTag">
            <summary>Jose enumeration tag for RegistrationReason.Update</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonVoluntaryTag">
            <summary>Jose enumeration tag for RegistrationReason.Voluntary</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonAdministrativeTag">
            <summary>Jose enumeration tag for RegistrationReason.Administrative</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonRevokeTag">
            <summary>Jose enumeration tag for RegistrationReason.Revoke</summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignConstants.ToRegistrationReason(System.String)">
            <summary>
            Convert the string <paramref name="text"/> to the corresponding enumeration
            value.
            </summary>
            <param name="text">The string to convert.</param>
            <returns>The enumeration value.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignConstants.ToLabel(Goedel.Callsign.RegistrationReason)">
            <summary>
            Convert the enumerated value <paramref name="data"/> to the corresponding string
            value.
            </summary>
            <param name="data">The enumerated value.</param>
            <returns>The text value.</returns>
        </member>
        <member name="T:Goedel.Callsign.CallsignEntry">
             <summary>
            
             Entries that may appear in the Callsign registry log. Three types of entry 
             are currently defined: Entries relating to registration and transfer of callsigns,
             Entries relating to descriptions of callsign character pages and entries relating
             to cross notarization of the log by third parties.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignEntry._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignEntry.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignEntry._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignEntry.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Callsign.Registration">
             <summary>
            
             A callsign or Notarization registration
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Id">
             <summary>
            Unique registration identifier
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Entry">
             <summary>
            Envelope containing the item that has been registered.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Submitted">
             <summary>
            The UTC time instant that the claim was submitted.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Registrar">
             <summary>
            Callsign of the registrar that made the registration request
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.PriorId">
             <summary>
            If present, specifies a previous registration with the same identifier.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Reason">
             <summary>
            Reason for creating a registration:
            Initial/ Update/ Voluntary/ Administrative/ Revoke
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Registration._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Registration._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Registration.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Registration._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Registration.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Registration.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Registration.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Registration.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Page">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Page.Id">
             <summary>
            Character page identifier
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Page.Allow">
             <summary>
            Additional allowed pages.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Page.CharacterSpans">
             <summary>
            Characters permitted within this code page.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Page._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Page._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Page._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Page.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Page._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Page.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Page.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Page.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Page.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.CharacterSpan">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan.First">
             <summary>
            The first character in the range (inclusive)
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan.Last">
             <summary>
            The last character in the range (inclusive), if ommitted or
            equal to zero, this is the same as Last.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CharacterSpan.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Canonical">
             <summary>
            
             Canonical character span.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Canonical._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Canonical._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Canonical._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Canonical.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Canonical._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Canonical.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Canonical.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Canonical.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Canonical.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.MapChar">
             <summary>
            
             Specifies a variant mapping the range of characters First..First+n to
             a range of characters Target..Target+n. Where n = Last - First+1
             </summary>
        </member>
        <member name="P:Goedel.Callsign.MapChar.Target">
             <summary>
            The character that First is mapped to.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.MapChar._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapChar._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapChar._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.MapChar.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.MapChar._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.MapChar.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.MapChar.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.MapChar.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.MapChar.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.MapString">
             <summary>
            
             Specifies a mapping of non canonical characters in the range specified by 
             First..Last to the string Target.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.MapString.Target">
             <summary>
            Specifies a character string that the Source character(s) are mapped to.
            If count is greater than 1, all the characters map to the same string.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.MapString._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapString._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapString._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.MapString.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.MapString._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.MapString.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.MapString.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.MapString.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.MapString.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Notarization">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Notarization.Entries">
             <summary>
            Enveloped witness value of a specific append only log.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Notarization.Proof">
             <summary>
            Proof path validating the previous notary token that was entered in the
            log.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Notarization._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Notarization._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Notarization._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Notarization.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Notarization._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Notarization.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Notarization.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Notarization.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Notarization.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.ProfileDns">
             <summary>
            
             
             </summary>
        </member>
        <member name="P:Goedel.Callsign.ProfileDns.SecurityPolicies">
             <summary>
            Specify TLS policies for use in the zone.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.ProfileDns._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileDns._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileDns._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ProfileDns.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileDns._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.ProfileDns.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.ProfileDns.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.ProfileDns.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.ProfileDns.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.SecurityPolicy">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy.CName">
             <summary>
            The DNS zone(s) to which this policy applies.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy.Protocol">
             <summary>
            IANA protocol name, e.g. SMTP, SUBMIT, HTTP, HTTPS, etc.		
             </summary>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy.Enhancements">
             <summary>
            Enhancements that are supported for the specified protocol. 
            Allowed values include none/ tls1.2/ tls1.3/ http3/ dnssec
             </summary>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy.Require">
             <summary>
            If true, clients MUST use one of the supported enhancements.		
             </summary>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy.Roots">
             <summary>
            Keys specifying roots of trust for the specified protocol(s).
             </summary>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SecurityPolicy._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.SecurityPolicy.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.SecurityPolicy._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.SecurityPolicy.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.SecurityPolicy.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.SecurityPolicy.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.SecurityPolicy.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Accreditation">
             <summary>
            
             Registration of a trusted third party accreditation
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation.Callsign">
             <summary>
            The callsigns to which the accreditation applies
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation.SubjectNames">
             <summary>
            The validated names of the subject
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation.SubjectLogos">
             <summary>
            Mesh strong URIs from which a validated logo belonging to the 
            subject MAY be retreived and validated.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation.Issued">
             <summary>
            The time the assertion was issued.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation.Expires">
             <summary>
            The time the assertion is due to expire
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation.Policy">
             <summary>
            The issuing policy under which the validation was performed.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation.Practice">
             <summary>
            The issuing practices under which the validation was performed.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Accreditation._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Accreditation._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Accreditation._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Accreditation.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Accreditation._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Accreditation.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Accreditation.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Accreditation.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Accreditation.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Challenge">
             <summary>
            
             Registers a challenge to one or more callsigns that have been registered.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Challenge.Subjects">
             <summary>
            The callsigns subject to challenge
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Challenge.Basis">
             <summary>
            The basis for the challenge
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Challenge._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Challenge._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Challenge._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Challenge.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Challenge._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Challenge.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Challenge.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Challenge.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Challenge.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.InvalidPresentation">
            <summary>
            An attempt was made to set the presentation property of a callsign
            to a value that does not match the canonical form of that callsign.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidPresentation.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidPresentation.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.InvalidPresentation.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.InvalidPresentation._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.InvalidPresentation.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.InvalidCharacter">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidCharacter.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidCharacter.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.InvalidCharacter.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.InvalidCharacter._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.InvalidCharacter.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.EventExtensions">
            <summary>
            Extensions class defining logging events and convenience methods.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.EventExtensions.#cctor">
            <summary>
            Static initializer, is called once when the module loads.
            </summary>
        </member>
        <member name="T:Callsign.NamespaceDoc">
            <summary>
            Mesh Callsign registry implementation.
            </summary>
        </member>
    </members>
</doc>
