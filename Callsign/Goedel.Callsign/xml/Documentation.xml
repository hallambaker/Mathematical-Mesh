<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Callsign</name>
    </assembly>
    <members>
        <member name="T:Goedel.Callsign.RegistrationReason">
            <summary>Registration reason</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Unknown">
            <summary>Undefined type</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Initial">
            <summary>Initial registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Update">
            <summary>Update of prior registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Voluntary">
            <summary>Voluntary transfer of registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Administrative">
            <summary>Administrative transfer of registration</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationReason.Revoke">
            <summary>Registration revocation</summary>
        </member>
        <member name="T:Goedel.Callsign.RegistrationRefusal">
            <summary>Refusal reason</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.Unknown">
            <summary>Undefined type</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.RegistrationRefused">
            <summary>Registration refused</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.RequestTooLarge">
            <summary>Binding request larger than the maximum permitted size.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.CanonicalFormInvalid">
            <summary>Canonical form invalid.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.DisplayFormInvalid">
            <summary>Display form does not match the canonical form.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.CallsignLengthInvalid">
            <summary>Callsign length is invalid.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.RequestSignatureInvalid">
            <summary>Request signature is invalid.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.BindingSignatureInvalid">
            <summary>Binding signature is invalid.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.RequestNotAuthorized">
            <summary>Request is not authorized.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.RequestRequiresPayment">
            <summary>Requires payment.</summary>
        </member>
        <member name="F:Goedel.Callsign.RegistrationRefusal.PaymentInsufficient">
            <summary>Payment insufficient.</summary>
        </member>
        <member name="T:Goedel.Callsign.CallsignConstants">
            <summary>
            Constants specified in hallambaker-callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignDomain">
            <summary>
            The toplevel pseudo-domain for mesh assigned names.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CharacterPageDigitsId">
            <summary>
            Character page specifying digits and spaces
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CharacterPageLatinId">
            <summary>
            Character page specifying Latin-1 character set
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignProvider0">
            <summary>
            Provisional provider
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignProvider1">
            <summary>
            Mesh service provider
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignAlice">
            <summary>
            Alice original callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignAlice1">
            <summary>
            Alice updated callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignBob">
            <summary>
            Bob original callsign
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.CallsignQuartermaster">
            <summary>
            The quartermaster's callsign.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonInitialTag">
            <summary>Jose enumeration tag for RegistrationReason.Initial</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonUpdateTag">
            <summary>Jose enumeration tag for RegistrationReason.Update</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonVoluntaryTag">
            <summary>Jose enumeration tag for RegistrationReason.Voluntary</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonAdministrativeTag">
            <summary>Jose enumeration tag for RegistrationReason.Administrative</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationReasonRevokeTag">
            <summary>Jose enumeration tag for RegistrationReason.Revoke</summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignConstants.ToRegistrationReason(System.String)">
            <summary>
            Convert the string <paramref name="text"/> to the corresponding enumeration
            value.
            </summary>
            <param name="text">The string to convert.</param>
            <returns>The enumeration value.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignConstants.ToLabel(Goedel.Callsign.RegistrationReason)">
            <summary>
            Convert the enumerated value <paramref name="data"/> to the corresponding string
            value.
            </summary>
            <param name="data">The enumerated value.</param>
            <returns>The text value.</returns>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalRegistrationRefusedTag">
            <summary>Jose enumeration tag for RegistrationRefusal.RegistrationRefused</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalRequestTooLargeTag">
            <summary>Jose enumeration tag for RegistrationRefusal.RequestTooLarge</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalCanonicalFormInvalidTag">
            <summary>Jose enumeration tag for RegistrationRefusal.CanonicalFormInvalid</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalDisplayFormInvalidTag">
            <summary>Jose enumeration tag for RegistrationRefusal.DisplayFormInvalid</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalCallsignLengthInvalidTag">
            <summary>Jose enumeration tag for RegistrationRefusal.CallsignLengthInvalid</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalRequestSignatureInvalidTag">
            <summary>Jose enumeration tag for RegistrationRefusal.RequestSignatureInvalid</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalBindingSignatureInvalidTag">
            <summary>Jose enumeration tag for RegistrationRefusal.BindingSignatureInvalid</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalRequestNotAuthorizedTag">
            <summary>Jose enumeration tag for RegistrationRefusal.RequestNotAuthorized</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalRequestRequiresPaymentTag">
            <summary>Jose enumeration tag for RegistrationRefusal.RequestRequiresPayment</summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignConstants.RegistrationRefusalPaymentInsufficientTag">
            <summary>Jose enumeration tag for RegistrationRefusal.PaymentInsufficient</summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignConstants.ToRegistrationRefusal(System.String)">
            <summary>
            Convert the string <paramref name="text"/> to the corresponding enumeration
            value.
            </summary>
            <param name="text">The string to convert.</param>
            <returns>The enumeration value.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignConstants.ToLabel(Goedel.Callsign.RegistrationRefusal)">
            <summary>
            Convert the enumerated value <paramref name="data"/> to the corresponding string
            value.
            </summary>
            <param name="data">The enumerated value.</param>
            <returns>The text value.</returns>
        </member>
        <member name="T:Goedel.Callsign.CallsignEntry">
             <summary>
            
             Entries that may appear in the Callsign registry log. Three types of entry 
             are currently defined: Entries relating to registration and transfer of callsigns,
             Entries relating to descriptions of callsign character pages and entries relating
             to cross notarization of the log by third parties.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignEntry._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignEntry.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignEntry._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignEntry.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Callsign.ProfileRegistry">
             <summary>
            
             Describes a callsign registry.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileRegistry.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ProfileRegistry.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.ProfileRegistry._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.ProfileRegistry._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.ProfileRegistry._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileRegistry._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileRegistry._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileRegistry._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ProfileRegistry.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileRegistry._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.ProfileRegistry.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.ProfileRegistry.#ctor">
            <summary>
            Default constructor, returns an empty instance.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileRegistry.#ctor(System.String,Goedel.Mesh.ActivationCommon)">
            <summary>
            Construct a Profile Account instance  from <paramref name="accountAddress"/>.
            </summary>
            <param name="accountAddress">The account address</param>
            <param name="activationAccount">The activation used to create the account data.</param>
        </member>
        <member name="M:Goedel.Callsign.ProfileRegistry.Validate">
            <summary>
            Verify the profile to check that it is correctly signed and consistent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Goedel.Callsign.ProfileResolver">
             <summary>
            
             Describes a callsign resolver.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.ProfileResolver.EnvelopedProfileRegistry">
             <summary>
            The registry that this resolver resolves.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.ProfileResolver._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.ProfileResolver._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.ProfileResolver._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileResolver._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileResolver._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProfileResolver._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ProfileResolver.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.GetEnvelopedProfileAccount">
            <summary>Typed enveloped data</summary> 
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.#ctor">
            <summary>
            Default constructor, returns an empty instance.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.#ctor(Goedel.Cryptography.Dare.Enveloped{Goedel.Mesh.ProfileAccount},Goedel.Cryptography.Jose.PrivateKeyUDF,Goedel.Cryptography.Dare.IKeyCollection,System.Boolean)">
            <summary>
            Construct a Profile Host instance  from a <see cref="T:Goedel.Cryptography.Jose.PrivateKeyUDF"/>
            </summary>
            <param name="secretSeed">The secret seed value.</param>
            <param name="keyCollection">The base key collection</param>
            <param name="persist">If true, persist the service record to the local machine
            <param name="envelopedProfileRegistry">The enveloped registry profile</param>
            store.</param>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.Generate">
            <summary>
            Generate profile specific keys.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.Generate(Goedel.Cryptography.Dare.Enveloped{Goedel.Mesh.ProfileAccount},Goedel.Cryptography.Dare.IKeyCollection,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,Goedel.Cryptography.CryptoAlgorithmId,System.Int32,Goedel.Cryptography.Jose.PrivateKeyUDF,System.Boolean)">
            <summary>
            Construct a new ProfileDevice instance from a <see cref="T:Goedel.Cryptography.Jose.PrivateKeyUDF"/>
            seed.
            </summary>
            <param name="envelopedProfileRegistry">The enveloped registry profile.</param>
            <param name="secretSeed">The secret seed value.</param>
            <param name="algorithmEncrypt">The encryption algorithm.</param>
            <param name="algorithmSign">The signature algorithm</param>
            <param name="algorithmAuthenticate">The signature algorithm</param>
            <param name="bits">The size of key to generate in bits/</param>
            <param name="keyCollection">The keyCollection to manage and persist the generated keys.</param>
            <param name="persist">If <see langword="true"/> persist the secret seed value to
            <paramref name="keyCollection"/>.</param>
            <returns>The created profile.</returns>
        </member>
        <member name="M:Goedel.Callsign.ProfileResolver.CreateService(Goedel.Mesh.IMeshMachine,Goedel.Cryptography.Dare.Enveloped{Goedel.Mesh.ProfileAccount},Goedel.Mesh.ProfileService@,Goedel.Mesh.ProfileHost@,Goedel.Mesh.ActivationHost@,Goedel.Mesh.ConnectionService@)">
            <summary>
            Create a new configuration of the resolver service.
            </summary>
            <param name="meshMachine">The Mesh Machine</param>
            <param name="envelopedProfileRegistry">The enveloped registry profile.</param>
            <param name="profileService">The service profile.</param>
            <param name="profileHost">The host profile.</param>
            <param name="activationDevice">The device activation.</param>
            <param name="connectionDevice">The device connection.</param>
        </member>
        <member name="T:Goedel.Callsign.Registration">
             <summary>
            
             A callsign or Notarization registration
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Id">
             <summary>
            Unique registration identifier
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Entry">
             <summary>
            The signed callsign binding
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Submitted">
             <summary>
            The UTC time instant that the claim was submitted.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Registrar">
             <summary>
            Callsign of the registrar that made the registration request
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.PriorId">
             <summary>
            If present, specifies a previous registration with the same identifier.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Registration.Reason">
             <summary>
            Reason for creating a registration:
            Initial/ Update/ Voluntary/ Administrative/ Revoke
             </summary>
        </member>
        <member name="M:Goedel.Callsign.Registration.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Registration.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.Registration._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.Registration._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.Registration._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Registration._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Registration._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Registration._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Registration.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Registration._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Registration.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Registration.#ctor">
            <summary>
            Default constructor, returns an empty instance.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Registration.#ctor(Goedel.Mesh.CallsignBinding,Goedel.Callsign.Registration,Goedel.Callsign.RegistrationReason)">
            <summary>
            Return a registration instance for the callsign <paramref name="callsign"/> with optional
            prior registration <paramref name="registration"/> and 
            </summary>
            <param name="callsign">The callsign binding.</param>
            <param name="registration">The prior registration for the canonical callsign
            value.</param>
            <param name="registrationReason">The registration reason. This is ignored if 
            <paramref name="registration"/> is null.</param>
        </member>
        <member name="T:Goedel.Callsign.CatalogedRegistration">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration.Canonical">
             <summary>
            The canonical form of the callsign.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration.Id">
             <summary>
            Unique registration identifier
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration.EnvelopedRegistration">
             <summary>
            The registration entry for the item.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.CatalogedRegistration.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CatalogedRegistration.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.CatalogedRegistration._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CatalogedRegistration._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CatalogedRegistration.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CatalogedRegistration._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.CatalogedRegistration.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration._PrimaryKey">
            <summary>The primary key is protocol:site </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedRegistration.Registration">
            <summary>The unpacked value of <see cref="P:Goedel.Callsign.CatalogedRegistration.EnvelopedRegistration"/></summary> 
        </member>
        <member name="M:Goedel.Callsign.CatalogedRegistration.#ctor">
            <summary>
            Create an empty instance and return.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CatalogedRegistration.Describe(System.Text.StringBuilder,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CatalogedRegistration.ItemToBuilder(System.Text.StringBuilder,System.Int32,Goedel.Cryptography.Dare.IKeyCollection)">
            <inheritdoc/>
        </member>
        <member name="T:Goedel.Callsign.Page">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Page.Id">
             <summary>
            Character page identifier
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Page.Allow">
             <summary>
            Additional allowed pages.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Page.CharacterSpans">
             <summary>
            Characters permitted within this code page.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.Page.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Page.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.Page._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.Page._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.Page._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Page._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Page._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Page._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Page.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Page._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Page.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="F:Goedel.Callsign.Page.SubPages">
            <summary>Dictionary listing the valid sub pages.</summary> 
        </member>
        <member name="M:Goedel.Callsign.Page.Expand(System.Collections.Generic.Dictionary{System.String,Goedel.Callsign.Page})">
            <summary>Expand the dictionary with entries from <paramref name="pages"/>.</summary> 
        </member>
        <member name="M:Goedel.Callsign.Page.IsAllowed(System.Char)">
            <summary>
            Return true if the character <paramref name="c"/> is allowed in this page
            (or a sub-page), otherwise false.
            </summary>
            <param name="c">The character to check.</param>
            <returns>True if the character is allowed, otherwise false.</returns>
        </member>
        <member name="F:Goedel.Callsign.Page.FileCharacterPageDigits">
            <summary>The resource identifier for the digits character page.</summary> 
        </member>
        <member name="F:Goedel.Callsign.Page.FileCharacterPageLatin">
            <summary>The resource identifier for the Latin character page.</summary> 
        </member>
        <member name="F:Goedel.Callsign.Page.FileCharacterPageReserved">
            <summary>The resource identifier for the reserved character page.</summary> 
        </member>
        <member name="M:Goedel.Callsign.Page.LoadResource(System.String)">
            <summary>
            Load the resource with identifier <paramref name="file"/>
            </summary>
            <param name="file">The resource to load.</param>
            <returns>The page resulting from parsing the resource.</returns>
        </member>
        <member name="M:Goedel.Callsign.Page.LoadResources">
            <summary>
            Load the default pages and return the pages as a list.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Goedel.Callsign.CharacterSpan">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan.First">
             <summary>
            The first character in the range (inclusive)
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan.Last">
             <summary>
            The last character in the range (inclusive), if ommitted or
            equal to zero, this is the same as Last.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.CharacterSpan._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CharacterSpan._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CharacterSpan._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CharacterSpan.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.CharacterSpan.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.Canonical">
             <summary>
            
             Canonical character span.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.Canonical.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Canonical.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.Canonical._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.Canonical._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.Canonical._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Canonical._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Canonical._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Canonical._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Canonical.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Canonical._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Canonical.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.MapChar">
             <summary>
            
             Specifies a variant mapping the range of characters First..First+n to
             a range of characters Target..Target+n. Where n = Last - First+1
             </summary>
        </member>
        <member name="P:Goedel.Callsign.MapChar.Target">
             <summary>
            The character that First is mapped to.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.MapChar.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.MapChar.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.MapChar._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.MapChar._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.MapChar._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapChar._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapChar._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapChar._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.MapChar.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.MapChar._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.MapChar.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.MapString">
             <summary>
            
             Specifies a mapping of non canonical characters in the range specified by 
             First..Last to the string Target.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.MapString.Target">
             <summary>
            Specifies a character string that the Source character(s) are mapped to.
            If count is greater than 1, all the characters map to the same string.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.MapString.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.MapString.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.MapString._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.MapString._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.MapString._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapString._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapString._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.MapString._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.MapString.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.MapString._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.MapString.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.Notarization">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Notarization.Entries">
             <summary>
            Enveloped witness value of a specific append only log.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Notarization.Proof">
             <summary>
            Proof path validating the previous notary token that was entered in the
            log.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.Notarization.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Notarization.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.Notarization._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.Notarization._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.Notarization._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Notarization._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Notarization._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Notarization._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Notarization.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Notarization._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Notarization.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Notarization.GetWitness(System.Int32)">
            <summary>
            Return a witness value for the index <paramref name="index"/>
            </summary>
            <param name="index">The index to return a witness value for.</param>
            <returns>The Witness value.</returns>
        </member>
        <member name="T:Goedel.Callsign.Challenge">
             <summary>
            
             Registers a challenge to one or more callsigns that have been registered.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Challenge.Subjects">
             <summary>
            The callsigns subject to challenge
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Challenge.Basis">
             <summary>
            The basis for the challenge
             </summary>
        </member>
        <member name="M:Goedel.Callsign.Challenge.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Challenge.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.Challenge._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.Challenge._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.Challenge._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Challenge._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Challenge._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Challenge._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Challenge.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Challenge._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Challenge.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.CallsignRegistrationRequest">
             <summary>
            
             Connection request message. This message contains the information
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationRequest.EnvelopedCallsignBinding">
             <summary>
            The enveloped binnding of the callsign to the profile.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationRequest.Profiles">
             <summary>
            One or more profiles under which the EnvelopedCallsignBinding is 
            validlty signed.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationRequest.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationRequest.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.CallsignRegistrationRequest._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CallsignRegistrationRequest._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationRequest._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationRequest._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationRequest._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignRegistrationRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationRequest.Validate(System.String)">
            <summary>
            Validate that the profile presented as purporting to bind to <paramref name="udf"/>
            and return true if valid, false otherwise.
            </summary>
            <param name="udf">The fingerprint value to validate.</param>
            <returns>True if the specified profile is present in <see cref="P:Goedel.Callsign.CallsignRegistrationRequest.Profiles"/></returns>
        </member>
        <member name="T:Goedel.Callsign.CallsignRegistrationResponse">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse.Registered">
             <summary>
            True if and only if a new registration was created.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse.CatalogedRegistration">
             <summary>
            The resulting catalog entry if accepted or the prior registration otherwise.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse.Reason">
             <summary>
            Reason for refusing the registration (if refused)
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse.Callsign">
             <summary>
            The value specified as the Canonical field in the callsign request if present,
            otherwise the value specified in the Display field, otherwise null.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationResponse.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationResponse.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.CallsignRegistrationResponse._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CallsignRegistrationResponse._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CallsignRegistrationResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignRegistrationResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignRegistrationResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.ProcessResultCallsignRegistration">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsignRegistration.CallsignRegistrationResponse">
            <summary>
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsignRegistration.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsignRegistration.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.ProcessResultCallsignRegistration._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.ProcessResultCallsignRegistration._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsignRegistration._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsignRegistration._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsignRegistration._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsignRegistration._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ProcessResultCallsignRegistration.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsignRegistration._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsignRegistration.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.CatalogedApplicationCallsign">
             <summary>
            
             Application entry tracking the status of a callsign binding request
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign.CallSign">
             <summary>
            The registered callsign in canonical form.		
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign.RequestId">
             <summary>
            The MessageId of the request message
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign.EnvelopedCallsignBinding">
             <summary>
            The callsign binding  
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign.CatalogedRegistration">
             <summary>
            The resulting catalog entry if accepted or the prior registration otherwise.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign.Reason">
             <summary>
            Reason for refusing the registration (if refused)
             </summary>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.CatalogedApplicationCallsign._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CatalogedApplicationCallsign._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CatalogedApplicationCallsign.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="P:Goedel.Callsign.CatalogedApplicationCallsign._PrimaryKey">
            <summary>
            The primary key used to catalog the entry.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.GetKey(System.String)">
            <summary>
            Return a catalog key for the SMTP mail account <paramref name="callsign"/>.
            </summary>
            <param name="callsign">The input, an RFC822 address.</param>
            <returns>The catalog key.</returns>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.Activate(System.Collections.Generic.List{Goedel.Mesh.ApplicationEntry},Goedel.Mesh.ProfileDevice,Goedel.Cryptography.Dare.IKeyCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.GetActivation(Goedel.Mesh.CatalogedDevice)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.GetEscrow">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.CatalogedApplicationCallsign.ToBuilder(System.Text.StringBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Goedel.Callsign.ProcessResultCallsign">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsign.CatalogedApplicationCallsign">
             <summary>
            The cataloged application
             </summary>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsign.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsign.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.ProcessResultCallsign._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.ProcessResultCallsign._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsign._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsign._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsign._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ProcessResultCallsign._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ProcessResultCallsign.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsign._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.ProcessResultCallsign.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.CallsignMapping">
            <summary>
            Maintains a collection of callsign mapping pages that map a callsign to a value. 
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignMapping.Pages">
            <summary>List of callsign code pages.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CallsignMapping.PageDictionary">
            <summary>Dictionary mapping page name to page.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CallsignMapping.Default">
            <summary>The default callsign mapping.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CallsignMapping.VariantList">
            <summary>List of variant characters specified in the code page.</summary> 
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.#ctor(System.Boolean)">
            <summary>
            Constructor returning a callsign mapping instance. 
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.Strip(System.String)">
            <summary>
            Strip the leading @ off a callsign if present.
            </summary>
            <param name="callsign">The callsign to strip</param>
            <returns>The stripped callsign.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.Validate(Goedel.Mesh.CallsignBinding)">
            <summary>
            Validate the callsign binding <paramref name="callsignBinding"/> for consistency of the
            presentation value according to the mapping rules specified.
            </summary>
            <param name="callsignBinding">The callsign binding to verify.</param>
            <returns>True if the mapping is valid, otherwise false.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.AddPage(Goedel.Callsign.Page)">
            <summary>
            Add the code page <paramref name="page"/>
            </summary>
            <param name="page">The code page to add.</param>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.MakeIndex">
            <summary>
            Create an index over the code page.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.CanonicalizeStripped(System.String)">
            <summary>
            Strip the callsign presentation <paramref name="presentation"/> and
            return the canonicalized form.
            </summary>
            <param name="presentation">The presentation of the callsign.</param>
            <returns>The stripped, canonical form of <paramref name="presentation"/>.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.Canonicalize(System.String)">
            <summary>
            Return the canonical form of the page <paramref name="presentation"/> according
            to the code page settings.
            </summary>
            <param name="presentation">The presentation to canonicalize</param>
            <returns>The canonical form of <paramref name="presentation"/>.</returns>
            <exception cref="T:Goedel.Callsign.InvalidCharacter">A character is invalid</exception>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.CheckPage(System.String,System.String)">
            <summary>
            Check to see if <paramref name="presentation"/> is valid within 
            the character page <paramref name="pageName"/> returning true is
            so and false otherwise.
            </summary>
            <param name="presentation">The presentation to check</param>
            <param name="pageName">Name of the page to check.</param>
            <returns>True if <paramref name="presentation"/> is valid within
            <paramref name="pageName"/>, otherwise false.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.CheckPage(System.Char,Goedel.Callsign.Page)">
            <summary>
            Check to see if <paramref name="c"/>is valid within 
            the character page <paramref name="page"/> returning true is
            so and false otherwise.
            </summary>
            <param name="c">The character to check</param>
            <param name="page">The page to check.</param>
            <returns>True if <paramref name="c"/> is valid within
            <paramref name="page"/>, otherwise false.</returns>
        </member>
        <member name="M:Goedel.Callsign.CallsignMapping.IsAllowed(System.Char,Goedel.Callsign.CharacterSpan@)">
            <summary>
            Returns true if the character <paramref name="c"/> is permitted
            in the character span <paramref name="characterSpan"/>. Otherwise,
            an exception is thrown.
            </summary>
            <param name="c"></param>
            <param name="characterSpan"></param>
            <returns></returns>
            <exception cref="T:Goedel.Utilities.NYI"></exception>
        </member>
        <member name="T:Goedel.Callsign.CallsignResolver">
             <summary>
            
             Callsign Registrar protocol supporting query function.
             Protocol interactions supported by the Mesh Service.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignResolver._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignResolver.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignResolver._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignResolver.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Callsign.ResolverService">
            <summary>
            The new base class for the client and service side APIs.
            </summary>		
        </member>
        <member name="F:Goedel.Callsign.ResolverService.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ResolverService.GetWellKnown">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.ResolverService.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ResolverService.GetDiscovery">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ResolverService.GetTagDictionary">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ResolverService.Dispatch(System.String,Goedel.Protocol.JsonObject,Goedel.Protocol.IJpcSession)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ResolverService.GetDirect(Goedel.Protocol.IJpcSession)">
            <summary>
            Return a client tapping the service API directly without serialization bound to
            the session <paramref name="jpcSession"/>. This is intended for use in testing etc.
            </summary>
            <param name="jpcSession">Session to which requests are to be bound.</param>
            <returns>The direct client instance.</returns>
        </member>
        <member name="M:Goedel.Callsign.ResolverService.Query(Goedel.Callsign.QueryRequest,Goedel.Protocol.IJpcSession)">
            <summary>
            Base method for implementing the transaction Query.
            </summary>
            <param name="request">The request object to send to the host.</param>
            <param name="session">The request context.</param>
            <returns>The response object from the service</returns>
        </member>
        <member name="M:Goedel.Callsign.ResolverService.Sync(Goedel.Callsign.SyncRequest,Goedel.Protocol.IJpcSession)">
            <summary>
            Base method for implementing the transaction Sync.
            </summary>
            <param name="request">The request object to send to the host.</param>
            <param name="session">The request context.</param>
            <returns>The response object from the service</returns>
        </member>
        <member name="T:Goedel.Callsign.ResolverServiceClient">
            <summary>
            Client class for ResolverService.
            </summary>		
        </member>
        <member name="F:Goedel.Callsign.ResolverServiceClient.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ResolverServiceClient.GetWellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ResolverServiceClient.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ResolverServiceClient.GetDiscovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ResolverServiceClient.Query(Goedel.Callsign.QueryRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="M:Goedel.Callsign.ResolverServiceClient.Sync(Goedel.Callsign.SyncRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="M:Goedel.Callsign.ResolverServiceClient.Query(System.String,System.String,System.String)">
            <summary>
            Perform a query attempting to resolve the callsign <paramref name="callSign"/>,
            </summary>
            <param name="callSign">The callsign to resolve.</param>
            <param name="registrationId">Optional registration identifier (used to query prior registrations)</param>
            <param name="logId">Optional log entry identifier (used to query prior registrations)</param>
            <returns>The query response</returns>
        </member>
        <member name="T:Goedel.Callsign.ResolverServiceDirect">
            <summary>
            Direct API class for ResolverService.
            </summary>		
        </member>
        <member name="P:Goedel.Callsign.ResolverServiceDirect.Service">
            <summary>
            Interface object to dispatch requests to.
            </summary>	
        </member>
        <member name="M:Goedel.Callsign.ResolverServiceDirect.Query(Goedel.Callsign.QueryRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="M:Goedel.Callsign.ResolverServiceDirect.Sync(Goedel.Callsign.SyncRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="T:Goedel.Callsign.ResolverRequest">
             <summary>
            
             Base class for all requests made to a registrar
             </summary>
        </member>
        <member name="M:Goedel.Callsign.ResolverRequest.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ResolverRequest.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.ResolverRequest._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.ResolverRequest._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.ResolverRequest._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ResolverRequest._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ResolverRequest._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ResolverRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ResolverRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ResolverRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.ResolverRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.ResolverResponse">
             <summary>
            
             Base class for all response messages. Contains only the
             status code and status description fields.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.ResolverResponse.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.ResolverResponse.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.ResolverResponse._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.ResolverResponse._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.ResolverResponse._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ResolverResponse._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ResolverResponse._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.ResolverResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.ResolverResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ResolverResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.ResolverResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.ResolverResponse.#ctor(System.Int32)">
            <summary>
            Constructor returning an instance of a resolver response.
            </summary>
            <param name="status">The status value to specify.</param>
        </member>
        <member name="T:Goedel.Callsign.QueryRequest">
             <summary>
            
             Request resolution of a profile bound to a callsign or registration identifier. 
             </summary>
        </member>
        <member name="P:Goedel.Callsign.QueryRequest.CallSign">
             <summary>
            The callsign being requested in canonical form.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.QueryRequest.RegistrationId">
             <summary>
            The registration identifier of a registration in the log.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.QueryRequest.LogId">
             <summary>
            The unique identifier of an append only log whose signed Notarization
            entry is requested.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.QueryRequest.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.QueryRequest.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.QueryRequest._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.QueryRequest._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.QueryRequest._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.QueryRequest._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.QueryRequest._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.QueryRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.QueryRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.QueryRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.QueryRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.QueryResponse">
             <summary>
            
             Return the result of a QueryRequest
             </summary>
        </member>
        <member name="P:Goedel.Callsign.QueryResponse.Result">
             <summary>
            The registration specified in the result (if found).	
             </summary>
        </member>
        <member name="P:Goedel.Callsign.QueryResponse.Notarization">
             <summary>
            The latest notarization entry corresponding to the specified log.
             </summary>
        </member>
        <member name="M:Goedel.Callsign.QueryResponse.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.QueryResponse.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.QueryResponse._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.QueryResponse._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.QueryResponse._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.QueryResponse._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.QueryResponse._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.QueryResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.QueryResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.QueryResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.QueryResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.QueryResponse.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.QueryResponse.#ctor(Goedel.Cryptography.Dare.Enveloped{Goedel.Callsign.Registration})">
            <summary>
            Constructor returning an instance for the registration value <paramref name="result"/>.
            </summary>
            <param name="result">The enveloped registration value.</param>
        </member>
        <member name="T:Goedel.Callsign.SyncRequest">
             <summary>
            
             
             </summary>
        </member>
        <member name="M:Goedel.Callsign.SyncRequest.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.SyncRequest.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.SyncRequest._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.SyncRequest._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.SyncRequest._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SyncRequest._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SyncRequest._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SyncRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.SyncRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.SyncRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.SyncRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.SyncResponse">
             <summary>
            
             
             </summary>
        </member>
        <member name="M:Goedel.Callsign.SyncResponse.Setter(System.String,Goedel.Protocol.TokenValue)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.SyncResponse.Getter(System.String)">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.SyncResponse._StaticProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="F:Goedel.Callsign.SyncResponse._StaticAllProperties">
            <summary>Dictionary describing the serializable properties.</summary> 
        </member>
        <member name="P:Goedel.Callsign.SyncResponse._AllProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SyncResponse._Properties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SyncResponse._ParentProperties">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.SyncResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.SyncResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.SyncResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.SyncResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="T:Goedel.Callsign.ResolveClient">
            <summary>
            Client resolver class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.ResolveClient.#ctor(Goedel.Callsign.ResolverServiceClient)">
            <summary>
            Constructor, returning an instance using the client <paramref name="client"/>.
            </summary>
            <param name="client">The client to use.</param>
        </member>
        <member name="M:Goedel.Callsign.ResolveClient.TryResolveCallsign(System.String,Goedel.Mesh.CallsignBinding@)">
            <inheritdoc/>
        </member>
        <member name="T:Goedel.Callsign.CatalogRegistration">
            <summary>
            Bookmark catalog. Describes the bookmarks in the user's Mesh account.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CatalogRegistration.Label">
            <summary>The canonical label for the catalog</summary>
        </member>
        <member name="P:Goedel.Callsign.CatalogRegistration.StoreType">
            <inheritdocs/>
        </member>
        <member name="P:Goedel.Callsign.CatalogRegistration.CallsignMapping">
            <summary>The callsign mapping to be applied to registrations in this catalog.</summary> 
        </member>
        <member name="P:Goedel.Callsign.CatalogRegistration.SequenceDefault">
            <summary>The catalog label</summary>
        </member>
        <member name="M:Goedel.Callsign.CatalogRegistration.Factory(System.String,System.String,Goedel.Mesh.IMeshClient,Goedel.Cryptography.Dare.DarePolicy,Goedel.Cryptography.Dare.CryptoParameters,Goedel.Cryptography.Dare.IKeyCollection,System.Boolean,System.Boolean,System.Byte[])">
            <summary>
            Factory delegate
            </summary>
            <param name="directory">Directory of store file on local machine.</param>
            <param name="storeId">Store identifier.</param>
            <param name="cryptoParameters">Cryptographic parameters for the store.</param>
            <param name="policy">The cryptographic policy to be applied to the catalog.</param>
            <param name="keyCollection">Key collection to be used to resolve keys</param>
            <param name="decrypt">If true, attempt decryption of payload contents./</param>
            <param name="create">If true, create a new file if none exists.</param>
            <param name="meshClient">Parent account context used to obtain a mesh client.</param>
            <param name="bitmask">The bitmask to identify the store for filtering purposes.</param>
            <returns>The instance created.</returns>
        </member>
        <member name="M:Goedel.Callsign.CatalogRegistration.#ctor(System.String,System.String,Goedel.Cryptography.Dare.DarePolicy,Goedel.Cryptography.Dare.CryptoParameters,Goedel.Cryptography.Dare.IKeyCollection,Goedel.Mesh.IMeshClient,System.Boolean,System.Boolean,System.Byte[])">
            <summary>
            Constructor for a catalog named <paramref name="storeName"/> in directory
            <paramref name="directory"/> using the cryptographic parameters <paramref name="cryptoParameters"/>
            and key collection <paramref name="keyCollection"/>.
            </summary>
            <param name="create">Create a new persistence store on disk if it does not already exist.</param>
            <param name="decrypt">Attempt to decrypt the contents of the catalog if encrypted.</param>
            <param name="directory">The directory in which the catalog persistence container is stored.</param>
            <param name="storeName">The catalog persistence container file name.</param>
            <param name="cryptoParameters">The default cryptographic enhancements to be applied to container entries.</param>
            <param name="policy">The cryptographic policy to be applied to the container.</param>
            <param name="keyCollection">The key collection to be used to resolve keys when reading entries.</param>
            <param name="meshClient">Parent account context used to obtain a mesh client.</param>
            <param name="bitmask">The bitmask to identify the store for filtering purposes.</param>
        </member>
        <member name="T:Goedel.Callsign.InvalidPresentation">
            <summary>
            An attempt was made to set the presentation property of a callsign
            to a value that does not match the canonical form of that callsign.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidPresentation.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidPresentation.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.InvalidPresentation.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.InvalidPresentation._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.InvalidPresentation.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.InvalidCharacter">
            <summary>
            </summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidCharacter.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.InvalidCharacter.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.InvalidCharacter.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.InvalidCharacter._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.InvalidCharacter.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.RegistrationRefused">
            <summary>
            The callsign registration was refused
            </summary>
        </member>
        <member name="P:Goedel.Callsign.RegistrationRefused.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.RegistrationRefused.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.RegistrationRefused.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.RegistrationRefused._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.RegistrationRefused.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.RequestTooLarge">
            <summary>
            The binding request was larger than the maximum permitted size.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.RequestTooLarge.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.RequestTooLarge.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.RequestTooLarge.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.RequestTooLarge._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.RequestTooLarge.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.CanonicalFormInvalid">
            <summary>
            The canonical form is not valid.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CanonicalFormInvalid.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.CanonicalFormInvalid.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.CanonicalFormInvalid.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.CanonicalFormInvalid._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.CanonicalFormInvalid.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.DisplayFormInvalid">
            <summary>
            The display form does not match the canonical form.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.DisplayFormInvalid.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.DisplayFormInvalid.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.DisplayFormInvalid.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.DisplayFormInvalid._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.DisplayFormInvalid.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.CallsignLengthInvalid">
            <summary>
            The length is invalid.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignLengthInvalid.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.CallsignLengthInvalid.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.CallsignLengthInvalid.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.CallsignLengthInvalid._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.CallsignLengthInvalid.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.RequestSignatureInvalid">
            <summary>
            The request signature is invalid.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.RequestSignatureInvalid.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.RequestSignatureInvalid.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.RequestSignatureInvalid.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.RequestSignatureInvalid._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.RequestSignatureInvalid.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.BindingSignatureInvalid">
            <summary>
            The binding signature is invalid.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.BindingSignatureInvalid.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.BindingSignatureInvalid.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.BindingSignatureInvalid.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.BindingSignatureInvalid._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.BindingSignatureInvalid.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.RequestNotAuthorized">
            <summary>
            The request is not authorized.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.RequestNotAuthorized.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.RequestNotAuthorized.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.RequestNotAuthorized.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.RequestNotAuthorized._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.RequestNotAuthorized.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.RequestRequiresPayment">
            <summary>
            The request requires payment.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.RequestRequiresPayment.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.RequestRequiresPayment.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.RequestRequiresPayment.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.RequestRequiresPayment._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.RequestRequiresPayment.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.PaymentInsufficient">
            <summary>
            The payment is insufficient.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.PaymentInsufficient.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.PaymentInsufficient.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.PaymentInsufficient.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.PaymentInsufficient._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.PaymentInsufficient.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.EventExtensions">
            <summary>
            Extensions class defining logging events and convenience methods.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.EventExtensions.#cctor">
            <summary>
            Static initializer, is called once when the module loads.
            </summary>
        </member>
        <member name="T:Goedel.Callsign.CallsignState">
            <summary>
            Callsign state values.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.CallsignState.Unregistered">
            <summary>The callsign is not registered.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CallsignState.Registered">
            <summary>The callsign is registered but not bound to a service address.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CallsignState.Bound">
            <summary>The callsign is registered and bound to a service address.</summary> 
        </member>
        <member name="F:Goedel.Callsign.CallsignState.Hold">
            <summary>The callsign is registered but the registration is on hold.</summary> 
        </member>
        <member name="T:Goedel.Callsign.ContextResolver">
            <summary>
            Context resolver class, binds a 
            </summary>
        </member>
        <member name="P:Goedel.Callsign.ContextResolver.ResolverServiceClient">
            <summary></summary> 
        </member>
        <member name="M:Goedel.Callsign.ContextResolver.#ctor(Goedel.Mesh.Client.ContextAccount)">
            <summary>
            Constructor returning an instance bound to the account context <paramref name="contextAccount"/>.
            </summary>
            <param name="contextAccount">The account context using the resolver.</param>
        </member>
        <member name="M:Goedel.Callsign.ContextResolver.TryResolveCallsign(System.String,Goedel.Mesh.CallsignBinding@)">
            <inheritdoc/>
        </member>
        <member name="T:Goedel.Callsign.Extensions">
            <summary>
            Extensions class. Provides static convenience extensions.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Extensions.GetResolver(Goedel.Mesh.Client.ContextAccount)">
            <summary>
            Return the callsign resolver for the account context <paramref name="contextAccount"/>.
            </summary>
            <param name="contextAccount">Account context.</param>
            <returns>The resolver.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Goedel.Callsign.Extensions.TryResolveCallsign(Goedel.Mesh.Client.ContextAccount,System.String,Goedel.Mesh.CallsignBinding@)">
            <summary>
            Attempt resolution of the callsign <paramref name="callsign"/> from the account context
            <paramref name="contextAccount"/>. If successful, the value true is returned and 
            the binding returned in <paramref name="callsignBinding"/>. Otherwise the value
            false is returned and null.
            </summary>
            <param name="contextAccount">Account context.</param>
            <param name="callsign">The callsign to query.</param>
            <param name="callsignBinding">The result of attempting to resolve the callsign.</param>
            <returns>True if the callsign resolved to a registration, otherwise false.</returns>
        </member>
        <member name="M:Goedel.Callsign.Extensions.CallsignRequest(Goedel.Mesh.Client.ContextUser,System.String,System.String,System.Boolean,Goedel.Mesh.ProfileAccount,System.String)">
            <summary>
            Make a callsign registration, binding or transfer request
            </summary>
            <param name="callsign">The presentation of the callsign to be registered.</param>
            <param name="bind">If true bind to the account context.</param>
            <param name="transfer">Transfer the callsign to the specified address.</param>
            <param name="contextAccount">The account context in which to make the request.</param>
            <param name="display">The display form of the callsign.</param>
            <param name="transferUdf">UDF of party to be given ability to control the callsign binding.</param>
        </member>
        <member name="M:Goedel.Callsign.Extensions.ResolveCallsign(Goedel.Mesh.Client.ContextAccount,System.String)">
            <summary>
            Resolve the callsign <paramref name="callsign"/> using the account context
            <paramref name="contextAccount"/>.
            </summary>
            <param name="contextAccount">The account context.</param>
            <param name="callsign">The callsign to resolve.</param>
            <returns>The callsign registration.</returns>
        </member>
        <member name="M:Goedel.Callsign.Extensions.CallsignRequestStatus(Goedel.Mesh.Client.ContextUser,System.String)">
            <summary>
            Return the status of the callsign registration <paramref name="callsign"/> within the 
            account context <paramref name="contextAccount"/>.
            </summary>
            <param name="contextAccount">The account context.</param>
            <param name="callsign">The callsign to query.</param>
            <returns></returns>
        </member>
        <member name="M:Goedel.Callsign.Extensions.CallsignTransfer(Goedel.Mesh.Client.ContextUser,System.String,System.String)">
            <summary>
            Transfer the callsign <paramref name="callsign"/> to <paramref name="recipient"/>.
            </summary>
            <param name="contextAccount">The account context to which the callsikgn is currently bound.</param>
            <param name="callsign">The callsign to transfer.</param>
            <param name="recipient">The party to receive the callsign.</param>
            <returns>The resulting registration request (if successful), otherwise
            throws an exception.</returns>
        </member>
        <member name="M:Goedel.Callsign.Extensions.GetProfile(Goedel.Mesh.Contact,System.String)">
            <summary>
            Return the Mesh profile bound to the address <paramref name="address"/>
            in the contact assertion <paramref name="contact"/>.
            </summary>
            <param name="contact">The contact assertion to return.</param>
            <param name="address">The address (used to disambiguate multiple 
            profiles bound to the same contact).</param>
            <returns>The account profile.</returns>
        </member>
        <member name="M:Goedel.Callsign.Extensions.ListCallsigns(Goedel.Mesh.Client.ContextUser)">
            <summary>
            List the callsigns owned by <paramref name="contextAccount"/>.
            </summary>
            <param name="contextAccount">The account context.</param>
            <returns>The list of callsign application bindings.</returns>
        </member>
        <member name="M:Goedel.Callsign.Extensions.ProcessMessage(Goedel.Mesh.Client.ContextUser,Goedel.Mesh.Message,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Process CallsignRegistrationResponse messages in context.
            </summary>
            <param name="contextUser">The user context to process the message.</param>
            <param name="meshMessage">The message to process, must be of type CallsignRegistrationResponse.</param>
            <param name="accept">Ignored</param>
            <param name="reciprocate">Ignored</param>
            <param name="roles">Ignored</param>
            <returns>The result of processing the message.</returns>
        </member>
        <member name="T:Goedel.Callsign.NamespaceDoc">
            <summary>
            Mesh Callsign registry implementation.
            </summary>
        </member>
    </members>
</doc>
