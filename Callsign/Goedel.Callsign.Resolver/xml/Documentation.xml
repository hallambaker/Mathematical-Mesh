<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Callsign.Resolver</name>
    </assembly>
    <members>
        <member name="T:Goedel.Callsign.Resolver.CallsignResolver">
             <summary>
            
             Callsign Registrar protocol supporting query function.
             Protocol interactions supported by the Mesh Service.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.CallsignResolver._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Resolver.CallsignResolver.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.CallsignResolver._TagDictionary">
            <summary>
            Dictionary mapping tags to factory methods
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.CallsignResolver.Deserialize(Goedel.Protocol.JsonReader,Goedel.Protocol.JsonObject@)">
            <summary>
            Construct an instance from the specified tagged JsonReader stream.
            </summary>
            <param name="jsonReader">Input stream</param>
            <param name="result">The created object</param>
        </member>
        <member name="T:Goedel.Callsign.Resolver.ResolverService">
            <summary>
            The new base class for the client and service side APIs.
            </summary>		
        </member>
        <member name="F:Goedel.Callsign.Resolver.ResolverService.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverService.GetWellKnown">
            <inheritdoc/>
        </member>
        <member name="F:Goedel.Callsign.Resolver.ResolverService.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverService.GetDiscovery">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverService.GetTagDictionary">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverService.Dispatch(System.String,Goedel.Protocol.JsonObject,Goedel.Protocol.IJpcSession)">
            <inheritdoc/>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverService.GetDirect(Goedel.Protocol.IJpcSession)">
            <summary>
            Return a client tapping the service API directly without serialization bound to
            the session <paramref name="jpcSession"/>. This is intended for use in testing etc.
            </summary>
            <param name="jpcSession">Session to which requests are to be bound.</param>
            <returns>The direct client instance.</returns>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverService.Query(Goedel.Callsign.Resolver.QueryRequest,Goedel.Protocol.IJpcSession)">
            <summary>
            Base method for implementing the transaction Query.
            </summary>
            <param name="request">The request object to send to the host.</param>
            <param name="session">The request context.</param>
            <returns>The response object from the service</returns>
        </member>
        <member name="T:Goedel.Callsign.Resolver.ResolverServiceClient">
            <summary>
            Client class for ResolverService.
            </summary>		
        </member>
        <member name="F:Goedel.Callsign.Resolver.ResolverServiceClient.WellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverServiceClient.GetWellKnown">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Resolver.ResolverServiceClient.Discovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverServiceClient.GetDiscovery">
            <summary>
            Well Known service identifier.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverServiceClient.Query(Goedel.Callsign.Resolver.QueryRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="T:Goedel.Callsign.Resolver.ResolverServiceDirect">
            <summary>
            Direct API class for ResolverService.
            </summary>		
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverServiceDirect.Service">
            <summary>
            Interface object to dispatch requests to.
            </summary>	
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverServiceDirect.Query(Goedel.Callsign.Resolver.QueryRequest)">
            <summary>
            Implement the transaction
            </summary>		
            <param name="request">The request object.</param>
            <returns>The response object</returns>
        </member>
        <member name="T:Goedel.Callsign.Resolver.ResolverRequest">
             <summary>
            
             Base class for all requests made to a registrar
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverRequest._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverRequest._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Resolver.ResolverRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverRequest.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverRequest.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverRequest.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Resolver.ResolverResponse">
             <summary>
            
             Base class for all response messages. Contains only the
             status code and status description fields.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverResponse._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverResponse._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.ResolverResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Resolver.ResolverResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverResponse.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverResponse.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Resolver.ResolverResponse.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Resolver.QueryRequest">
             <summary>
            
             Request resolution of a profile bound to a callsign or registration identifier. 
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryRequest.CallSign">
             <summary>
            The callsign being requested in canonical form.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryRequest.RegistrationId">
             <summary>
            The registration identifier of a registration in the log.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryRequest.LogId">
             <summary>
            The unique identifier of an append only log whose signed Notarization
            entry is requested.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryRequest._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryRequest._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryRequest._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Resolver.QueryRequest.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryRequest._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryRequest.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryRequest.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryRequest.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryRequest.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Resolver.QueryResponse">
             <summary>
            
             Return the result of a QueryRequest
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryResponse.Result">
             <summary>
            The registration specified in the result (if found).	
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryResponse.Notarization">
             <summary>
            The latest notarization entry corresponding to the specified log.
             </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryResponse._MetaDataParent">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryResponse._MetaData">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.QueryResponse._Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Resolver.QueryResponse.__Tag">
            <summary>
            Tag identifying this class
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryResponse._Factory">
            <summary>
            Factory method
            </summary>
            <returns>Object of this type</returns>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryResponse.Serialize(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            </summary>
            <param name="writer">Output stream</param>
            <param name="wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryResponse.SerializeX(Goedel.Protocol.Writer,System.Boolean,System.Boolean@)">
            <summary>
            Serialize this object to the specified output stream.
            Unlike the Serlialize() method, this method is not inherited from the
            parent class allowing a specific version of the method to be called.
            </summary>
            <param name="_writer">Output stream</param>
            <param name="_wrap">If true, output is wrapped with object
            start and end sequences '{ ... }'.</param>
            <param name="_first">If true, item is the first entry in a list.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryResponse.FromJson(Goedel.Protocol.JsonReader,System.Boolean)">
            <summary>
            Deserialize a tagged stream
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tagged">If true, the input is wrapped in a tag specifying the type</param>
            <returns>The created object.</returns>		
        </member>
        <member name="M:Goedel.Callsign.Resolver.QueryResponse.DeserializeToken(Goedel.Protocol.JsonReader,System.String)">
            <summary>
            Having read a tag, process the corresponding value data.
            </summary>
            <param name="jsonReader">The input stream</param>
            <param name="tag">The tag</param>
        </member>
        <member name="T:Goedel.Callsign.Resolver.CallsignResolverConfiguration">
            <summary>
            The Mesh service configuration.
            </summary>
        </member>
        <member name="F:Goedel.Callsign.Resolver.CallsignResolverConfiguration.ConfigurationEntry">
            <summary>The configuration entry.</summary> 
        </member>
        <member name="M:Goedel.Callsign.Resolver.CallsignResolverConfiguration.GetConfigurationEntry">
            <inheritdoc/>
        </member>
        <member name="P:Goedel.Callsign.Resolver.CallsignResolverConfiguration.Registry">
            <summary>The sevice address of the registry to resolve.</summary> 
        </member>
        <member name="T:Goedel.Callsign.Resolver.TBS">
            <summary>
            TBS
            </summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.TBS.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Callsign.Resolver.TBS.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.TBS.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Callsign.Resolver.TBS._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Callsign.Resolver.TBS.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Callsign.Resolver.EventExtensions">
            <summary>
            Extensions class defining logging events and convenience methods.
            </summary>
        </member>
        <member name="M:Goedel.Callsign.Resolver.EventExtensions.#cctor">
            <summary>
            Static initializer, is called once when the module loads.
            </summary>
        </member>
        <member name="T:Goedel.Callsign.Extensions">
            <summary>
            Extensions class. Provides static convenience extensions.
            </summary>
        </member>
        <member name="T:Goedel.CallSign.Registrar.NamespaceDoc">
            <summary>
            Desctiption of the 
            </summary>
        </member>
    </members>
</doc>
